---
title: "Stitching napari images programmatically"
author:
  - name: Evelyn Metzger
    orcid: 0000-0002-4074-9003
    affiliations: 
      - ref: nstg
      - ref: eveilyeverafter
toc: true
toc-title: Contents
toc-depth: 3
toc-expand: 2
toc-location: left
number-sections: true
number-depth: 4
date: "2024-05-23"
categories: [napari]
draft: false
#image: figures/prostate.gif
code-fold: false
description: Did you know that napari-cosmx can stitch images from AtoMx programmatically? In this post I show you how.
---

```{r}
#| eval: false
#| echo: false
#| label: "fig-pancreas"
#| fig-cap: "Nine Fields of View (FOVs) of a whole-transcriptome Pancreas dataset visualized with the `napari-cosmx` plugin. DAPI and PanCK are shown in blue and green, respectively. Endocrine cells in the Islets of Langerhans can be identified by their transcript abundance of marker genes (points). Red = _GCG_ (alpha cells), orange = _INS_ (beta cells), cyan = _SST_ (delta cells)."

knitr::include_graphics("./figures/pancreas.png")
```

# Introduction 

In our [previous post in our napari series](../using-napari-for-cosmx-data/index.qmd){target="_blank"}, 
we introduced our
`napari-cosmx` plugin that lets you view and analyze CosMx&#8482; SMI data that
has been exported from AtoMx&#8482; SIP. There, users can "stitch" raw data from AtoMx
using a widget within the Graphical User Interface (GUI). 

In some settings, such as linux servers, it's not possible to use a GUI to stitch.
In other cases, one might be interested in programmatically stitching many slides
without the need to use the GUI. And finally, with the GUI-based approach, 
we had to start [from an existing slide](../using-napari-for-cosmx-data/index.qmd#sec-loading-slides){target="_blank"}.
This 

This post is meant for individuals familiar with python. The example I'll use
will be the terminal from an RStudio IDE running on an AWS EC2 instance (Red Hat).

## Installation

Before we begin stitching, we need to install napari and the `napari-cosmx` plugin.
We've found that the success of installation depends on the particular package
versions and the version of python and we recommend using a virtual environment
such as python's built in [venv](https://docs.python.org/3/library/venv.html){target="_blank"} or [miniconda](https://docs.anaconda.com/free/miniconda/){target="_blank"}. For
this tutorial, I'll use X.

### Setting up virtual environment

Code goes here.


### Installing napari and `napari-cosmx`


## Stitching




## Conclusion













