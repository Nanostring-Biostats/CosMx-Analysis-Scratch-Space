---
title: "`napari-cosmx` essentials"
author:
  - name: Evelyn Metzger
    orcid: 0000-0002-4074-9003
    affiliations: 
      - ref: nstg
      - ref: eveilyeverafter
toc: true
toc-title: Contents
toc-depth: 3
toc-expand: 2
toc-location: left
number-sections: true
number-depth: 4
date: "2024-05-01"
categories: [napari]
draft: false
# image: figures/prostate.gif
code-fold: true
---

# Introduction 

This post is the third installment of our napari-series. In the [first blog post](../using-napari-for-cosmx-data/index.qmd){target="_blank"} I introduced the
`napari-cosmx` plugin, how CosMx&#8482; Spatial Molecular Imager (SMI) data
can be viewed as layers within napari, and a method for processing, 
or "stitching", raw data that are exported from AtoMx&#8482; Spatial Informatics
Portal (SIP). In the [second post](../napari-programmatically-stitching/stitching-programmatically.qmd){target="_blank"}
I showed power users a way to stitch batches of raw data. In that post I also
provided a preview of the programmatic ways one can interact with their SMI data.

In this post, I'll walk through some of the basic ways in which we can use `napari-cosmx`
to view SMI data. This will be a combination of Graphical User Interface (GUI)
how-tos as well as programmatic tips-n-trick. Let's get started!

# The Example Dataset

If you would like to follow along using your own data export from SIP, you will
need to stitch them by creating your [napari-ready files](../using-napari-for-cosmx-data/index.qmd#sec-napari-ready-files){target="_blank"}.

The example dataset that I am using is the mouse coronal hemisphere
dataset that is available to downloaded from NanoString's website [here](https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/cosmx-smi-mouse-brain-ffpe-dataset/){target="blank"}. We'll need to some slight file structure changes
to these raw data before we can stitch them because they are in a format that differs from the standard
AtoMx v1.3.2 export format. 

::: {.callout-note}
The raw data size for this example is 183 GBs. Stitching on my computer, an M1 Macbook. took about
XX minutes and had a peak resource use of XX GBs.
:::

Once downloaded, uncompress the `HalfBrain.zip` file on your computer. Stitching
can process with one of two approaches:

<!-- ## Formatting the example data -->

<!-- The data come in a variety of formats though napari -->
<!-- is not one of them. We therefore must download the `Coronal Hemisphere Raw Data Export` and use the technique from [this blog post](../napari-programmatically-stitching/stitching-programmatically.qmd){target="_blank"} -->
<!-- to create the napari-ready files. We will also make use of the cell typing data from -->
<!-- the `Seurat Object`. -->

::: {.panel-tabset group="language"}

## GUI Approach

In your Finder window, create a folder named `mouse_brain`.  Move the `HalfBrain/AnalysisResult/HalfBrain_20230406_205644_S1/AnalysisResults` to `mouse_brain/AnalysisResults`, 
Move the `HalfBrain/CellStatsDir/HalfBrain_20230406_205644_S1/CellStatsDir` to `mouse_brain/CellStatsDir`, and `HalfBrain/RunSummary/HalfBrain_20230406_205644_S1/RunSummary` to `mouse_brain/RunSummary`.

```{bash}
#| eval: false
#| label: tree

$ tree -f

TO DO
```

Once you have that formatted, use the [stitching widget method](../using-napari-for-cosmx-data/index.qmd#sec-stitch-images){target="_blank"}
to create the mouse brain napari files.

## Terminal/Unix Approach

We can use `stitch-images` and `read-targets` within our virtual environment 
to directly stitch our napari files. For more info, see our
[previous post](../napari-programmatically-stitching/stitching-programmatically.qmd){target="_blank"}.


```{bash}
#| label: stitching mouse brain programmatically
#| eval: false
#| label: tree

conda activate napari_stitching
cd /into/your/project/folder
unzip /path/to/your/downloaded/HalfBrain.zip
outdir = "mouse_brain_napari_files"
stitch-images -i /path/to/HalfBrain/AnalysisResult/HalfBrain_20230406_205644_S1/AnalysisResults \ 



```



:::

