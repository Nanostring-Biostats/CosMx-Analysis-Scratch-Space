<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Blog</title>
<link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/</link>
<atom:link href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/index.xml" rel="self" type="application/rss+xml"/>
<description>NanoString&#39;s CosMx Analysis Scratch Space</description>
<generator>quarto-1.5.54</generator>
<lastBuildDate>Wed, 03 Jul 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>Comparing AtoMx™ SIP flat files with the legacy format</title>
  <dc:creator>Evelyn Metzger</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/flat-file-exports/flat-files-compare.html</link>
  <description><![CDATA[ 





<p>There are different data formats and structures that can be exported from the <a href="https://nanostring.com/products/atomx-spatial-informatics-platform/atomx-sip-overview/" target="blank">AtoMx™</a> Spatial Informatics Portal (SIP). These include the raw data (<em>i.e.</em>, with CellStatsDir, RunSummary, and AnalysisResults folders), Seurat (with or without images), Tiledb, and “flat files”. The flat files get their name because they are in a human-readable and accessible format (<em>i.e.</em>, comma separated files). These files, like Seurat files and Tiledb files, aren’t actually raw data but are processed data and can include additional analysis results (<em>e.g.</em>, cell typing data).</p>
<p>The first use of the flat file format was about a year and a half ago when <span class="citation" data-cites="He2022">He et al. (2022)</span> released the first public <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/nsclc-ffpe-dataset/" target="_blank">CosMx™ SMI dataset</a>, consisting of ~800k cells with 980 RNA targets from multiple tissues of NSCLC FFPE. Now there are additional <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/" data-targets="_blank">public datasets</a> that span two species (mouse, human), four tissues (lung, liver, brain, pancreas), and three levels of plex (1k, 6k, whole transcriptome). Because the flat files generated in AtoMx SIP differ from the flat files in these public data releases, I thought it might be helpful to show a comparison.</p>
<p>Specifically, in this post I compare the flat files created for <code>Lung5_rep1</code> of the NSCLC dataset side-by-side with the updated (AtoMx 1.3.2) flat file format from an unrelated tissue. The specific values will be different since they are different datasets, of course, but the following side-by-sides show similarities and differences between the formats.</p>
<section id="sec-fov-pos" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> FOV positions flat file</h1>
<p>When we compare the FOV positions between old and new, you can see that the column name ‘fov’ has been changed to ‘FOV’ and the newer format includes global positions of the FOVs in units of mm in addition to pixels.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="version">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Legacy</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">AtoMx SIP v1.3.2</a></li></ul>
<div class="tab-content" data-group="version">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div id="tbl-fov-leg" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[10, 10, 80]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-fov-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Description of the legacy FOV positions file format. Δ = column name change between versions
</figcaption>
<div aria-describedby="tbl-fov-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Column Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>fov<img src="https://latex.codecogs.com/png.latex?%5E%7B%CE%94%7D"></td>
<td>Int</td>
<td>The field of view (FOV) number</td>
</tr>
<tr class="even">
<td>x_global_px</td>
<td>float</td>
<td>The x location (in pixels) of the FOV relative to other FOVs</td>
</tr>
<tr class="odd">
<td>y_global_px</td>
<td>float</td>
<td>The y location (in pixels) of the FOV relative to other FOVs</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<p>Example:</p>
<pre><code>  fov x_global_px y_global_px
  1    3188.889    155216.7
  2    8661.111    155216.7
  3   14133.333    155216.7
  4   19605.556    155216.7
  5   25077.778    155216.7
  6    3188.889    158866.7
  7    8661.111    158866.7
  8   14133.333    158866.7
  9   19605.556    158866.7
  10   25077.778    158866.7</code></pre>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div id="tbl-fov-new" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[10, 10, 80]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-fov-new-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: Description of the baseline FOV file format for AtoMx SIP v1.3.2. Δ = column name change between versions; * = new column in 1.3.2 compared to legacy
</figcaption>
<div aria-describedby="tbl-fov-new-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Column Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>FOV<img src="https://latex.codecogs.com/png.latex?%5E%7B%CE%94%7D"></td>
<td>Int</td>
<td>The field of view (FOV) number</td>
</tr>
<tr class="even">
<td>x_global_px</td>
<td>float</td>
<td>The x location (in pixels) of the FOV relative to other FOVs</td>
</tr>
<tr class="odd">
<td>y_global_px</td>
<td>float</td>
<td>The y location (in pixels) of the FOV relative to other FOVs</td>
</tr>
<tr class="even">
<td>x_global_mm<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>The x location (in millimeters) of the FOV relative to other FOVs</td>
</tr>
<tr class="odd">
<td>y_global_mm<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>The y location (in millimeters) of the FOV relative to other FOVs</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<pre><code>FOV x_global_px y_global_px x_global_mm y_global_mm
  1           0       29791   0.0000000    3.583410
  2        4255       29791   0.5119157    3.583410
  3        8511       29791   1.0238314    3.583410
  4       12767       29791   1.5357471    3.583410
  5       17023       29791   2.0476628    3.583410
  6       21279       29791   2.5595785    3.583410
  7       25535       29791   3.0714942    3.583410
  8       29791       29791   3.5834099    3.583410
  9           0       25535   0.0000000    3.071494
  10        4255       25535   0.5119157    3.071494</code></pre>
</div>
</div>
</div>
</section>
<section id="expression-matrix" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Expression Matrix</h1>
<p>For expression matrices, we see that NegPrb(\d+) is changed to Negative(\d+) and the newer format has SystemControls.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="version">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Legacy</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">AtoMx SIP v1.3.2</a></li></ul>
<div class="tab-content" data-group="version">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div id="tbl-fov-leg" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[15, 15, 70]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-fov-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;3: Description of the legacy expression matrix file format. Δ = column name change between versions
</figcaption>
<div aria-describedby="tbl-fov-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 70%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Column Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>fov</td>
<td>Int</td>
<td>The field of view (FOV) number</td>
</tr>
<tr class="even">
<td>cell_ID</td>
<td>Int</td>
<td>Unique identifier for a single cell within a given FOV. To make a unique identifier for a cell within the whole sample use both the <code>fov</code> and <code>cell_ID</code> columns. All transcripts not assigned to a cell are show with a <code>cell_ID</code> value of 0.</td>
</tr>
<tr class="odd">
<td>(Gene expression target)</td>
<td>Int</td>
<td>The number of transcripts observed for a given gene target for a given cell.</td>
</tr>
<tr class="even">
<td>(Negative Probe; <em>e.g.</em> NegPrb1)<img src="https://latex.codecogs.com/png.latex?%5E%7B%CE%94%7D"></td>
<td>Int</td>
<td>Negative probes, which do not match any sequence within the transcriptome or genome. These can be used to assess background levels.</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<p>Example:</p>
<pre><code>fov cell_ID AATK ... ZFP36 NegPrb3 ... NegPrb23
  1       0   15 ...   184      12 ...       13
  1       1    0 ...     0       0 ...        0
  1       2    0 ...     1       0 ...        0
  1       3    0 ...     0       0 ...        0
  1       4    0 ...     0       0 ...        0
  1       5    0 ...     0       0 ...        0
  1       6    0 ...     0       0 ...        0
  1       7    0 ...     1       0 ...        0
  1       8    0 ...     0       0 ...        0
  1       9    0 ...     0       0 ...        0</code></pre>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div id="tbl-exp-leg" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[15, 15, 70]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-exp-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;4: Description of the baseline expression matrix file format for AtoMx SIP v1.3.2. * = new column in 1.3.2 compared to legacy
</figcaption>
<div aria-describedby="tbl-exp-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 70%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Column Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>fov</td>
<td>Int</td>
<td>The field of view (FOV) number</td>
</tr>
<tr class="even">
<td>cell_ID</td>
<td>Int</td>
<td>Unique identifier for a single cell within a given FOV. To make a unique identifier for a cell within the whole sample use both the <code>fov</code> and <code>cell_ID</code> columns. All transcripts not assigned to a cell are show with a <code>cell_ID</code> value of 0.</td>
</tr>
<tr class="odd">
<td>(Gene expression target)</td>
<td>Int</td>
<td>The number of transcripts observed for a given gene target for a given cell.</td>
</tr>
<tr class="even">
<td>(Negative Probe, <em>e.g.,</em> Negative1)<img src="https://latex.codecogs.com/png.latex?%5E%7B%CE%94%7D"></td>
<td>Int</td>
<td>Negative probes, which do not match any sequence within the transcriptome or genome. These can be used to assess background levels.</td>
</tr>
<tr class="odd">
<td>(System Control)<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>System Control codes are codes which do not have any physical probe associated with them.</td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<p>Example:</p>
<pre><code>fov cell_ID A1BG ... ZZZ3 Negative1 ... Negative9 SystemControl1 ... SystemControl99
  1       1    0 ...    0         0 ...         0              0 ...               0
  1       2    0 ...    0         0 ...         0              0 ...               0
  1       3    0 ...    0         0 ...         0              0 ...               0
  1       4    1 ...    0         0 ...         0              0 ...               0
  1       5    0 ...    0         0 ...         0              0 ...               0
  1       6    0 ...    0         0 ...         0              0 ...               0
  1       7    0 ...    0         0 ...         0              0 ...               0
  1       8    0 ...    0         0 ...         0              0 ...               0
  1       9    1 ...    0         0 ...         0              0 ...               0
  1      10    0 ...    0         0 ...         0              0 ...               0</code></pre>
</div>
</div>
</div>
</section>
<section id="sec-meta" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Metadata file</h1>
<p>There are several differences to the metadata files between the legacy and current versions and I’ll highlight a few new additions below. One thing to note is that exported data from AtoMx SIP can have columns with analysis results in addition to the “baseline” columns.</p>
<p><em>Cell shape metrics</em> – In the legacy version, basic cell shape was described with <code>Area</code>, <code>Width</code>, <code>Height</code>, and <code>AspectRaio</code> (Table&nbsp;5). The new version of the metadata includes these plus four additional metrics that describe the cell shape (Table&nbsp;6). These are <code>perimeter</code>, <code>circularity</code>, <code>eccentricity</code>, and <code>solidity</code>. Perimeter is simply the perimeter of the cell in pixels and the latter three are defined in <span class="citation" data-cites="Fu2024">Fu et al. (2024)</span>.</p>
<p><em><code>SplitRatioToLocal</code></em> – for cells that are adjacent to the FOV boundaries, the <code>SplitRatioToLocal</code> metric measures the cell area relative to the mean area of cells in the FOVs. For 0 &lt; SplitRatioToLocal &lt; 1, the cell is smaller than average and for <code>SplitRatioToLocal</code> &gt; 1 the cell is larger than average. Note that a value of 0 means the cell is not along the border.</p>
<p><em>FOV-level metrics</em> – there are some columns that are added as FOV-level metrics. For example, <code>median_RNA</code> provides the median RNA target probe expression across all cells within a given FOV.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="version">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">Legacy Columns</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">AtoMx SIP v1.3.2</a></li></ul>
<div class="tab-content" data-group="version">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div id="tbl-meta-leg" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[10, 10, 80]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-meta-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;5: Description of the legacy metadata file format. Δ = column name change between versions; * = new column in 1.3.2 compared to legacy
</figcaption>
<div aria-describedby="tbl-meta-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Column Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>fov</td>
<td>Int</td>
<td>The field of view (FOV) number.</td>
</tr>
<tr class="even">
<td>cell_ID</td>
<td>Int</td>
<td>Unique identifier for a single cell within a given FOV. To make a unique identifier for a cell within the whole sample use both the <code>fov</code> and <code>cell_ID</code> columns.</td>
</tr>
<tr class="odd">
<td>Area</td>
<td>Int</td>
<td>Number of pixels assigned to a given cell.</td>
</tr>
<tr class="even">
<td>AspectRatio</td>
<td>float</td>
<td>Width divided by height.</td>
</tr>
<tr class="odd">
<td>CenterX_local_px</td>
<td>Int</td>
<td>The x position of this cell within the FOV, measured in pixels. The pixel edge length is 120 nm. Thus, to convert to microns multiply the pixel value by 0.12028 <img src="https://latex.codecogs.com/png.latex?%5Cmu">m per pixel.</td>
</tr>
<tr class="even">
<td>CenterY_local_px</td>
<td>Int</td>
<td>Same as <code>CenterX_local_px</code> but for the y dimension.</td>
</tr>
<tr class="odd">
<td>CenterX_global_px</td>
<td>float</td>
<td>See <code>CenterX_local_px</code> description. The global positions describes the relative position of this cell within the large sample reference frame.</td>
</tr>
<tr class="even">
<td>CenterY_global_px</td>
<td>float</td>
<td>Same as <code>CenterX_global_px</code> but for the y dimension.</td>
</tr>
<tr class="odd">
<td>Width</td>
<td>Int</td>
<td>Cell’s maximum length in x dimension (pixels).</td>
</tr>
<tr class="even">
<td>Height</td>
<td>Int</td>
<td>Cell’s maximum length in y dimension (pixels).</td>
</tr>
<tr class="odd">
<td>Mean.(IF)</td>
<td>Int</td>
<td>The mean fluorescence intensity for a given cell.</td>
</tr>
<tr class="even">
<td>Max.(IF)</td>
<td>Int</td>
<td>The max fluorescence intensity for a given cell.</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<p>Example:</p>
<pre><code>'data.frame':   6 obs. of  20 variables:
 $ fov               : int  1 1 1 1 1 1
 $ cell_ID           : int  1 2 3 4 5 6
 $ Area              : int  1259 3723 2010 3358 1213 2647
 $ AspectRatio       : num  1.34 1.45 1.62 0.47 1 1.38
 $ CenterX_local_px  : int  1027 2904 4026 4230 4258 66
 $ CenterY_local_px  : int  3631 3618 3627 3597 3629 3622
 $ CenterX_global_px : num  4216 6093 7215 7419 7447 ...
 $ CenterY_global_px : num  158848 158835 158844 158814 158846 ...
 $ Width             : int  47 87 68 48 38 72
 $ Height            : int  35 60 42 102 38 52
 $ Mean.MembraneStain: int  3473 3895 2892 6189 8138 5713
 $ Max.MembraneStain : int  7354 13832 6048 16091 19281 12617
 $ Mean.PanCK        : int  715 18374 3265 485 549 1220
 $ Max.PanCK         : int  5755 53158 37522 964 874 5107
 $ Mean.CD45         : int  361 260 378 679 566 433
 $ Max.CD45          : int  845 1232 908 2322 1242 957
 $ Mean.CD3          : int  22 13 19 5 17 11
 $ Max.CD3           : int  731 686 654 582 674 547
 $ Mean.DAPI         : int  4979 1110 10482 6065 3311 4151
 $ Max.DAPI          : int  26374 13229 33824 39512 30136 19269</code></pre>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>If analysis has been performed on AtoMx SIP prior to export, additional columns not presented here may be added to the metadata file. For example, if cell typing has been performed, there may be a column named <code>RNA_nbclust_[GUID]_1_clusters</code> containing the estimated cell type.</p>
</div>
</div>
<div id="tbl-meta-132" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[10, 10, 80]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-meta-132-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;6: Description of the baseline metadata file format for AtoMx SIP v1.3.2. Δ = column name change between versions; * = new column in 1.3.2 compared to legacy
</figcaption>
<div aria-describedby="tbl-meta-132-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Column Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>fov</td>
<td>Int</td>
<td>The field of view (FOV) number.</td>
</tr>
<tr class="even">
<td>Area</td>
<td>Int</td>
<td>Number of pixels assigned to a given cell.</td>
</tr>
<tr class="odd">
<td>AspectRatio</td>
<td>float</td>
<td>Width divided by height.</td>
</tr>
<tr class="even">
<td>CenterX_local_px</td>
<td>Int</td>
<td>The x position of this cell within the FOV, measured in pixels. The pixel edge length is 120 nm. Thus, to convert to microns multiply the pixel value by 0.12028 <img src="https://latex.codecogs.com/png.latex?%5Cmu">m per pixel.</td>
</tr>
<tr class="odd">
<td>CenterY_local_px</td>
<td>Int</td>
<td>Same as <code>CenterX_local_px</code> but for the y dimension.</td>
</tr>
<tr class="even">
<td>Width</td>
<td>Int</td>
<td>Cell’s maximum length in x dimension (pixels).</td>
</tr>
<tr class="odd">
<td>Height</td>
<td>Int</td>
<td>Cell’s maximum length in y dimension (pixels).</td>
</tr>
<tr class="even">
<td>Mean.(IF)</td>
<td>Int</td>
<td>The mean fluorescence intensity for a given cell.</td>
</tr>
<tr class="odd">
<td>Max.(IF)</td>
<td>Int</td>
<td>The max fluorescence intensity for a given cell.</td>
</tr>
<tr class="even">
<td>SplitRatioToLocal<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>If cell abuts the FOV border: the ratio of <code>Area</code> to mean cell area for that FOV. If cell does not border the FOV boundary: 0.</td>
</tr>
<tr class="odd">
<td>NucArea<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>Number of pixels assigned to a given nucleus.</td>
</tr>
<tr class="even">
<td>NucAspectRatio<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>Width divided by height of nucleus.</td>
</tr>
<tr class="odd">
<td>Circularity<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>Area to perimeter ratio. 1 = circle; &lt; 1 less circular <span class="citation" data-cites="Fu2024">(Fu et al. 2024)</span>.</td>
</tr>
<tr class="even">
<td>Eccentricity<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>A cell’s minor axis divided by its major axis <span class="citation" data-cites="Fu2024">(Fu et al. 2024)</span>.</td>
</tr>
<tr class="odd">
<td>Perimeter<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>The perimeter of the cell (in pixels)</td>
</tr>
<tr class="even">
<td>Solidity<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>The <code>Area</code> of the cell divided by its convex area. A measure of the “density” of a cell with values &lt; 1 indicating increased cell irregularity <span class="citation" data-cites="Fu2024">(Fu et al. 2024)</span></td>
</tr>
<tr class="odd">
<td>cell_id<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>string</td>
<td>A study-wide unique cell identifier. Combination of c(ell), <code>slide_ID</code>, <code>fov</code>, and <code>cell_ID</code>. Note that this is equivalent to <code>cell_ID</code> in <code>napari-cosmx</code>.</td>
</tr>
<tr class="even">
<td>assay_type<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>string</td>
<td>The assay type (Protein or RNA)</td>
</tr>
<tr class="odd">
<td>version<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>string</td>
<td>The version of the target decoding used.</td>
</tr>
<tr class="even">
<td>Run_Tissue_name<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>string</td>
<td>The name of the slide.</td>
</tr>
<tr class="odd">
<td>Panel<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>string</td>
<td>The panel that was assayed.</td>
</tr>
<tr class="even">
<td>cellSegmentationSetId<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D">.</td>
<td>string</td>
<td>The cell segmentation set ID.</td>
</tr>
<tr class="odd">
<td>cellSegmentationSetName<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>string</td>
<td>The cell segmentation set name.</td>
</tr>
<tr class="even">
<td>slide_ID<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>Unique identifier for the slide.</td>
</tr>
<tr class="odd">
<td>CenterX_global_px</td>
<td>float</td>
<td>See <code>CenterX_local_px</code> description. The global positions describes the relative position of this cell within the large sample reference frame.</td>
</tr>
<tr class="even">
<td>CenterY_global_px</td>
<td>float</td>
<td>Same as <code>CenterX_global_px</code> but for the y dimension.</td>
</tr>
<tr class="odd">
<td>cell_ID</td>
<td>Int</td>
<td>Unique identifier for a single cell within a given FOV. To make a unique identifier for a cell within the whole sample use both the <code>fov</code> and <code>cell_ID</code> columns.</td>
</tr>
<tr class="even">
<td>unassignedTranscripts<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>Proportion of transcripts in the FOV the cell resides in that are not assigned within any cell. This value is an FOV-level metric that is repeated for each cell (excluding cell 0).</td>
</tr>
<tr class="odd">
<td>median_RNA<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>FOV-level statistic. Median RNA target probe expression across all cells within a given FOV.</td>
</tr>
<tr class="even">
<td>RNA_quantile_(proportion)<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>FOV-level statistic. The (proportion*100) percentile of RNA target expression across all cells within a given FOV.</td>
</tr>
<tr class="odd">
<td>nCount_RNA<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>Total RNA transcripts observed.</td>
</tr>
<tr class="even">
<td>nFeature_RNA<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>Total number of unique RNA transcripts observed.</td>
</tr>
<tr class="odd">
<td>median_negprobes<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>FOV-level statistic. Median negative probe expression across all cells within a given FOV.</td>
</tr>
<tr class="even">
<td>negprobes_quantile_(proportion)<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>FOV-level statistic. The (proportion*100) percentile of negative probe expression across all cells within a given FOV.</td>
</tr>
<tr class="odd">
<td>nCount_negprobes<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>Total Negative Control Probe counts observed.</td>
</tr>
<tr class="even">
<td>nFeature_negprobes<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>Total number of unique Negative Control Probe counts observed.</td>
</tr>
<tr class="odd">
<td>median_falsecode<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>FOV-level statistic. Median System Control counts across all cells within a given FOV.</td>
</tr>
<tr class="even">
<td>falsecode_quantile_(proportion)<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>FOV-level statistic. The (proportion*100) percentile of System Control counts across all cells within a given FOV.</td>
</tr>
<tr class="odd">
<td>nCount_falsecode<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>Total System Control codes counts observed. These codes do not have a physical probe in the experiment.</td>
</tr>
<tr class="even">
<td>nFeature_falsecode<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>Int</td>
<td>Total number of unique System Control codes counts observed.</td>
</tr>
<tr class="odd">
<td>Area.um2<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>float</td>
<td>The cell area in units of <img src="https://latex.codecogs.com/png.latex?%5Cmu%20m%5E%7B2%7D"></td>
</tr>
<tr class="even">
<td>cell<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>string</td>
<td>Redundant with <code>cell_id</code></td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<p>Example:</p>
<pre><code>'data.frame':   6 obs. of  65 variables:
 $ fov                    : int  1 1 1 1 1 1
 $ Area                   : int  3037 8790 5552 5822 4008 3603
 $ AspectRatio            : num  0.67 0.95 0.77 0.9 0.97 0.88
 $ CenterX_local_px       : int  3938 2741 3888 4214 4137 4163
 $ CenterY_local_px       : int  25 52 57 73 152 187
 $ Width                  : int  76 110 96 81 78 83
 $ Height                 : int  51 104 74 90 76 73
 $ Mean.B                 : int  41 425 88 197 73 91
 $ Max.B                  : int  252 2308 952 604 552 364
 $ Mean.G                 : int  50 1270 154 48 22 26
 $ Max.G                  : int  1192 6960 4192 184 380 160
 $ Mean.Y                 : int  106 366 254 235 97 196
 $ Max.Y                  : int  1228 2864 3884 1340 828 904
 $ Mean.R                 : int  36 62 221 20 4 16
 $ Max.R                  : int  2360 1044 5604 104 60 232
 $ Mean.DAPI              : int  92 37 181 288 237 324
 $ Max.DAPI               : int  408 236 924 1060 800 928
 $ SplitRatioToLocal      : num  0.7 2.01 0 1.33 0 0
 $ NucArea                : int  1252 0 1180 2384 1284 1536
 $ NucAspectRatio         : num  0.77 0 1 0.94 0.95 0.81
 $ Circularity            : num  0.92 1.05 1.03 1.03 0.94 0.83
 $ Eccentricity           : num  0.76 0.82 0.79 0.71 0.9 0.82
 $ Perimeter              : int  204 324 260 266 231 233
 $ Solidity               : num  14.9 27.1 21.4 21.9 17.4 ...
 $ cell_id                : chr  "c_1_1_1" "c_1_1_2" "c_1_1_3" "c_1_1_4" ...
 $ assay_type             : chr  "RNA" "RNA" "RNA" "RNA" ...
 $ version                : chr  "v6" "v6" "v6" "v6" ...
 $ Run_Tissue_name        : chr  "example_tissue" "example_tissue" "example_tissue" "example_tissue" ...
 $ Panel                  : chr  "Human RNA 6k Discovery" "Human RNA 6k Discovery" "Human RNA 6k Discovery" "Human RNA 6k Discovery" ...
 $ cellSegmentationSetId  : chr  " a343598a-ed40-4a93-a655-49bc7688021d" " a343598a-ed40-4a93-a655-49bc7688021d" " a343598a-ed40-4a93-a655-49bc7688021d" " a343598a-ed40-4a93-a655-49bc7688021d" ...
 $ cellSegmentationSetName: chr  " Initial Segmentation" " Initial Segmentation" " Initial Segmentation" " Initial Segmentation" ...
 $ slide_ID               : int  1 1 1 1 1 1
 $ CenterX_global_px      : int  21057 19860 21007 21333 21256 21282
 $ CenterY_global_px      : int  68070 68043 68038 68022 67943 67908
 $ cell_ID                : int  1 2 3 4 5 6
 $ unassignedTranscripts  : num  0.0349 0.0349 0.0349 0.0349 0.0349 ...
 $ median_RNA             : int  86 86 86 86 86 86
 $ RNA_quantile_0.75      : int  126 126 126 126 126 126
 $ RNA_quantile_0.8       : int  139 139 139 139 139 139
 $ RNA_quantile_0.85      : int  157 157 157 157 157 157
 $ RNA_quantile_0.9       : int  182 182 182 182 182 182
 $ RNA_quantile_0.95      : int  240 240 240 240 240 240
 $ RNA_quantile_0.99      : num  512 512 512 512 512 ...
 $ nCount_RNA             : int  138 295 234 344 230 249
 $ nFeature_RNA           : int  86 182 152 217 148 132
 $ median_negprobes       : int  9 9 9 9 9 9
 $ negprobes_quantile_0.75: int  126 126 126 126 126 126
 $ negprobes_quantile_0.8 : int  139 139 139 139 139 139
 $ negprobes_quantile_0.85: int  157 157 157 157 157 157
 $ negprobes_quantile_0.9 : int  182 182 182 182 182 182
 $ negprobes_quantile_0.95: int  240 240 240 240 240 240
 $ negprobes_quantile_0.99: num  512 512 512 512 512 ...
 $ nCount_negprobes       : int  0 0 1 0 0 0
 $ nFeature_negprobes     : int  0 0 1 0 0 0
 $ median_falsecode       : int  4 4 4 4 4 4
 $ falsecode_quantile_0.75: int  126 126 126 126 126 126
 $ falsecode_quantile_0.8 : int  139 139 139 139 139 139
 $ falsecode_quantile_0.85: int  157 157 157 157 157 157
 $ falsecode_quantile_0.9 : int  182 182 182 182 182 182
 $ falsecode_quantile_0.95: int  240 240 240 240 240 240
 $ falsecode_quantile_0.99: num  512 512 512 512 512 ...
 $ nCount_falsecode       : int  1 0 0 1 1 1
 $ nFeature_falsecode     : int  1 0 0 1 1 1
 $ Area.um2               : num  43.9 127.2 80.3 84.2 58 ...
 $ cell                   : chr  "c_1_1_1" "c_1_1_2" "c_1_1_3" "c_1_1_4" ...</code></pre>
</div>
</div>
</div>
</section>
<section id="transcript-coordinates-file" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Transcript coordinates file</h1>
<p>Main differences between versions:</p>
<ul>
<li>The contents of the <code>CellComp</code> column differ between version. In the current version “None” replaces “0”. The other three regions–Membrane, Nuclear, Cytoplasm–are unchanged.</li>
<li><code>cell</code> column is added to the newer version.</li>
</ul>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="version">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">Legacy</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">AtoMx SIP v1.3.2</a></li></ul>
<div class="tab-content" data-group="version">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div id="tbl-tx-leg" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[10, 10, 80]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-tx-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;7: Description of the legacy transcripts file format. ‡ = contents changed between versions
</figcaption>
<div aria-describedby="tbl-tx-leg-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Column Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>fov</td>
<td>Int</td>
<td>The field of view (FOV) number.</td>
</tr>
<tr class="even">
<td>cell_ID</td>
<td>Int</td>
<td>Unique identifier for a single cell within a given FOV. To make a unique identifier for a cell within the whole sample use both the <code>fov</code> and <code>cell_ID</code> columns.</td>
</tr>
<tr class="odd">
<td>x_global_px</td>
<td>float</td>
<td>The x position (in pixels) relative to the tissue.</td>
</tr>
<tr class="even">
<td>y_global_px</td>
<td>float</td>
<td>The y position (in pixels) relative to the tissue.</td>
</tr>
<tr class="odd">
<td>x_local_px</td>
<td>float</td>
<td>The x position (in pixels) relative to the given FOV.</td>
</tr>
<tr class="even">
<td>y_local_px</td>
<td>float</td>
<td>The y position (in pixels) relative to the given FOV.</td>
</tr>
<tr class="odd">
<td>z</td>
<td>Int</td>
<td>The z plane.</td>
</tr>
<tr class="even">
<td>target</td>
<td>string</td>
<td>The name of the target.</td>
</tr>
<tr class="odd">
<td>CellComp‡</td>
<td>string</td>
<td>Subcellular location of target.</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<p>Example:</p>
<pre><code>fov cell_ID x_global_px y_global_px x_local_px y_local_px  z  target CellComp
  1       0    6757.402    158836.4   3568.513  3619.7375 11   NEAT1        0
  1       0    5111.389    156060.2   1922.500   843.5334 11   NEAT1        0
  1       0    7860.461    157809.3   4671.572  2592.6715 11    CCR2        0
  1       0    3790.489    155553.9    601.600   337.2168 11 HLA-DRA        0
  1       0    3290.639    158023.6    101.750  2806.9750 11 HLA-DRA Membrane
  1       0    7020.160    158656.3   3831.271  3439.6000 11     VHL        0
  1       0    4252.914    157003.0   1064.025  1786.3376 11    FZD5  Nuclear
  1       0    5987.309    157572.5   2798.420  2355.8000 11    CD37        0
  1       0    5586.849    157774.2   2397.960  2557.5599 11   ATG12 Membrane</code></pre>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div id="tbl-tx-132" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[10, 10, 80]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-tx-132-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;8: Description of the baseline transcripts file format for AtoMx SIP v1.3.2. * = new column in 1.3.2 compared to legacy; ‡ = contents changed between versions
</figcaption>
<div aria-describedby="tbl-tx-132-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Column Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>fov</td>
<td>Int</td>
<td>The field of view (FOV) number.</td>
</tr>
<tr class="even">
<td>cell_ID</td>
<td>Int</td>
<td>Unique identifier for a single cell within a given FOV. To make a unique identifier for a cell within the whole sample use both the <code>fov</code> and <code>cell_ID</code> columns.</td>
</tr>
<tr class="odd">
<td>cell<img src="https://latex.codecogs.com/png.latex?%5E%7B*%7D"></td>
<td>string</td>
<td>A study-wide unique cell identifier. Combination of c(ell), slide ID, <code>fov</code>, and <code>cell_ID</code>. Note that this is equivalent to <code>cell_ID</code> in <code>napari-cosmx</code>.</td>
</tr>
<tr class="even">
<td>x_local_px</td>
<td>float</td>
<td>The x position (in pixels) relative to the given FOV.</td>
</tr>
<tr class="odd">
<td>y_local_px</td>
<td>float</td>
<td>The y position (in pixels) relative to the given FOV.</td>
</tr>
<tr class="even">
<td>x_global_px</td>
<td>float</td>
<td>The x position (in pixels) relative to the tissue.</td>
</tr>
<tr class="odd">
<td>y_global_px</td>
<td>float</td>
<td>The y position (in pixels) relative to the tissue.</td>
</tr>
<tr class="even">
<td>z</td>
<td>Int</td>
<td>The z plane.</td>
</tr>
<tr class="odd">
<td>target</td>
<td>string</td>
<td>The name of the target.</td>
</tr>
<tr class="even">
<td>CellComp‡</td>
<td>string</td>
<td>Subcellular location of target.</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<p>Example:</p>
<pre><code> fov cell_ID        cell       x_local_px y_local_px x_global_px y_global_px   z   target  CellComp
  30    4755 c_1_30_4755 29337.6332465278   173483.2   4259.8555    16.57764   3      B2M Cytoplasm         
  30    4755 c_1_30_4755 29340.4174262153   173488.4   4262.6396    21.71997   3   COL3A1 Cytoplasm         
  30    4757 c_1_30_4757 29593.4975043403   173480.9   4515.7197    14.27002   8    RPL32 Cytoplasm         
  30    4759 c_1_30_4759 25211.3444434272   173477.6    133.5667    10.95020   6   COL1A1 Cytoplasm         
  30    4759 c_1_30_4759 25224.5611029731   173483.9    146.7833    17.28320   6   COL1A2 Cytoplasm         
  30    4760 c_1_30_4760 25902.6278143989   173480.8    824.8500    14.11694   7   TPSAB1 Cytoplasm         
  30    4760 c_1_30_4760 25924.0527411567   173477.8    846.2750    11.10010   1 HSP90AB1 Cytoplasm         
  30    4760 c_1_30_4760 25925.7694159614   173478.0    847.9916    11.34155   6     GLUL Cytoplasm         
  30    4760 c_1_30_4760 25914.4152899848   173478.9    836.6375    12.27515   6   ADGRE2 Cytoplasm         
  30    4760 c_1_30_4760 25902.9277411567   173480.7    825.1500    14.07520   8   TPSAB1 Cytoplasm   </code></pre>
</div>
</div>
</div>
</section>
<section id="polygons-file" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Polygons file</h1>
<p>The polygons file was added to the list of flat files and shows the vertices of each cell’s polygon.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="version">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true">Legacy</a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false">AtoMx SIP v1.3.2</a></li></ul>
<div class="tab-content" data-group="version">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<p>(Not applicable)</p>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div id="tbl-poly-132" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[10, 10, 80]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-poly-132-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;9: Description of the baseline polygons file format for AtoMx SIP v1.3.2.
</figcaption>
<div aria-describedby="tbl-poly-132-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Column Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>fov</td>
<td>Int</td>
<td>The field of view (FOV) number.</td>
</tr>
<tr class="even">
<td>cell_ID</td>
<td>Int</td>
<td>Unique identifier for a single cell within a given FOV. To make a unique identifier for a cell within the whole sample use both the <code>fov</code> and <code>cell_ID</code> columns.</td>
</tr>
<tr class="odd">
<td>cell</td>
<td>string</td>
<td>A study-wide unique cell identifier. Combination of c(ell), slide ID, and <code>cell_ID</code>. Note that this is equivalent to <code>cell_ID</code> in <code>napari-cosmx</code>.</td>
</tr>
<tr class="even">
<td>x_local_px</td>
<td>float</td>
<td>The x position (in pixels) of vertex relative to the given FOV.</td>
</tr>
<tr class="odd">
<td>y_local_px</td>
<td>float</td>
<td>The y position (in pixels) of vertex relative to the given FOV.</td>
</tr>
<tr class="even">
<td>x_global_px</td>
<td>float</td>
<td>The x position (in pixels) of vertex relative to the tissue.</td>
</tr>
<tr class="odd">
<td>y_global_px</td>
<td>float</td>
<td>The y position (in pixels) of vertex relative to the tissue.</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<p>Example:</p>
<p>This example below shows the vertices of cell <code>c_1_2_3</code>.</p>
<pre><code>  fov cellID    cell x_local_px y_local_px x_global_px y_global_px
  2      3 c_1_2_3        279          0        4535       29792
  2      3 c_1_2_3        279          1        4535       29791
  2      3 c_1_2_3        270         15        4526       29777
  2      3 c_1_2_3        266         20        4522       29772
  2      3 c_1_2_3        234         53        4490       29739
  2      3 c_1_2_3        223         64        4479       29728
  2      3 c_1_2_3        214         71        4470       29721
  2      3 c_1_2_3        210         72        4466       29720
  2      3 c_1_2_3        199         72        4455       29720
  2      3 c_1_2_3        186         66        4442       29726
  2      3 c_1_2_3        182         64        4438       29728
  2      3 c_1_2_3        179         62        4435       29730
  2      3 c_1_2_3        176         31        4432       29761
  2      3 c_1_2_3        176          4        4432       29788
  2      3 c_1_2_3        179          0        4435       29792</code></pre>
</div>
</div>
</div>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-Fu2024" class="csl-entry">
Fu, Xiaohang, Yingxin Lin, David M. Lin, Daniel Mechtersheimer, Chuhan Wang, Farhan Ameen, Shila Ghazanfar, Ellis Patrick, Jinman Kim, and Jean Y. H. Yang. 2024. <span>“BIDCell: Biologically-Informed Self-Supervised Learning for Segmentation of Subcellular Spatial Transcriptomics Data.”</span> <em>Nature Communications</em> 15 (January): 509. <a href="https://doi.org/10.1038/s41467-023-44560-w">https://doi.org/10.1038/s41467-023-44560-w</a>.
</div>
<div id="ref-He2022" class="csl-entry">
He, Shanshan, Ruchir Bhatt, Carl Brown, Emily A Brown, Derek L Buhr, Kan Chantranuvatana, Patrick Danaher, et al. 2022. <span>“High-Plex Imaging of RNA and Proteins at Subcellular Resolution in Fixed Tissue by Spatial Molecular Imaging.”</span> <em>Nature Biotechnology</em> 40 (December): 1794–1806. <a href="https://doi.org/10.1038/s41587-022-01483-z">https://doi.org/10.1038/s41587-022-01483-z</a>.
</div>
</div></section></div> ]]></description>
  <category>flat files</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/flat-file-exports/flat-files-compare.html</guid>
  <pubDate>Wed, 03 Jul 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/flat-file-exports/figures/fig-fig1.png" medium="image" type="image/png" height="79" width="144"/>
</item>
<item>
  <title>Using Squidpy with AtoMx™ SIP exports</title>
  <dc:creator>Evelyn Metzger</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/squidpy-essentials.html</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Elucidating the spatial distribution of RNA transcripts and protein is one of the fundamental utilities of the <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/single-cell-imaging-overview/" target="_blank">CosMx™</a> Spatial Molecular Imager (SMI). When it comes to analysis, the <a href="https://nanostring.com/products/atomx-spatial-informatics-platform/atomx-sip-overview/" target="blank">AtoMx™</a> Spatial Informatics Portal (SIP) is an end-to-end solution that has several advantages including built-in analysis modules, data storage, and the ability to analyze from a browser window. For fully custom analyses, the SIP also has the ability to export the data.</p>
<p>There are a growing number of open-sourced analysis solutions that can analyze and visualize SMI data. For example, <a href="https://giottosuite.readthedocs.io/en/latest/subsections/datasets/Nanostring_Lung12.html" target="_blank">Giotto</a> <span class="citation" data-cites="Dries2021">(Dries et al. 2021)</span> has been available for a few years, uses a range of algorithms, and has ways to visualize tissue images built in. More recently, Seurat <span class="citation" data-cites="Hao2024">(Hao et al. 2024)</span>, another R package (and another artist!), has added image viewing capabilities into its workflow. For vignettes on how to analyze and visualize SMI data with Seurat, check out <a href="../../posts/seurat-cosmx-basics/index.html" target="_blank">our recent blog post</a> or the vignette from <a href="https://satijalab.org/seurat/articles/seurat5_spatial_vignette_2#human-lung-nanostring-cosmx-spatial-molecular-imager" target="_blank">Seurat’s website</a>.</p>
<p>For python users, I find <a href="https://squidpy.readthedocs.io/en/stable/" target="_blank">squidpy</a> <span class="citation" data-cites="Palla2022">(Palla et al. 2022)</span> works well, is feature-rich, and is speedy. Part of this efficiency is thanks to the <a href="https://anndata.readthedocs.io/en/stable/" target="_blank">anndata</a> package. For more info on creating anndata objects with SMI data, see <a href="../../posts/h5ad_conversion/index.html">this post</a>. Squidpy also has a built-in function to read in SMI data, <a href="https://squidpy.readthedocs.io/en/stable/api/squidpy.read.nanostring.html" target="_blank"><code>read.nanostring</code></a>, that reads in the counts data, metadata, and optionally the field of view (FOV) file and image data. The developers also have a <a href="https://squidpy.readthedocs.io/en/stable/notebooks/tutorials/tutorial_nanostring.html#analyze-nanostring-data" target="_blank">vignette</a> that uses a slide from the <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/nsclc-ffpe-dataset/" target="_blank">first public data release</a> of SMI data <span class="citation" data-cites="He2022">(He et al. 2022)</span>. Note that the example dataset in that vignette uses a legacy file format that differs slightly compared to AtoMx SIP. For more information on the differences, see <a href="../../posts/flat-file-exports/flat-files-compare.html">this post</a>.</p>
<p>In this blog post, I’ll show you how to:</p>
<ul>
<li>Section&nbsp;2 export the squidpy-relevant files from AtoMx SIP</li>
<li>Section&nbsp;3 (and Appendix Section&nbsp;7.1) tips for installing squidpy</li>
<li>Section&nbsp;4 analysis examples without spatial images</li>
<li>Section&nbsp;5 how to pivot your AtoMx SIP-exported data into a format that can be used with squidpy and image-based analysis examples</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>In this blog post I provide some analysis examples but this is not intended to provide recommendations of parameters, clustering approaches, <em>etc</em>. I have not tested my example dataset on all of the squidpy functions so there may be errors.</p>
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies.</p>
</div>
</div>
</section>
<section id="sec-export" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Exporting data from AtoMx™ SIP</h1>
<p>For this post I will be analyzing a single breast cancer slide that has about 80,000 cells, 64 FOVs, and with the <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/cosmx-rna-assays/human-6k-discovery-panel/">6K Discovery Panel</a>. I’m using the CosMx Data Analysis v1.3.2 software in AtoMx SIP. To take full advantage of squidpy’s functionality, I’ll need to partially export 1) “flat files” and 2) raw data (Figure&nbsp;1).</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>We call them “flat files” since they are in a human-readable and accessible format (<em>i.e.</em>, comma separated files). These files, like Seurat files and Tiledb files, aren’t actually raw data but rather processed from the raw data. Versions of flat files may change with time and over the course of an analysis (<em>e.g.</em>, cell type column added to the metadata file as highlighted in <a href="../../posts/flat-file-exports/flat-files-compare.html">this post</a>).</p>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-export" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-export-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-export1.png" class="img-fluid figure-img" width="1320">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-export-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Selected flat files and raw data for exporting.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Squidpy uses three of the five flat files:</p>
<p>The two required input files for squidpy are:</p>
<ul>
<li>counts_file - cell (row) by target (column) expression matrix</li>
<li>meta_file - cell-level metadata file</li>
</ul>
<p>And an optional input file is:</p>
<ul>
<li>fov_file - containing coordinates of all FOVs.</li>
</ul>
<p>Once export is complete, download the data using your SFTP application (<em>e.g.</em>, cyberduck, FileZilla, WinSCP).</p>
<p>Figure&nbsp;2 shows a screenshot of the data structure in Cyberduck. The flat files are nested within a folder named after the flow cell (<em>e.g.</em>, <code>AUG29_13INTEGR_6k_BRST_PS_S2</code>) and are compressed in <code>gz</code> format. The raw data are in a separate folder and nested within a folder named after the flow cell and another folder named after the slide (<em>e.g.</em>, <code>20230829_212648_S2</code>). Of the subfolders of the raw data, the data that we’ll need for today are in <code>CellStatsDir</code>.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-export2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-export2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-export2.png" class="img-fluid figure-img" width="446">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-export2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Folder structure following AtoMx SIP export.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="sec-install" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Install Squidpy</h1>
<p>Assuming you have Python3 installed on your system, squidpy can be installed using <code>pip3</code> like this:</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">pip3 install squidpy</span></code></pre></div>
</div>
</div>
<p>For installing within a virtual environment (recommended), see the Appendix (Section&nbsp;7.1).</p>
</section>
<section id="sec-noimage" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Analysis without imaging data</h1>
<p>In the simplest form, we can use squidpy without imaging data by reading the expression data, metadata, and optionally the FOV positions data. These analyses include normalization, PCA, umap, <em>etc.</em> I’ll provide some code here but for more details please see the squidpy <a href="https://squidpy.readthedocs.io/en/stable/notebooks/tutorials/tutorial_nanostring.html#analyze-nanostring-data" target="_blank">vignette</a>.</p>
<section id="reading-expression-and-metadata-only" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="reading-expression-and-metadata-only"><span class="header-section-number">4.1</span> Reading expression and metadata only</h2>
<p>Create an anndata object like this:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
from pathlib import Path
import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import scanpy as sc
import squidpy as sq

flat_file_dir = 'path/to/breast_cancer_example/flatFiles/AUG29_13INTEGR_6K_BRST_PS_S2'
meta_file = [item for item in os.listdir(flat_file_dir) if 'metadata_file' in item][0]
counts_file = [item for item in os.listdir(flat_file_dir) if 'exprMat_file' in item][0]

adata0 = sq.read.nanostring(
    path=flat_file_dir,
    counts_file=counts_file,
    meta_file=meta_file
)
adata0</code></pre>
</div>
<pre><code>AnnData object with n_obs × n_vars = 80073 × 6524
    obs: 'RNA_nbclust_132d0e1b.dc7d.48de.814b.a88cd8d14f03_1_clusters', 'RNA_nbclust_132d0e1b.dc7d.48de.814b.a88cd8d14f03_1_posterior_probability', 'RNA_nbclust_9685fc9a.4f00.4267.99c1.ce1cb894807f_1_clusters', 'RNA_nbclust_9685fc9a.4f00.4267.99c1.ce1cb894807f_1_posterior_probability', 'cell', 'nCount_RNA', 'nFeature_RNA', 'nCount_negprobes', 'nFeature_negprobes', 'fov', 'Area', 'AspectRatio', 'Width', 'Height', 'Mean.PanCK', 'Max.PanCK', 'Mean.CD68_CK8_18', 'Max.CD68_CK8_18', 'Mean.CD298_B2M', 'Max.CD298_B2M', 'Mean.CD45', 'Max.CD45', 'Mean.DAPI', 'Max.DAPI', 'cell_id', 'assay_type', 'version', 'Run_Tissue_name', 'Panel', 'cellSegmentationSetId', 'cellSegmentationSetName', 'slide_ID', 'CenterX_global_px', 'CenterY_global_px', 'unassignedTranscripts', 'nCount_falsecode', 'nFeature_falsecode', 'Area.um2', 'propNegative', 'complexity', 'errorCtEstimate', 'percOfDataFromError', 'qcFlagsRNACounts', 'qcFlagsCellCounts', 'qcFlagsCellPropNeg', 'qcFlagsCellComplex', 'qcFlagsCellArea', 'qcCellsFlagged', 'median_negprobes', 'negprobes_quantile_0.9', 'median_RNA', 'RNA_quantile_0.9', 'nCell', 'nCount', 'nCountPerCell', 'nFeaturePerCell', 'propNegativeCellAvg', 'complexityCellAvg', 'errorCtPerCellEstimate', 'percOfDataFromErrorPerCell', 'qcFlagsFOV', 'i.median_negprobes', 'i.negprobes_quantile_0.9', 'i.median_RNA', 'i.RNA_quantile_0.9', 'cell_ID'
    uns: 'spatial'
    obsm: 'spatial', 'spatial_fov'</code></pre>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The column names that you have may differ from the ones above. That’s because the example dataset has been processed in AtoMx SIP which created additional columns (<em>e.g.</em>, RNA_nbclust_[GUID]_1_clusters). For more information on the expected columns from flat file exports, see the <a href="../../posts/flat-file-exports/flat-files-compare.html#sec-meta">metadata column descriptions</a>.</p>
</div>
</div>
</section>
<section id="including-the-fov-file" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="including-the-fov-file"><span class="header-section-number">4.2</span> Including the FOV file</h2>
<p>If we try to read in the optional FOV file generated in AtoMx SIP using squidpy v1.5.0, we might get an error stating “Index fov invalid”.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
fov_file = [item for item in os.listdir(flat_file_dir) if 'fov_positions_file' in item][0]

adata = sq.read.nanostring(
    path=flat_file_dir,
    counts_file=counts_file,
    meta_file=meta_file,
    fov_file=fov_file
)
</code></pre>
</div>
<div class="cell">
<details class="code-fold">
<summary>Click to show error</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">---------------------------------------------------------------------------</span>
<span id="cb5-2">ValueError                                Traceback (most recent call last)</span>
<span id="cb5-3">Cell In[23], line 3</span>
<span id="cb5-4">      1 fov_file = [item for item in os.listdir(flat_file_dir) if 'fov_positions_file' in item][0]</span>
<span id="cb5-5">----&gt; 3 adata = sq.read.nanostring(</span>
<span id="cb5-6">      4     path=flat_file_dir,</span>
<span id="cb5-7">      5     counts_file=counts_file,</span>
<span id="cb5-8">      6     meta_file=meta_file,</span>
<span id="cb5-9">      7     fov_file=fov_file</span>
<span id="cb5-10">      8 )</span>
<span id="cb5-11"></span>
<span id="cb5-12">File &lt;project path&gt;/.venv/lib/python3.10/site-packages/squidpy/read/_read.py:266, in nanostring(path, counts_file, meta_file, fov_file)</span>
<span id="cb5-13">    263                     continue</span>
<span id="cb5-14">    265 if fov_file is not None:</span>
<span id="cb5-15">--&gt; 266     fov_positions = pd.read_csv(path / fov_file, header=0, index_col=fov_key)</span>
<span id="cb5-16">    267     for fov, row in fov_positions.iterrows():</span>
<span id="cb5-17">    268         try:</span>
<span id="cb5-18"></span>
<span id="cb5-19">File &lt;project path&gt;/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)</span>
<span id="cb5-20">   1013 kwds_defaults = _refine_defaults_read(</span>
<span id="cb5-21">   1014     dialect,</span>
<span id="cb5-22">   1015     delimiter,</span>
<span id="cb5-23">   (...)</span>
<span id="cb5-24">   1022     dtype_backend=dtype_backend,</span>
<span id="cb5-25">   1023 )</span>
<span id="cb5-26">   1024 kwds.update(kwds_defaults)</span>
<span id="cb5-27">-&gt; 1026 return _read(filepath_or_buffer, kwds)</span>
<span id="cb5-28"></span>
<span id="cb5-29">File &lt;project path&gt;/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:626, in _read(filepath_or_buffer, kwds)</span>
<span id="cb5-30">    623     return parser</span>
<span id="cb5-31">    625 with parser:</span>
<span id="cb5-32">--&gt; 626     return parser.read(nrows)</span>
<span id="cb5-33"></span>
<span id="cb5-34">File &lt;project path&gt;/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1923, in TextFileReader.read(self, nrows)</span>
<span id="cb5-35">   1916 nrows = validate_integer("nrows", nrows)</span>
<span id="cb5-36">   1917 try:</span>
<span id="cb5-37">   1918     # error: "ParserBase" has no attribute "read"</span>
<span id="cb5-38">   1919     (</span>
<span id="cb5-39">   1920         index,</span>
<span id="cb5-40">   1921         columns,</span>
<span id="cb5-41">   1922         col_dict,</span>
<span id="cb5-42">-&gt; 1923     ) = self._engine.read(  # type: ignore[attr-defined]</span>
<span id="cb5-43">   1924         nrows</span>
<span id="cb5-44">   1925     )</span>
<span id="cb5-45">   1926 except Exception:</span>
<span id="cb5-46">   1927     self.close()</span>
<span id="cb5-47"></span>
<span id="cb5-48">File &lt;project path&gt;/.venv/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py:333, in CParserWrapper.read(self, nrows)</span>
<span id="cb5-49">    330     data = {k: v for k, (i, v) in zip(names, data_tups)}</span>
<span id="cb5-50">    332     names, date_data = self._do_date_conversions(names, data)</span>
<span id="cb5-51">--&gt; 333     index, column_names = self._make_index(date_data, alldata, names)</span>
<span id="cb5-52">    335 return index, column_names, date_data</span>
<span id="cb5-53"></span>
<span id="cb5-54">File &lt;project path&gt;/.venv/lib/python3.10/site-packages/pandas/io/parsers/base_parser.py:371, in ParserBase._make_index(self, data, alldata, columns, indexnamerow)</span>
<span id="cb5-55">    368     index = None</span>
<span id="cb5-56">    370 elif not self._has_complex_date_col:</span>
<span id="cb5-57">--&gt; 371     simple_index = self._get_simple_index(alldata, columns)</span>
<span id="cb5-58">    372     index = self._agg_index(simple_index)</span>
<span id="cb5-59">    373 elif self._has_complex_date_col:</span>
<span id="cb5-60"></span>
<span id="cb5-61">File &lt;project path&gt;/.venv/lib/python3.10/site-packages/pandas/io/parsers/base_parser.py:403, in ParserBase._get_simple_index(self, data, columns)</span>
<span id="cb5-62">    401 index = []</span>
<span id="cb5-63">    402 for idx in self.index_col:</span>
<span id="cb5-64">--&gt; 403     i = ix(idx)</span>
<span id="cb5-65">    404     to_remove.append(i)</span>
<span id="cb5-66">    405     index.append(data[i])</span>
<span id="cb5-67"></span>
<span id="cb5-68">File &lt;project path&gt;/.venv/lib/python3.10/site-packages/pandas/io/parsers/base_parser.py:398, in ParserBase._get_simple_index.&lt;locals&gt;.ix(col)</span>
<span id="cb5-69">    396 if not isinstance(col, str):</span>
<span id="cb5-70">    397     return col</span>
<span id="cb5-71">--&gt; 398 raise ValueError(f"Index {col} invalid")</span>
<span id="cb5-72"></span>
<span id="cb5-73">ValueError: Index fov invalid</span></code></pre></div>
</details>
</div>
<p>This error arises because of a format change that is detailed in <a href="../../posts/flat-file-exports/flat-files-compare.html#sec-fov-pos">this post</a>. A simple fix is to adjust the column name in the fov file from “FOV” to the legacy “fov” like this:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>fov_file = [item for item in os.listdir(flat_file_dir) if 'fov_positions_file' in item][0]

fov_df = pd.read_csv(os.path.join(flat_file_dir, fov_file))
if 'FOV' in fov_df.columns:
  print("Refactoring file to older format.")
  # Rename 'FOV' column to 'fov'
  fov_df.rename(columns={'FOV': 'fov'}, inplace=True)
  # have fov_file reference the new, formatted file and write it
  fov_file = os.path.join(flat_file_dir,'fov_positions_formatted.csv')
  fov_df.to_csv(fov_file, index=False)

adata1 = sq.read.nanostring(
    path=flat_file_dir,
    counts_file=counts_file,
    meta_file=meta_file,
    fov_file=fov_file
)
</code></pre>
</div>
<blockquote class="blockquote">
<p>Refactoring file to older format.</p>
</blockquote>
<pre><code>AnnData object with n_obs × n_vars = 80073 × 6524
    obs: 'RNA_nbclust_132d0e1b.dc7d.48de.814b.a88cd8d14f03_1_clusters', 'RNA_nbclust_132d0e1b.dc7d.48de.814b.a88cd8d14f03_1_posterior_probability', 'RNA_nbclust_9685fc9a.4f00.4267.99c1.ce1cb894807f_1_clusters', 'RNA_nbclust_9685fc9a.4f00.4267.99c1.ce1cb894807f_1_posterior_probability', 'cell', 'nCount_RNA', 'nFeature_RNA', 'nCount_negprobes', 'nFeature_negprobes', 'fov', 'Area', 'AspectRatio', 'Width', 'Height', 'Mean.PanCK', 'Max.PanCK', 'Mean.CD68_CK8_18', 'Max.CD68_CK8_18', 'Mean.CD298_B2M', 'Max.CD298_B2M', 'Mean.CD45', 'Max.CD45', 'Mean.DAPI', 'Max.DAPI', 'cell_id', 'assay_type', 'version', 'Run_Tissue_name', 'Panel', 'cellSegmentationSetId', 'cellSegmentationSetName', 'slide_ID', 'CenterX_global_px', 'CenterY_global_px', 'unassignedTranscripts', 'nCount_falsecode', 'nFeature_falsecode', 'Area.um2', 'propNegative', 'complexity', 'errorCtEstimate', 'percOfDataFromError', 'qcFlagsRNACounts', 'qcFlagsCellCounts', 'qcFlagsCellPropNeg', 'qcFlagsCellComplex', 'qcFlagsCellArea', 'qcCellsFlagged', 'median_negprobes', 'negprobes_quantile_0.9', 'median_RNA', 'RNA_quantile_0.9', 'nCell', 'nCount', 'nCountPerCell', 'nFeaturePerCell', 'propNegativeCellAvg', 'complexityCellAvg', 'errorCtPerCellEstimate', 'percOfDataFromErrorPerCell', 'qcFlagsFOV', 'i.median_negprobes', 'i.negprobes_quantile_0.9', 'i.median_RNA', 'i.RNA_quantile_0.9', 'cell_ID'
    uns: 'spatial'
    obsm: 'spatial', 'spatial_fov'</code></pre>
</section>
<section id="analysis" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="analysis"><span class="header-section-number">4.3</span> Analysis</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Please note that the code in this section is an example and not a recommendation for specific thresholding, QC filtering, clustering parmaterization, <em>etc.</em> of SMI data.</p>
</div>
</div>
<p>With the expression and metadata loaded, we can run exploratory data analysis similar to what was described in the squidpy vignette. There are some adjustments to squidpy’s vignette that are needed. These adjustments reflect the flat file format changes (<a href="../../posts/flat-file-exports/flat-files-compare.html#sec-fov-pos">detailed here</a>).</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
# Place control targets into separate variables
adata1.var["Negative"] = adata1.var_names.str.startswith("Negative")
adata1.var["SystemControl"] = adata1.var_names.str.startswith("SystemControl")
adata1</code></pre>
</div>
<pre><code>AnnData object with n_obs × n_vars = 80073 × 6524
    obs: 'RNA_nbclust_132d0e1b.dc7d.48de.814b.a88cd8d14f03_1_clusters', 'RNA_nbclust_132d0e1b.dc7d.48de.814b.a88cd8d14f03_1_posterior_probability', 'RNA_nbclust_9685fc9a.4f00.4267.99c1.ce1cb894807f_1_clusters', 'RNA_nbclust_9685fc9a.4f00.4267.99c1.ce1cb894807f_1_posterior_probability', 'cell', 'nCount_RNA', 'nFeature_RNA', 'nCount_negprobes', 'nFeature_negprobes', 'fov', 'Area', 'AspectRatio', 'Width', 'Height', 'Mean.PanCK', 'Max.PanCK', 'Mean.CD68_CK8_18', 'Max.CD68_CK8_18', 'Mean.CD298_B2M', 'Max.CD298_B2M', 'Mean.CD45', 'Max.CD45', 'Mean.DAPI', 'Max.DAPI', 'cell_id', 'assay_type', 'version', 'Run_Tissue_name', 'Panel', 'cellSegmentationSetId', 'cellSegmentationSetName', 'slide_ID', 'CenterX_global_px', 'CenterY_global_px', 'unassignedTranscripts', 'nCount_falsecode', 'nFeature_falsecode', 'Area.um2', 'propNegative', 'complexity', 'errorCtEstimate', 'percOfDataFromError', 'qcFlagsRNACounts', 'qcFlagsCellCounts', 'qcFlagsCellPropNeg', 'qcFlagsCellComplex', 'qcFlagsCellArea', 'qcCellsFlagged', 'median_negprobes', 'negprobes_quantile_0.9', 'median_RNA', 'RNA_quantile_0.9', 'nCell', 'nCount', 'nCountPerCell', 'nFeaturePerCell', 'propNegativeCellAvg', 'complexityCellAvg', 'errorCtPerCellEstimate', 'percOfDataFromErrorPerCell', 'qcFlagsFOV', 'i.median_negprobes', 'i.negprobes_quantile_0.9', 'i.median_RNA', 'i.RNA_quantile_0.9', 'cell_ID'
    var: 'Negative', 'SystemControl'
    uns: 'spatial'
    obsm: 'spatial', 'spatial_fov'</code></pre>
<p>We can calculate QC metrics with scanpy’s <span class="citation" data-cites="Wolf2018">(Wolf, Angerer, and Theis 2018)</span> pre-processing tool <a href="https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.calculate_qc_metrics.html" target="_blank"><code>calculate_qc_metrics</code> method</a>. In the code below, we are going to add Negatives and SystemControls as the <code>qc_var</code> argument (which will add cell-level columns to <code>obs</code>). In addition, target-level columns are added to <code>var</code>.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>sc.pp.calculate_qc_metrics(adata1, qc_vars=["Negative", "SystemControl"], inplace=True)
adata1</code></pre>
</div>
<pre><code>AnnData object with n_obs × n_vars = 80073 × 6524
    obs: 'RNA_nbclust_132d0e1b.dc7d.48de.814b.a88cd8d14f03_1_clusters', 'RNA_nbclust_132d0e1b.dc7d.48de.814b.a88cd8d14f03_1_posterior_probability', 'RNA_nbclust_9685fc9a.4f00.4267.99c1.ce1cb894807f_1_clusters', 'RNA_nbclust_9685fc9a.4f00.4267.99c1.ce1cb894807f_1_posterior_probability', 'cell', 'nCount_RNA', 'nFeature_RNA', 'nCount_negprobes', 'nFeature_negprobes', 'fov', 'Area', 'AspectRatio', 'Width', 'Height', 'Mean.PanCK', 'Max.PanCK', 'Mean.CD68_CK8_18', 'Max.CD68_CK8_18', 'Mean.CD298_B2M', 'Max.CD298_B2M', 'Mean.CD45', 'Max.CD45', 'Mean.DAPI', 'Max.DAPI', 'cell_id', 'assay_type', 'version', 'Run_Tissue_name', 'Panel', 'cellSegmentationSetId', 'cellSegmentationSetName', 'slide_ID', 'CenterX_global_px', 'CenterY_global_px', 'unassignedTranscripts', 'nCount_falsecode', 'nFeature_falsecode', 'Area.um2', 'propNegative', 'complexity', 'errorCtEstimate', 'percOfDataFromError', 'qcFlagsRNACounts', 'qcFlagsCellCounts', 'qcFlagsCellPropNeg', 'qcFlagsCellComplex', 'qcFlagsCellArea', 'qcCellsFlagged', 'median_negprobes', 'negprobes_quantile_0.9', 'median_RNA', 'RNA_quantile_0.9', 'nCell', 'nCount', 'nCountPerCell', 'nFeaturePerCell', 'propNegativeCellAvg', 'complexityCellAvg', 'errorCtPerCellEstimate', 'percOfDataFromErrorPerCell', 'qcFlagsFOV', 'i.median_negprobes', 'i.negprobes_quantile_0.9', 'i.median_RNA', 'i.RNA_quantile_0.9', 'cell_ID', 'n_genes_by_counts', 'log1p_n_genes_by_counts', 'total_counts', 'log1p_total_counts', 'pct_counts_in_top_50_genes', 'pct_counts_in_top_100_genes', 'pct_counts_in_top_200_genes', 'pct_counts_in_top_500_genes', 'total_counts_Negative', 'log1p_total_counts_Negative', 'pct_counts_Negative', 'total_counts_SystemControl', 'log1p_total_counts_SystemControl', 'pct_counts_SystemControl'
    var: 'Negative', 'SystemControl', 'n_cells_by_counts', 'mean_counts', 'log1p_mean_counts', 'pct_dropout_by_counts', 'total_counts', 'log1p_total_counts'
    uns: 'spatial'
    obsm: 'spatial', 'spatial_fov'</code></pre>
<p>We can explore these cell-level and target-level QC metrics with visuals using the <a href="https://seaborn.pydata.org/" target="_blank"><code>seaborn</code></a> package. For example the code below generates Figure&nbsp;3 and shows how the number of unique genes in a cell correlates with the total number of transcripts in a cell.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
sns.jointplot(
    data=adata1.obs,
    x="total_counts",
    y="n_genes_by_counts",
    kind="scatter",
    alpha=0.2
)
plt.savefig("figures/fig-qc.png", dpi=200)
</code></pre>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-qc" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-qc-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-qc.png" class="img-fluid figure-img" width="600">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-qc-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Unique genes by total counts. Each dot represents a cell. Y-axis: the number of genes with postive counts in a cell. X-axis the sum of counts for a cell.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The total Negative probe counts by total counts is shown below and Figure&nbsp;4.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
sns.jointplot(
    data=adata1.obs,
    x="total_counts",
    y="total_counts_Negative",
    kind="scatter",
    alpha=0.2
)
plt.savefig("figures/fig-qc1.png", dpi=200)
</code></pre>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-qc1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-qc1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-qc1.png" class="img-fluid figure-img" width="600">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-qc1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: The number of negative counts (Y) relative to the total counts (X) per cell.
</figcaption>
</figure>
</div>
</div>
</div>
<p>We see that the proportion of negative counts relative to total counts is:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>adata1.obs["total_counts_Negative"].sum() / adata1.obs["total_counts"].sum()</code></pre>
</div>
<blockquote class="blockquote">
<p>0.00041567286608445926 (i.e., 0.04%)</p>
</blockquote>
<p>Histograms of total transcripts, total unique genes per cell, and total transcrips per FOV can be seen in Figure&nbsp;5.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>fig, axs = plt.subplots(1, 3, figsize=(15, 4))

axs[0].set_title("Total transcripts per cell")
sns.histplot(
    adata1.obs["total_counts"],
    kde=False,
    ax=axs[0],
)

axs[1].set_title("Unique transcripts per cell")
sns.histplot(
    adata1.obs["n_genes_by_counts"],
    kde=False,
    ax=axs[1],
)

axs[2].set_title("Transcripts per FOV")
sns.histplot(
    adata1.obs.groupby("fov").sum()["total_counts"],
    kde=False,
    ax=axs[2],
)
plt.savefig("figures/fig-qc2.png", dpi=200)
</code></pre>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-qc2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-qc2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-qc2.png" class="img-fluid figure-img" width="1500">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-qc2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Total counts per cell (left), total unique genes per cell (middle) and total transcripts per FOV (right).
</figcaption>
</figure>
</div>
</div>
</div>
<p>We can filter, normalize, and cluster with scanpy’s functions. For a full list of available functions, see scanpy’s <a href="https://scanpy.readthedocs.io/en/latest/api/index.html" target="_blank">API documentation</a>.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>adata1.shape</code></pre>
</div>
<blockquote class="blockquote">
<p>(80073, 6524)</p>
</blockquote>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>sc.pp.filter_cells(adata1, min_counts=250)
sc.pp.filter_genes(adata1, min_cells=1000)
adata1.shape</code></pre>
</div>
<blockquote class="blockquote">
<p>(69293, 6177)</p>
</blockquote>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>adata1.layers["counts"] = adata1.X.copy()
sc.pp.normalize_total(adata1, inplace=True, exclude_highly_expressed=True)
sc.pp.log1p(adata1)
sc.pp.pca(adata1, n_comps=50)
sc.pp.neighbors(adata1)
sc.tl.umap(adata1, min_dist=0.2, spread=1)
sc.tl.leiden(adata1)</code></pre>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>adata1.obs["logpMean.PanCK"] = np.log1p(adata1.obs['Mean.PanCK'])
sc.pl.umap(
    adata1,
    color=["logpMean.PanCK","leiden"]
)</code></pre>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-umap" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-umap-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-umap.png" class="img-fluid figure-img" width="1441">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-umap-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: UMAP figures with cells colored by natural log Mean PanCK expression (left) and Leiden clusters (right).
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="sec-imageanalysis" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Image and Spatial Analysis</h1>
<p>Up until this point we haven’t use image data. In this section I’ll show how to prepare a slide exported from AtoMx SIP into squidpy, and touch on some of the image-based analyses that are possible.</p>
<section id="rearrange-data-files-to-match-squidpys-layout" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="rearrange-data-files-to-match-squidpys-layout"><span class="header-section-number">5.1</span> Rearrange data files to match squidpy’s layout</h2>
<p>If we take a look one of the NSCLC public datasets from <span class="citation" data-cites="He2022">He et al. (2022)</span> (Lung5_Rep1), we can see the expected file structure has four folders (<code>CellComposite</code>, <code>CellLabels</code>, <code>CellOverlay</code>, and <code>CompartmentLabels</code>) and four flat files.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb20-1">tree -L 3</span>
<span id="cb20-2"></span>
<span id="cb20-3">├── Lung5_Rep1-Flat_files_and_images</span>
<span id="cb20-4">│&nbsp;&nbsp; ├── CellComposite</span>
<span id="cb20-5">│&nbsp;&nbsp; │&nbsp;&nbsp; ├── CellComposite_F001.jpg</span>
<span id="cb20-6">|   |   ...</span>
<span id="cb20-7">│&nbsp;&nbsp; │&nbsp;&nbsp; └── CellComposite_F032.jpg</span>
<span id="cb20-8">│&nbsp;&nbsp; ├── CellLabels</span>
<span id="cb20-9">│&nbsp;&nbsp; │&nbsp;&nbsp; ├── CellLabels_F001.tif</span>
<span id="cb20-10">|   |   ...</span>
<span id="cb20-11">│&nbsp;&nbsp; │&nbsp;&nbsp; └── CellLabels_F032.tif</span>
<span id="cb20-12">│&nbsp;&nbsp; ├── CellOverlay</span>
<span id="cb20-13">│&nbsp;&nbsp; │&nbsp;&nbsp; ├── CellOverlay_F001.jpg</span>
<span id="cb20-14">|   |   ...</span>
<span id="cb20-15">│&nbsp;&nbsp; │&nbsp;&nbsp; └── CellOverlay_F032.jpg</span>
<span id="cb20-16">│&nbsp;&nbsp; ├── CompartmentLabels</span>
<span id="cb20-17">│&nbsp;&nbsp; │&nbsp;&nbsp; ├── CompartmentLabels_F001.tif</span>
<span id="cb20-18">|   |   ...</span>
<span id="cb20-19">│&nbsp;&nbsp; │&nbsp;&nbsp; └── CompartmentLabels_F032.tif</span>
<span id="cb20-20">│&nbsp;&nbsp; ├── Lung5_Rep1_exprMat_file.csv</span>
<span id="cb20-21">│&nbsp;&nbsp; ├── Lung5_Rep1_fov_positions_file.csv</span>
<span id="cb20-22">│&nbsp;&nbsp; ├── Lung5_Rep1_metadata_file.csv</span>
<span id="cb20-23">│&nbsp;&nbsp; └── Lung5_Rep1_tx_file.csv</span></code></pre></div>
</div>
</div>
<p>This file structure is actually a subset of the raw data and flat files that are exported from AtoMx SIP.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb21-1">tree -L 3</span>
<span id="cb21-2"></span>
<span id="cb21-3">├── RawFiles</span>
<span id="cb21-4">│&nbsp;&nbsp; └── &lt;flow cell&gt;</span>
<span id="cb21-5">│&nbsp;&nbsp;     └── &lt;slide&gt;</span>
<span id="cb21-6">│&nbsp;&nbsp;         ├── AnalysisResults</span>
<span id="cb21-7">│&nbsp;&nbsp;         │&nbsp;&nbsp; └── muy2ybakqy</span>
<span id="cb21-8">│&nbsp;&nbsp;         ├── CellStatsDir</span>
<span id="cb21-9">│&nbsp;&nbsp;         │&nbsp;&nbsp; ├── &lt;slide&gt;_C902_P02_To_P01_RegStats.csv</span>
<span id="cb21-10">│&nbsp;&nbsp;         │&nbsp;&nbsp; ├── CellComposite</span>
<span id="cb21-11">│&nbsp;&nbsp;         │&nbsp;&nbsp; ├── CellOverlay</span>
<span id="cb21-12">│&nbsp;&nbsp;         │&nbsp;&nbsp; ├── FOV001</span>
<span id="cb21-13">│&nbsp;&nbsp;         │&nbsp;&nbsp; │&nbsp;&nbsp; ├── CellBoundaries_F001.csv</span>
<span id="cb21-14">│&nbsp;&nbsp;         │&nbsp;&nbsp; │&nbsp;&nbsp; ├── CellBoundaries_F001_935.fz</span>
<span id="cb21-15">│&nbsp;&nbsp;         │&nbsp;&nbsp; │&nbsp;&nbsp; ├── CellLabels_F001.tif</span>
<span id="cb21-16">│&nbsp;&nbsp;         │&nbsp;&nbsp; │&nbsp;&nbsp; ├── CompartmentLabels_F001.tif</span>
<span id="cb21-17">│&nbsp;&nbsp;         │&nbsp;&nbsp; │&nbsp;&nbsp; ├── Run_86906312-688f-4f31-9fc5-48b04db5f958_&lt;slide&gt;_Cell_Stats_F001.csv</span>
<span id="cb21-18">│&nbsp;&nbsp;         │&nbsp;&nbsp; │&nbsp;&nbsp; └── Run_86906312-688f-4f31-9fc5-48b04db5f958_FOV001__complete_code_cell_target_call_coord.cs</span>
<span id="cb21-19">│&nbsp;&nbsp;         │&nbsp;&nbsp; ...</span>
<span id="cb21-20">│&nbsp;&nbsp;         │&nbsp;&nbsp; ├── FOV064</span>
<span id="cb21-21">│&nbsp;&nbsp;         │&nbsp;&nbsp; └── Morphology2D</span>
<span id="cb21-22">│&nbsp;&nbsp;         └── RunSummary</span>
<span id="cb21-23">│&nbsp;&nbsp;             ├── 75d021be-b81e-4d7d-ad28-d390a13da7ad.mkit</span>
<span id="cb21-24">│&nbsp;&nbsp;             ├── Beta15_Affine_Transform_20221118.csv</span>
<span id="cb21-25">│&nbsp;&nbsp;             ├── Distortion</span>
<span id="cb21-26">│&nbsp;&nbsp;             ├── FovTracking</span>
<span id="cb21-27">│&nbsp;&nbsp;             ├── Morphology_ChannelID_Dictionary.txt</span>
<span id="cb21-28">│&nbsp;&nbsp;             ├── Run86906312-688f-4f31-9fc5-48b04db5f958_&lt;slide&gt;_Beta15_RNA_SpatialBC_Metrics4D.csv</span>
<span id="cb21-29">│&nbsp;&nbsp;             ├── Run_86906312-688f-4f31-9fc5-48b04db5f958_&lt;slide&gt;_Beta15_ExptConfig.txt</span>
<span id="cb21-30">│&nbsp;&nbsp;             ├── SampleSlide_PlaneFit_&lt;slide&gt;_History.csv</span>
<span id="cb21-31">│&nbsp;&nbsp;             ├── Shading</span>
<span id="cb21-32">│&nbsp;&nbsp;             ├── c902.fovs.csv</span>
<span id="cb21-33">│&nbsp;&nbsp;             ├── latest.af.fovs.csv</span>
<span id="cb21-34">│&nbsp;&nbsp;             └── latest.fovs.csv</span>
<span id="cb21-35">├── flatFiles</span>
<span id="cb21-36">│&nbsp;&nbsp; └── &lt;flow cell&gt;</span>
<span id="cb21-37">│&nbsp;&nbsp;     ├── &lt;flow cell&gt;_exprMat_file.csv.gz</span>
<span id="cb21-38">│&nbsp;&nbsp;     ├── &lt;flow cell&gt;_fov_positions_file.csv.gz</span>
<span id="cb21-39">│&nbsp;&nbsp;     ├── &lt;flow cell&gt;_metadata_file.csv.gz</span>
<span id="cb21-40">│&nbsp;&nbsp;     └── fov_positions_formatted.csv</span></code></pre></div>
</div>
</div>
<p>So in order to read in image data into squidpy, we must first rearrange our folders. We can do this manually by moving, copying, or linking files to match the expected format. Normally I am a big fan of symbolic links for just this situation. However, I have noticed that <code>read.nanostring</code> can have an error when using symbolic links for some of the files (error not shown). So for simplicity I will make a copy of the data and place them into a new folder <code>sample_dir_formatted</code>.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb22-1"># Note that this code works for a single slide. If exporting</span>
<span id="cb22-2"># multiple slides, some modification might be necessary.</span>
<span id="cb22-3"></span>
<span id="cb22-4"># cd to parent directory</span>
<span id="cb22-5"></span>
<span id="cb22-6"># create a directory adjacent to RawData and flatFiles</span>
<span id="cb22-7">mkdir -p sample_dir_formatted &amp;&amp; cd $_</span>
<span id="cb22-8"></span>
<span id="cb22-9"># Add flat files</span>
<span id="cb22-10">for file in $(ls ../flatFiles/*/*csv*); do cp $file ./; done</span>
<span id="cb22-11"></span>
<span id="cb22-12"># Add folders</span>
<span id="cb22-13">cp -r ../RawFiles/*/*/CellStatsDir/CellComposite ./</span>
<span id="cb22-14">cp -r ../RawFiles/*/*/CellStatsDir/CellOverlay ./</span>
<span id="cb22-15"></span>
<span id="cb22-16">mkdir -p CellLabels</span>
<span id="cb22-17">for file in $(ls ../RawFiles/*/*/CellStatsDir/FOV*/CellLabels*); do cp $file ./CellLabels/ ; done</span>
<span id="cb22-18">rm ./CellLabels/._Cell*</span>
<span id="cb22-19">  </span>
<span id="cb22-20">mkdir -p CompartmentLabels</span>
<span id="cb22-21">for file in $(ls ../RawFiles/*/*/CellStatsDir/FOV*/CompartmentLabels*); do cp $file ./CompartmentLabels/ ; done</span></code></pre></div>
</div>
</div>
<p>The file structure of <code>sample_dir_formatted</code> now looks like this:</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb23-1">tree -L 2</span>
<span id="cb23-2"></span>
<span id="cb23-3">.</span>
<span id="cb23-4">├── &lt;flow cell&gt;_exprMat_file.csv.gz</span>
<span id="cb23-5">├── &lt;flow cell&gt;_fov_positions_file.csv.gz</span>
<span id="cb23-6">├── &lt;flow cell&gt;_metadata_file.csv.gz</span>
<span id="cb23-7">├── CellComposite</span>
<span id="cb23-8">│&nbsp;&nbsp; ├── CellComposite_F001.jpg</span>
<span id="cb23-9">|   ├── ...</span>
<span id="cb23-10">│&nbsp;&nbsp; └── CellComposite_F064.jpg</span>
<span id="cb23-11">├── CellLabels</span>
<span id="cb23-12">│&nbsp;&nbsp; ├── CellLabels_F001.tif</span>
<span id="cb23-13">|   ├── ...</span>
<span id="cb23-14">│&nbsp;&nbsp; └── CellLabels_F064.tif</span>
<span id="cb23-15">├── CellOverlay</span>
<span id="cb23-16">│&nbsp;&nbsp; ├── CellOverlay_F001.jpg</span>
<span id="cb23-17">|   ├── ...</span>
<span id="cb23-18">│&nbsp;&nbsp; └── CellOverlay_F064.jpg</span>
<span id="cb23-19">└── CompartmentLabels</span>
<span id="cb23-20">    ├── CompartmentLabels_F001.tif</span>
<span id="cb23-21">    ...</span>
<span id="cb23-22">    └── CompartmentLabels_F064.tif</span></code></pre></div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>If your flow cell was created prior to AtoMx v1.3.2, the CellComposite jpg files may not show the composites but instead just blank images. They will still load into squidpy but will not show the expected tissue structure. This issue was patched for samples created in v1.3.2+. If you have blank images and would like to replace them with composite images, check out <a href="../../posts/composite-images/making-composite-images.html" target="_blank">this post</a>.</p>
</div>
</div>
</section>
<section id="read-expression-and-image-data-into-squidpy" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="read-expression-and-image-data-into-squidpy"><span class="header-section-number">5.2</span> Read expression and image data into squidpy</h2>
<p>The block of code below reads the flat files <em>and images</em> now that the image data are in the specified format. The location of the data in the example code below is <code>sample_dir</code> and is provided as the argument for the <code>path</code> parameter of <code>read.nanostring</code>.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
from pathlib import Path
import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import scanpy as sc
import squidpy as sq

sample_dir = 'path/to/breast_cancer_example/sample_dir_formatted'
meta_file = [item for item in os.listdir(sample_dir) if 'metadata_file' in item][0]
counts_file = [item for item in os.listdir(sample_dir) if 'exprMat_file' in item][0]
fov_file = [item for item in os.listdir(sample_dir) if 'fov_positions_file' in item][0]
 
fov_df = pd.read_csv(os.path.join(sample_dir, fov_file))
if 'FOV' in fov_df.columns:
  print("Refactoring file to older format.")
  # Rename 'FOV' column to 'fov'
  fov_df.rename(columns={'FOV': 'fov'}, inplace=True)
  # have fov_file reference the new, formatted file and write it
  fov_file = os.path.join(sample_dir,'fov_positions_formatted.csv')
  fov_df.to_csv(fov_file, index=False)

adata2 = sq.read.nanostring(
    path=sample_dir,
    counts_file=counts_file,
    meta_file=meta_file,
    fov_file=fov_file
)

# This part of the analyis is similar to above
adata2.var["Negative"] = adata2.var_names.str.startswith("Negative")
adata2.var["SystemControl"] = adata2.var_names.str.startswith("SystemControl")
sc.pp.calculate_qc_metrics(adata2, qc_vars=["Negative", "SystemControl"], inplace=True)
sc.pp.filter_cells(adata2, min_counts=250)
sc.pp.filter_genes(adata2, min_cells=1000)
adata2.layers["counts"] = adata2.X.copy()
sc.pp.normalize_total(adata2, inplace=True, exclude_highly_expressed=True)
sc.pp.log1p(adata2)
sc.pp.pca(adata2, n_comps=50)
sc.pp.neighbors(adata2)
sc.tl.umap(adata2, min_dist=0.2, spread=1)
sc.tl.leiden(adata2)
</code></pre>
</div>
</section>
<section id="spatial-analysis" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="spatial-analysis"><span class="header-section-number">5.3</span> Spatial Analysis</h2>
<p>In addition to the analysis code we’ve already covered, we can view and analyze our CosMx results with image data. For a full list of features, please see <a href="https://squidpy.readthedocs.io/en/stable/api.html" target="_blank">squidpy’s documentation</a>. For some of the examples below, I’ll use a subset of the data – a single FOV – to speed up computation and to make plotting easier.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>adata_subset = adata2[adata2.obs.fov == "35"].copy()</code></pre>
</div>
<section id="viewing-results-in-space" class="level3" data-number="5.3.1">
<h3 data-number="5.3.1" class="anchored" data-anchor-id="viewing-results-in-space"><span class="header-section-number">5.3.1</span> Viewing results in space</h3>
<p>Figure&nbsp;7 shows a single FOV image data with cells drawn as contours that are colored based on their Leiden cluster.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>sq.pl.spatial_segment(
    adata2,
    color="leiden",
    seg_contourpx=20,
    seg_cell_id="cell_ID",
    library_key="fov",
    library_id="35",
    img=True,
    size=60,
    figsize = (4, 4),
    dpi = 200,
    save = "fig-image1.png"
)

</code></pre>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-image1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-image1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-image1.png" class="img-fluid figure-img" width="412">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-image1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;7: Leiden clusters in space for a single FOV of breast cancer tissue. Clusters are displayed as cell contours overlaid on morphology image (green = PanCK, magenta = DAPI).
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="autocorrelation-with-morans-i" class="level3" data-number="5.3.2">
<h3 data-number="5.3.2" class="anchored" data-anchor-id="autocorrelation-with-morans-i"><span class="header-section-number">5.3.2</span> Autocorrelation with Moran’s <em>I</em></h3>
<p>Moran’s <em>I</em> is a useful spatial statistic for measuring the extent that a gene’s expression is clustered in space (verus random or dispersed). Taking a look at the single-FOV subset, we see genes with positive Moran’s <em>I</em>.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
sq.gr.spatial_neighbors(adata_subset, coord_type="generic", delaunay=True)
sq.gr.spatial_autocorr(
    adata_subset,
    mode="moran",
    n_perms=100,
    n_jobs=1,
)
adata_subset.uns["moranI"].head(10)</code></pre>
</div>
<pre><code>                I  pval_norm  var_norm  pval_z_sim  pval_sim   var_sim  pval_norm_fdr_bh  pval_z_sim_fdr_bh  pval_sim_fdr_bh
CRIP1    0.634842        0.0  0.000279         0.0  0.009901  0.000460               0.0                0.0         0.044936
COX6C    0.624853        0.0  0.000279         0.0  0.009901  0.000496               0.0                0.0         0.044936
COL1A1   0.616015        0.0  0.000279         0.0  0.009901  0.000476               0.0                0.0         0.044936
SCGB2A2  0.587074        0.0  0.000279         0.0  0.009901  0.000419               0.0                0.0         0.044936
COL1A2   0.572189        0.0  0.000279         0.0  0.009901  0.000487               0.0                0.0         0.044936
COL3A1   0.559603        0.0  0.000279         0.0  0.009901  0.000449               0.0                0.0         0.044936
SPARC    0.547069        0.0  0.000279         0.0  0.009901  0.000394               0.0                0.0         0.044936
KRT8     0.516281        0.0  0.000279         0.0  0.009901  0.000427               0.0                0.0         0.044936
ERBB2    0.509171        0.0  0.000279         0.0  0.009901  0.000458               0.0                0.0         0.044936
KRT19    0.502475        0.0  0.000279         0.0  0.009901  0.000529               0.0                0.0         0.044936
</code></pre>
<p>When we plot the expression of some of these genes (Figure&nbsp;8), we indeed see some how they are aggregated. For example, <em>COX6C</em> expression, which may have clinical significance with breast cancer <span class="citation" data-cites="Tian2021">(Tian et al. 2021)</span>, is autocorrelated and co-occurs with cells high in <em>KRT19</em>.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
sq.pl.spatial_segment(
    adata_subset,
    library_id="35",
    seg_cell_id="cell_ID",
    library_key="fov",
    color=["COX6C", "COL1A1", "KRT19"],
    size=60,
    img=False,
    figsize=(4, 4),
    dpi = 200,
    save = "fig-nhood-Morans-I.png"
)</code></pre>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-morans" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-morans-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-nhood-Morans-I.png" class="img-fluid figure-img" width="1142">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-morans-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;8: Expression for select genes showing relatively high Moran’s <em>I</em>.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="spatial-co-occurence" class="level3" data-number="5.3.3">
<h3 data-number="5.3.3" class="anchored" data-anchor-id="spatial-co-occurence"><span class="header-section-number">5.3.3</span> Spatial co-occurence</h3>
<p>While Moran’s <em>I</em> quantifies autocorrelation of genes, spatial co-occurence with <code>gr.co_occurence</code> quantifies cell-level co-occurences. In example below, co-occurence of Leiden clusters was used (Figure&nbsp;9).</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
sq.gr.co_occurrence(
    adata_subset,
    cluster_key="leiden",
)

sq.pl.co_occurrence(
    adata_subset,
    cluster_key="leiden",
    clusters="1",
    save = "fig-co-occurence1.png"
)
sq.pl.spatial_segment(
    adata_subset,
    shape="hex",
    color="leiden",
    library_id="35",
    library_key="fov",
    seg_cell_id="cell_ID",
    img=False,
    size=60,
    ax = ax[1],
    save = "fig-co-occurence2.png"
)</code></pre>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-co-occurence" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-co-occurence-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-co-occurence1and2.png" class="img-fluid figure-img" width="894">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-co-occurence-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;9: Co-occurence of Leiden clusters. Left: Leiden clusters in space for a single FOV of breast cancer tissue. Right: co-occurence probability ratio (Y) for each cluster relative to Leiden cluster 1 (orange cells in left plot) with increasing radius (X).
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="neighborhood-enrichment" class="level3" data-number="5.3.4">
<h3 data-number="5.3.4" class="anchored" data-anchor-id="neighborhood-enrichment"><span class="header-section-number">5.3.4</span> Neighborhood enrichment</h3>
<p>We can take a look at neighborhood enrichment scores using <code>gr.nhood_enrichment</code> and <code>pl.nhood_enrichment</code>(Figure&nbsp;10).</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Python</strong></pre>
</div>
<pre data-filename="Python"><code>
sq.gr.nhood_enrichment(adata2, cluster_key="leiden")
sq.pl.nhood_enrichment(
    adata2,
    cluster_key="leiden",
    figsize=(5, 5),
    dpi = 200,
    title="Neighborhood enrichment",
    save = "fig-nhood-enrichment.png"
)
</code></pre>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-neighbors" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-neighbors-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-nhood-enrichment.png" class="img-fluid figure-img" width="613">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-neighbors-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;10: Neighborhood enrichment across all FOVs for each pairwise combination of Leiden clusters.
</figcaption>
</figure>
</div>
</div>
</div>
<!-- # Saving annData -->
<!-- ```{filename="Python"} -->
<!-- adata2.write("./adata2.h5ad") -->
<!-- ``` -->
</section>
</section>
</section>
<section id="conclusion" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Conclusion</h1>
<p>In this post I showed how to pivot CosMx SMI data that were exported from AtoMx SIP into a format that can be read with the open-sourced python package squidpy. A full analysis of SMI data in squidpy was beyond the scope of this post but look for additional blog post that utilize squidpy’s functions.</p>
</section>
<section id="appendix" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Appendix</h1>
<section id="sec-venv" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="sec-venv"><span class="header-section-number">7.1</span> Create a virtual environment for squidpy</h2>
<p>I recommend creating a separate virtual environment to run squidpy and to keep packages isolated from the rest of your system. This can be operating system and architecture specific so my (M1 Mac) specific example code below may not work with your configuration.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Troubleshooting or assistance with squidpy installation is beyond the scope of this post. Please see <a href="https://squidpy.readthedocs.io/en/stable/api.html" target="_blank">squidpy’s documentation</a>.</p>
</div>
</div>
<p>In general, there are two main package management systems: the default one that ships with python and conda. I’ll use the former for this post. For more information, please see the <a href="https://packaging.python.org/en/latest/guides/installing-using-pip-and-virtual-environments/#create-and-use-virtual-environments" target="_blank">Python Packaging User Guide</a> for examples on Windows and Mac/Linux.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb32-1">python3.10 -m venv .venv</span>
<span id="cb32-2">source .venv/bin/activate</span>
<span id="cb32-3">python --version</span></code></pre></div>
</div>
</div>
<blockquote class="blockquote">
<p>Python 3.10.6</p>
</blockquote>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb33-1">pip install squidpy</span></code></pre></div>
</div>
</div>
<p>Here are the packages that I used for this post:</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb34-1">pip freeze &gt; requirements.txt</span></code></pre></div>
</div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Click to show contents of requirements.txt</summary>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb35-1">aiobotocore==2.5.4</span>
<span id="cb35-2">aiohttp==3.9.5</span>
<span id="cb35-3">aioitertools==0.11.0</span>
<span id="cb35-4">aiosignal==1.3.1</span>
<span id="cb35-5">anndata==0.10.8</span>
<span id="cb35-6">array_api_compat==1.7.1</span>
<span id="cb35-7">asciitree==0.3.3</span>
<span id="cb35-8">async-timeout==4.0.3</span>
<span id="cb35-9">attrs==23.2.0</span>
<span id="cb35-10">botocore==1.31.17</span>
<span id="cb35-11">certifi==2024.6.2</span>
<span id="cb35-12">charset-normalizer==3.3.2</span>
<span id="cb35-13">click==8.1.7</span>
<span id="cb35-14">click-plugins==1.1.1</span>
<span id="cb35-15">cligj==0.7.2</span>
<span id="cb35-16">cloudpickle==3.0.0</span>
<span id="cb35-17">colorcet==3.1.0</span>
<span id="cb35-18">contourpy==1.2.1</span>
<span id="cb35-19">cycler==0.12.1</span>
<span id="cb35-20">dask==2024.6.1</span>
<span id="cb35-21">dask-expr==1.1.4</span>
<span id="cb35-22">dask-image==2024.5.3</span>
<span id="cb35-23">datashader==0.16.2</span>
<span id="cb35-24">distributed==2024.6.1</span>
<span id="cb35-25">docrep==0.3.2</span>
<span id="cb35-26">exceptiongroup==1.2.1</span>
<span id="cb35-27">fasteners==0.19</span>
<span id="cb35-28">fiona==1.9.6</span>
<span id="cb35-29">fonttools==4.53.0</span>
<span id="cb35-30">frozenlist==1.4.1</span>
<span id="cb35-31">fsspec==2023.6.0</span>
<span id="cb35-32">geopandas==0.14.4</span>
<span id="cb35-33">h5py==3.11.0</span>
<span id="cb35-34">idna==3.7</span>
<span id="cb35-35">igraph==0.11.5</span>
<span id="cb35-36">imageio==2.34.1</span>
<span id="cb35-37">importlib_metadata==7.2.0</span>
<span id="cb35-38">inflect==7.2.1</span>
<span id="cb35-39">Jinja2==3.1.4</span>
<span id="cb35-40">jmespath==1.0.1</span>
<span id="cb35-41">joblib==1.4.2</span>
<span id="cb35-42">kiwisolver==1.4.5</span>
<span id="cb35-43">lazy_loader==0.4</span>
<span id="cb35-44">legacy-api-wrap==1.4</span>
<span id="cb35-45">leidenalg==0.10.2</span>
<span id="cb35-46">llvmlite==0.43.0</span>
<span id="cb35-47">locket==1.0.0</span>
<span id="cb35-48">markdown-it-py==3.0.0</span>
<span id="cb35-49">MarkupSafe==2.1.5</span>
<span id="cb35-50">matplotlib==3.9.0</span>
<span id="cb35-51">matplotlib-scalebar==0.8.1</span>
<span id="cb35-52">mdurl==0.1.2</span>
<span id="cb35-53">more-itertools==10.3.0</span>
<span id="cb35-54">msgpack==1.0.8</span>
<span id="cb35-55">multidict==6.0.5</span>
<span id="cb35-56">multipledispatch==1.0.0</span>
<span id="cb35-57">multiscale_spatial_image==0.11.2</span>
<span id="cb35-58">natsort==8.4.0</span>
<span id="cb35-59">networkx==3.3</span>
<span id="cb35-60">numba==0.60.0</span>
<span id="cb35-61">numcodecs==0.12.1</span>
<span id="cb35-62">numpy==1.26.4</span>
<span id="cb35-63">ome-zarr==0.9.0</span>
<span id="cb35-64">omnipath==1.0.8</span>
<span id="cb35-65">packaging==24.1</span>
<span id="cb35-66">pandas==2.2.2</span>
<span id="cb35-67">param==2.1.0</span>
<span id="cb35-68">partd==1.4.2</span>
<span id="cb35-69">patsy==0.5.6</span>
<span id="cb35-70">pillow==10.3.0</span>
<span id="cb35-71">PIMS==0.7</span>
<span id="cb35-72">psutil==6.0.0</span>
<span id="cb35-73">pyarrow==16.1.0</span>
<span id="cb35-74">pyct==0.5.0</span>
<span id="cb35-75">pygeos==0.14</span>
<span id="cb35-76">Pygments==2.18.0</span>
<span id="cb35-77">pynndescent==0.5.13</span>
<span id="cb35-78">pyparsing==3.1.2</span>
<span id="cb35-79">pyproj==3.6.1</span>
<span id="cb35-80">python-dateutil==2.9.0.post0</span>
<span id="cb35-81">pytz==2024.1</span>
<span id="cb35-82">PyYAML==6.0.1</span>
<span id="cb35-83">requests==2.32.3</span>
<span id="cb35-84">rich==13.7.1</span>
<span id="cb35-85">s3fs==2023.6.0</span>
<span id="cb35-86">scanpy==1.10.1</span>
<span id="cb35-87">scikit-image==0.24.0</span>
<span id="cb35-88">scikit-learn==1.5.0</span>
<span id="cb35-89">scipy==1.13.1</span>
<span id="cb35-90">seaborn==0.13.2</span>
<span id="cb35-91">session-info==1.0.0</span>
<span id="cb35-92">shapely==2.0.4</span>
<span id="cb35-93">six==1.16.0</span>
<span id="cb35-94">slicerator==1.1.0</span>
<span id="cb35-95">sortedcontainers==2.4.0</span>
<span id="cb35-96">spatial_image==0.3.0</span>
<span id="cb35-97">spatialdata==0.0.15</span>
<span id="cb35-98">squidpy==1.5.0</span>
<span id="cb35-99">statsmodels==0.14.2</span>
<span id="cb35-100">stdlib-list==0.10.0</span>
<span id="cb35-101">tblib==3.0.0</span>
<span id="cb35-102">texttable==1.7.0</span>
<span id="cb35-103">threadpoolctl==3.5.0</span>
<span id="cb35-104">tifffile==2024.6.18</span>
<span id="cb35-105">toolz==0.12.1</span>
<span id="cb35-106">tornado==6.4.1</span>
<span id="cb35-107">tqdm==4.66.4</span>
<span id="cb35-108">typeguard==4.3.0</span>
<span id="cb35-109">typing_extensions==4.12.2</span>
<span id="cb35-110">tzdata==2024.1</span>
<span id="cb35-111">umap-learn==0.5.6</span>
<span id="cb35-112">urllib3==1.26.19</span>
<span id="cb35-113">validators==0.28.3</span>
<span id="cb35-114">wrapt==1.16.0</span>
<span id="cb35-115">xarray==2024.6.0</span>
<span id="cb35-116">xarray-dataclasses==1.8.0</span>
<span id="cb35-117">xarray-datatree==0.0.14</span>
<span id="cb35-118">xarray-schema==0.0.3</span>
<span id="cb35-119">xarray-spatial==0.4.0</span>
<span id="cb35-120">yarl==1.9.4</span>
<span id="cb35-121">zarr==2.18.2</span>
<span id="cb35-122">zict==3.0.0</span>
<span id="cb35-123">zipp==3.19.2</span></code></pre></div>
</details>
</div>



</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-Dries2021" class="csl-entry">
Dries, Ruben, Qian Zhu, Rui Dong, Chee-Huat Linus Eng, Huipeng Li, Kan Liu, Yuntian Fu, et al. 2021. <span>“Giotto: A Toolbox for Integrative Analysis and Visualization of Spatial Expression Data.”</span> <em>Genome Biology</em> 22 (December): 78. <a href="https://doi.org/10.1186/s13059-021-02286-2">https://doi.org/10.1186/s13059-021-02286-2</a>.
</div>
<div id="ref-Hao2024" class="csl-entry">
Hao, Yuhan, Tim Stuart, Madeline H. Kowalski, Saket Choudhary, Paul Hoffman, Austin Hartman, Avi Srivastava, et al. 2024. <span>“Dictionary Learning for Integrative, Multimodal and Scalable Single-Cell Analysis.”</span> <em>Nature Biotechnology</em> 42 (February): 293–304. <a href="https://doi.org/10.1038/s41587-023-01767-y">https://doi.org/10.1038/s41587-023-01767-y</a>.
</div>
<div id="ref-He2022" class="csl-entry">
He, Shanshan, Ruchir Bhatt, Carl Brown, Emily A Brown, Derek L Buhr, Kan Chantranuvatana, Patrick Danaher, et al. 2022. <span>“High-Plex Imaging of RNA and Proteins at Subcellular Resolution in Fixed Tissue by Spatial Molecular Imaging.”</span> <em>Nature Biotechnology</em> 40 (December): 1794–1806. <a href="https://doi.org/10.1038/s41587-022-01483-z">https://doi.org/10.1038/s41587-022-01483-z</a>.
</div>
<div id="ref-Palla2022" class="csl-entry">
Palla, Giovanni, Hannah Spitzer, Michal Klein, David Fischer, Anna Christina Schaar, Louis Benedikt Kuemmerle, Sergei Rybakov, et al. 2022. <span>“Squidpy: A Scalable Framework for Spatial Omics Analysis.”</span> <em>Nature Methods</em> 19 (February): 171–78. <a href="https://doi.org/10.1038/s41592-021-01358-2">https://doi.org/10.1038/s41592-021-01358-2</a>.
</div>
<div id="ref-Tian2021" class="csl-entry">
Tian, Bi-Xia, Wei Sun, Shu-Hong Wang, Pei-Jun Liu, and Yao-Chun Wang. 2021. <span>“<a href="https://www.ncbi.nlm.nih.gov/pubmed/33527004">Differential Expression and Clinical Significance of COX6C in Human Diseases.</a>”</span> <em>American Journal of Translational Research</em> 13: 1–10.
</div>
<div id="ref-Wolf2018" class="csl-entry">
Wolf, F Alexander, Philipp Angerer, and Fabian J Theis. 2018. <span>“SCANPY: Large-Scale Single-Cell Gene Expression Data Analysis.”</span> <em>Genome Biology</em> 19: 15. <a href="https://doi.org/10.1186/s13059-017-1382-0">https://doi.org/10.1186/s13059-017-1382-0</a>.
</div>
</div></section></div> ]]></description>
  <category>Squidpy</category>
  <category>python</category>
  <category>visualization</category>
  <category>anndata</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/squidpy-essentials.html</guid>
  <pubDate>Wed, 03 Jul 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/squidpy-essentials/figures/fig-image1.png" medium="image" type="image/png" height="125" width="144"/>
</item>
<item>
  <title>Applications for visualization and cell typing using ‘smoothed’ marker genes</title>
  <dc:creator>Dan McGuire</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Marker genes are genes that are expressed primarily within a single cell type, and are often used to delineate and label clusters during cell typing in a scRNAseq analysis.</p>
<p>With spatially-resolved transcriptomics (SRT) data, a number of factors can contribute to challenges in a cell typing analysis, as well as hinder our ability to visualize our favorite marker genes. For example, these factors may include lower sensitivity compared to scRNAseq data, background due to autoflourescence, and segmentation error.</p>
<p>A common feedback for new SRT analysts when dealing with SRT data may be along the lines of “Why don’t I see gene ‘X’ in a majority of cells for cell type ‘Y’?”.</p>
<p>In this post we’ll discuss:</p>
<ul>
<li>Why counts of a single marker gene are not definitive of cell type</li>
<li>How to derive more useful / less noisy / “smoothed” expression of marker genes</li>
<li>How to perform fine-grained subtyping using smoothed marker genes, with T-cell subtyping as motivation</li>
</ul>
</section>
<section id="a-motivating-example-noisy-t-cell-typing-in-non-small-cell-lung-cancer-tissue" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> A motivating example: Noisy T-cell typing in non-small cell lung cancer tissue</h1>
<p>For example, here is a data set below consisting of non-small cell lung cancer tissues. Let’s load it in, run some quick unrefined-cell typing using <a href="https://github.com/Nanostring-Biostats/InSituType?tab=readme-ov-file" target="_blank">InSituType</a> <span class="citation" data-cites="Danaher2022">(Danaher et al. 2022)</span>, and take a look at the initial results.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RColorBrewer)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(InSituType)</span>
<span id="cb1-6"></span>
<span id="cb1-7">sem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_object.Rds"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### semi-supervised cell typing with 3 unsupervised clusters, using 'ioprofiles' reference matrix</span></span>
<span id="cb1-10">insitu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb1-11">InSituType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">insitutype</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts)</span>
<span id="cb1-12">                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">neg =</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colMeans</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negprobes"</span>]])</span>
<span id="cb1-13">                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reference_profiles =</span> InSituType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>ioprofiles</span>
<span id="cb1-14">                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_clusts =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-15">                       )</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### clean up cell type names and save results back to seurat object</span></span>
<span id="cb1-18">clustdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clust_o =</span> insitu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clust, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(insitu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clust))</span>
<span id="cb1-19">clustdt[,clust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>clust_o]</span>
<span id="cb1-20">clustdt[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD4"</span>, clust),clust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD4"</span>]</span>
<span id="cb1-21">clustdt[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD8"</span>, clust),clust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD8"</span>]</span>
<span id="cb1-22">clustdt[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B-cell"</span>, clust),clust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B cell"</span>]</span>
<span id="cb1-23">clustdt[,.N,by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>.(clust)]</span>
<span id="cb1-24">sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clust <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb1-25">sem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb1-26">Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddMetaData</span>(sem</span>
<span id="cb1-27">                    ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(clustdt[,.(clust, clust_o)]</span>
<span id="cb1-28">                                ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(insitu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clust)</span>
<span id="cb1-29">                                )</span>
<span id="cb1-30">                    )</span></code></pre></div>
</div>
<p>Here we can plot the InSituType clusters (‘clust’) on the UMAP. This UMAP was created using ‘Analytic Pearson residuals’ <span class="citation" data-cites="Lause2021">(Lause, Berens, and Kobak 2021)</span>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">umapf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(umapreduc</span>
<span id="cb2-2">                  ,clustercol</span>
<span id="cb2-3">                  ,semuse</span>
<span id="cb2-4">                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cls=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb2-5">                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb2-6">                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>){</span>
<span id="cb2-7">  </span>
<span id="cb2-8">  umapd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  </span>
<span id="cb2-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(semuse<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions[[umapreduc]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings</span>
<span id="cb2-10">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">keep.rownames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setnames</span>(umapd, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(umapd)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMAP_1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMAP_2"</span>))</span>
<span id="cb2-12">  obsmrk <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(semuse<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data), umapd</span>
<span id="cb2-13">                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by.x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span></span>
<span id="cb2-14">                  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by.y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rn"</span>)</span>
<span id="cb2-15">  </span>
<span id="cb2-16">  obstxt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> obsmrk[,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(.SD, median),by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(clustercol),.SDcols<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMAP_"</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb2-17">  </span>
<span id="cb2-18">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb2-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(obsmrk, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(UMAP_1, UMAP_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>.data[[clustercol]])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-21">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span>xlim, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span>ylim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-22">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>obstxt, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>UMAP_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>UMAP_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span>.data[[clustercol]]),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb2-23">                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb2-24">    </span>
<span id="cb2-25">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(cls)){</span>
<span id="cb2-26">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  </span>
<span id="cb2-27">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(pals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alphabet</span>()), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb2-28">                         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)))</span>
<span id="cb2-29">    </span>
<span id="cb2-30">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb2-31">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  </span>
<span id="cb2-32">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span>cls</span>
<span id="cb2-33">                         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)))</span>
<span id="cb2-34">  }</span>
<span id="cb2-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(p)</span>
<span id="cb2-36">}</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">ctpal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#C20088'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#005C31'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#2BCE48'</span></span>
<span id="cb3-2">           ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#4C005C'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#F0A0FF'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#003380'</span></span>
<span id="cb3-3">           ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#FFCC99'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#8F7C00'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#9DCC00'</span></span>
<span id="cb3-4">           ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#191919'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#94FFB5'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#0075DC'</span></span>
<span id="cb3-5">           ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#FFA8BB'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#FFA405'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#993F00'</span></span>
<span id="cb3-6">           ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#808080'</span>)</span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(ctpal) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'endothelial'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mDC'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plasmablast'</span></span>
<span id="cb3-8">                  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B cell'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pDC'</span></span>
<span id="cb3-9">                  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'macrophage'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mast'</span></span>
<span id="cb3-10">                  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T CD4'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fibroblast'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T CD8'</span></span>
<span id="cb3-11">                  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NK'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Treg'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'neutrophil'</span></span>
<span id="cb3-12">                  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>)</span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">umapf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clust"</span>, sem, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cls =</span> ctpal)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/umap_clust_all.png" class="img-fluid figure-img" width="2661"></p>
</figure>
</div>
</div>
</div>
<p>Let’s zoom in on some of the supervised clusters we hoped to identify below. We can see that some of the major cell types are somewhat clearly delineated on the UMAP.</p>
<ul>
<li>Lymphocytes; T-cell types (T CD8, T CD4, and Treg) are clustered together, and near the ‘B cell’ cluster.</li>
<li>Myeloid cell types; (macrophage, pDC, mDC) are clustered in a similar area.</li>
</ul>
<p>But there does appear to potentially be some noise in delineating cell types within those major categories.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">umapf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clust"</span>, sem, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cls =</span> ctpal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/umap_clust_imm.png" class="img-fluid figure-img" width="2214"></p>
</figure>
</div>
</div>
</div>
<p>We can focus on T cells in this dataset as a driving example for using smoothing as an approach for addressing challenging cell typing and visualization problems.</p>
<p>Canonical marker genes for T cells include</p>
<ul>
<li><em>CD3</em> (expected to be expressed in all T-cell types),</li>
<li><em>CD4</em> (commonly used together with <em>CD3</em> to identify T CD4 cells. <em>CD4</em> can also be expressed in myeloid cells.)</li>
<li><em>FOXP3</em> (commonly used together with <em>CD3</em> to identify Treg cells. Treg cells are a special subset of T CD4 cells)</li>
<li><em>CD8A</em> and <em>CD8B</em> (used together with <em>CD3</em> to identify T CD8 cells)</li>
</ul>
<p>First, let’s take a look at the relative frequency of our T-cell clusters ‘Treg’, ‘T CD8’, and ‘T CD4’. Tregs are supposed to be a rare sub type of T CD4 cells. Yet we have more than 3x as many Tregs called than we do T CD4.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">bard <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[,.N,by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>.(clust)]</span>
<span id="cb5-2">bard[,clust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(clust, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span>bard[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>N),clust])]</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(bard[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^T"</span>,clust)], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>clust, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>N,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>clust)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'identity'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span>ctpal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.breaks=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"# of cells"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"# of cells called by T cell subtype"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>clust, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span>scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comma</span>(N))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/tcell_calls_barplot.png" class="img-fluid figure-img" width="2298"></p>
</figure>
</div>
</div>
</div>
<p>Do we really have this many Treg cells in our data?</p>
<p>To gather more evidence toward answering this kind of question, we can calculate the proportion of cells in each cell type expressing a particular marker gene, along with a fold change comparison for each cluster relative to other clusters.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">totalcount_norm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(sm){</span>
<span id="cb6-2">    libsizes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(sm)</span>
<span id="cb6-3">    scalefactor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(libsizes)</span>
<span id="cb6-4">    libsizes[libsizes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-5">    normed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Diagonal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>scalefactor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>libsizes)</span>
<span id="cb6-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dimnames</span>(normed) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dimnames</span>(sm)</span>
<span id="cb6-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(normed)</span>
<span id="cb6-8">  }</span>
<span id="cb6-9"></span>
<span id="cb6-10">clusterwise_fold_change_stats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cnts=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, metainfo, clustercol){</span>
<span id="cb6-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">missing</span>(normed)){</span>
<span id="cb6-12">    normed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">totalcount_norm</span>(cnts) </span>
<span id="cb6-13">  }</span>
<span id="cb6-14">  outl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb6-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(ii <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(metainfo[[clustercol]])){</span>
<span id="cb6-16">    cells_ii <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metainfo[metainfo[[clustercol]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>ii,cell_ID]</span>
<span id="cb6-17">    cells_iiprime <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metainfo[metainfo[[clustercol]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>ii,cell_ID]</span>
<span id="cb6-18">    cluster_expr_ii  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowMeans</span>(normed[,cells_ii,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>])</span>
<span id="cb6-19">    cluster_expr_iiprime <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowMeans</span>(normed[,cells_iiprime,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>]) </span>
<span id="cb6-20">    cluster_prop_ii <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowMeans</span>(normed[,cells_ii,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) </span>
<span id="cb6-21">    cluster_prop_iiprime <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowMeans</span>(normed[,cells_iiprime,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) </span>
<span id="cb6-22">    fctbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster=</span>ii</span>
<span id="cb6-23">                        ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_expr =</span> cluster_expr_ii</span>
<span id="cb6-24">                        ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clusterprime_expr =</span> cluster_expr_iiprime</span>
<span id="cb6-25">                        ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(cluster_expr_ii)</span>
<span id="cb6-26">                        ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_prop =</span> cluster_prop_ii</span>
<span id="cb6-27">                        ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clusterprime_prop =</span> cluster_prop_iiprime</span>
<span id="cb6-28">    )[,typ<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>clustercol]</span>
<span id="cb6-29">    fctbl[,fold_change<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>cluster_expr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> clusterprime_expr]</span>
<span id="cb6-30">    fctbl[,fold_change_prop<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>cluster_prop <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> clusterprime_prop]</span>
<span id="cb6-31">    outl[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(ii)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copy</span>(fctbl) </span>
<span id="cb6-32">  } </span>
<span id="cb6-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fc =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbindlist</span>(outl))</span>
<span id="cb6-34">}</span></code></pre></div>
</details>
</div>
<p>We can see that <em>FOXP3</em> is expressed in a much larger frequency in Treg cells relative to other T-cell subtypes– this is good.</p>
<p>However, only 12.7% of our Treg cells are <em>FOXP3</em> positive, which may be a concern given that we have so many more Treg cells than other T-cell subtypes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">cluster_level_stats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  </span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clusterwise_fold_change_stats</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cnts =</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts</span>
<span id="cb7-3">                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metainfo =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)</span>
<span id="cb7-4">                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clustercol =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clust"</span>)</span>
<span id="cb7-5"></span>
<span id="cb7-6">bard <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cluster_level_stats[gene<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>][<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^T"</span>,cluster)]</span>
<span id="cb7-7">bard[,cluster<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(cluster, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span>bard[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>cluster_prop),cluster])]</span>
<span id="cb7-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(bard, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>cluster, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>cluster_prop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>cluster)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'identity'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span>ctpal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.breaks=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>comma, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Proportion of cells expressing the FOXP3 marker"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>cluster, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>cluster_prop <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatC</span>(cluster_prop,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>()</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/tcell_foxp3_pct_barplot.png" class="img-fluid figure-img" width="2298"></p>
</figure>
</div>
</div>
</div>
<p>At this stage, one may reasonably wonder: “If we define a Treg cell based on <em>FOXP3</em> expression, why not call a cell”Treg” <strong>only</strong> if it is expressing <em>FOXP3</em>?”</p>
<p>Here we can illustrate the challenge this would present by plotting <em>FOXP3</em> expression on the UMAP. On the one hand, if we look closely, we can see what looks like might be a “hot spot” on the UMAP where we are calling Treg cells, and we also have higher <em>FOXP3</em> expression.</p>
<p>But setting a threshold based on <em>FOXP3</em> expression to define our Treg cells would be futile.</p>
<p>We have many cells near our ‘<em>FOXP3</em> hotspot’ which may very well be Tregs, but do not have any counts of the marker gene. On the other hand, we can see cells of all types, all over the UMAP, which have one or several counts of <em>FOXP3</em> expressed possibly due to some form of background.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">marker_umap_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(marker_matrix, marker, sem</span>
<span id="cb8-2">                             ,umapreduc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale_expr =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb8-3">                             ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>){</span>
<span id="cb8-4">  </span>
<span id="cb8-5">  pd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  </span>
<span id="cb8-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions[[umapreduc]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings</span>
<span id="cb8-7">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">keep.rownames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setnames</span>(pd, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(pd)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMAP_1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMAP_2"</span>))</span>
<span id="cb8-9">  pd[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">match</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(marker_matrix), cell_ID),(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(marker))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>marker_matrix[marker,]]</span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setkeyv</span>(pd, marker)</span>
<span id="cb8-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(scale_expr){</span>
<span id="cb8-12">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb8-13">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pd </span>
<span id="cb8-14">             ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>UMAP_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> UMAP_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale</span>(.data[[marker]]))) </span>
<span id="cb8-15">      </span>
<span id="cb8-16">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb8-17">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb8-18">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pd </span>
<span id="cb8-19">             ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>UMAP_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> UMAP_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>.data[[marker]])) </span>
<span id="cb8-20">    </span>
<span id="cb8-21">  }</span>
<span id="cb8-22">  p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-24">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colors=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reds"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.breaks=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-27">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.breaks=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span>marker) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span>xlim,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span>ylim) </span>
<span id="cb8-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(p)</span>
<span id="cb8-30">}</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">raw_foxp3_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_umap_plot</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>, sem, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span></span>
<span id="cb9-3">                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"raw FOXP3"</span>)</span>
<span id="cb9-5"></span>
<span id="cb9-6">ctpal_sub <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ctpal</span>
<span id="cb9-7">ctpal_sub[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^T"</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(ctpal_sub),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invert=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey77"</span></span>
<span id="cb9-8">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(</span>
<span id="cb9-9">  raw_foxp3_plot</span>
<span id="cb9-10">  ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">umapf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clust"</span>, sem</span>
<span id="cb9-11">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cls =</span> ctpal_sub, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>))</span>
<span id="cb9-12">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-15">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/foxp3raw.png" class="img-fluid figure-img" width="1641"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="using-smoothed-foxp3-to-highlight-treg-focal-point-and-refine-cell-types." class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Using ‘smoothed’ FOXP3 to highlight Treg focal point and refine cell types.</h1>
<p>One potential approach to cleaning this up is to use some form of ‘smoothed’ marker gene expression, rather than the raw <em>FOXP3</em> counts.</p>
<p>We can describe the calculation for ‘smoothed’ marker expression in two basic steps:</p>
<ol type="1">
<li>Find the <img src="https://latex.codecogs.com/png.latex?K"> nearest neighbors of each cell in UMAP space.</li>
<li>Average the raw (or normalized) expression of the gene across that cells nearest neighbors.</li>
</ol>
<p>There’s a few different ways we might think about motivating this approach. The UMAP is an approximate manifold projection, which takes a low (2-d) representation of our high-dimensional (960 genes) data set. The manifold is ‘locally connected’, meaning cells near each other in UMAP space are also similar to each other in expression space. By averaging the expression of a marker gene of interest across cells with similar profiles, we can make a simple imputation of what we’d expect to see for the marker gene, given other cells of similar expression profiles.</p>
<p>This function below identifies the nearest neighbors in <em>UMAP</em> space, and makes a smoothing matrix, which can be used to get the average expression of any gene among a given cell’s nearest neighbors. Here is a simple implementation of the function, to take a ‘Seurat’ object as input, but could easily be modified for other data formats.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## create a column-standardized nearest neighbor matrix </span></span>
<span id="cb10-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## based on nearest neighbors in umap coordinates</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' </span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param sem a seureat object, which contains the UMAP reduction.</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param umapreduc name of the umap reduction, i.e. "umap"</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param n_neighbor number of nearest neighbors to be identified.</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' </span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @return "smoother", a smoothing matrix. expression (genes x cells ) x  smoother(cells x cells) , </span></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' will create an averaged expression across nearest neighbors.</span></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' </span></span>
<span id="cb10-11">umap_nn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(sem, umapreduc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_neighbors=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>){</span>
<span id="cb10-12"> </span>
<span id="cb10-13">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## extract umap coordinates </span></span>
<span id="cb10-14">  umapd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  </span>
<span id="cb10-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions[[umapreduc]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings</span>
<span id="cb10-16">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">keep.rownames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb10-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setnames</span>(umapd, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(umapd)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMAP_1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMAP_2"</span>))</span>
<span id="cb10-18">  </span>
<span id="cb10-19">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## identify nearest n_neighbors (+1 includes the cell as a neighbor to itself)</span></span>
<span id="cb10-20">  nn_umap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RANN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nn2</span>(umapd[,.(UMAP_1, UMAP_2)],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> n_neighbors <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.idx</span>
<span id="cb10-21">  nn_umap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">melt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(umapd[,.(cell_ID)], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(nn_umap))</span>
<span id="cb10-22">                              , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id.vars=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"V1"</span>))</span>
<span id="cb10-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(nn_umap) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID1_idx"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"neighbor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID2_idx"</span>)</span>
<span id="cb10-24">  nn_umap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(nn_umap</span>
<span id="cb10-25">                   , nn_umap[,.(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cell_ID2=</span>cell_ID1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cell_ID2_idx=</span>cell_ID1_idx)][</span>
<span id="cb10-26">                     ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(.SD)],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID2_idx"</span>)</span>
<span id="cb10-27">  </span>
<span id="cb10-28">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Cell x cell neighbor indicator matrix</span></span>
<span id="cb10-29">  wumap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sparseMatrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(nn_umap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_ID1_idx), nn_umap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_ID2_idx)</span>
<span id="cb10-30">                                ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(nn_umap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_ID1_idx), nn_umap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_ID1_idx)</span>
<span id="cb10-31">                                ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-32">  </span>
<span id="cb10-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(wumap) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(wumap) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> nn_umap[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(nn_umap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_ID1_idx),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(cell_ID1)]</span>
<span id="cb10-34">  </span>
<span id="cb10-35">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Column standardize, so that columns (cells) sum to 1, and each neighbor given equal weight.</span></span>
<span id="cb10-36">  mumap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sparseMatrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(wumap)</span>
<span id="cb10-37">                                ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(wumap)</span>
<span id="cb10-38">                                ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(wumap)</span>
<span id="cb10-39">                                )</span>
<span id="cb10-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dimnames</span>(mumap) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dimnames</span>(wumap)</span>
<span id="cb10-41">  smoother <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mumap <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> wumap</span>
<span id="cb10-42">  smoother <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> smoother[,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(sem)]</span>
<span id="cb10-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(smoother)</span>
<span id="cb10-44">}</span></code></pre></div>
</div>
<p>Here, we can apply our ‘smoothing matrix’ to some T-cell marker genes and compare the difference on the UMAP. Whereas raw marker expression is noisy and sparse, smoothed expression clearly highlights the focal points for each marker on the UMAP.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">smoother <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">umap_nn</span>(sem, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_neighbors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb11-2">sem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetAssayData</span>(sem, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new.data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">totalcount_norm</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts))</span>
<span id="cb11-3">smoothed_tcell_markers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>data[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>),] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> smoother</span>
<span id="cb11-4"></span>
<span id="cb11-5">plist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb11-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(g <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3G"</span>)){</span>
<span id="cb11-7">  plist[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(g,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".smooth"</span>)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb11-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_umap_plot</span>(smoothed_tcell_markers, g, sem, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span></span>
<span id="cb11-9">                     ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-10">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"smooth "</span>,g))</span>
<span id="cb11-11">  plist[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(g,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".raw"</span>)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb11-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_umap_plot</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts, g, sem, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span></span>
<span id="cb11-13">                     ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-14">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"raw "</span>,g))</span>
<span id="cb11-15">}</span>
<span id="cb11-16">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plotlist=</span>plist, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-18">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/smooth_vs_raw.png" class="img-fluid figure-img" width="2050"></p>
</figure>
</div>
</div>
</div>
<p>From here, we could take a number of different approaches to ‘clean up’ our T-cell calls. For example, because Tregs are a subset of T CD4 cells, we might consider reassigning them to T CD4 if they have low ‘smoothed <em>FOXP3</em>’ expression.</p>
<p>Below, we could rank the Treg cells by their smoothed <em>FOXP3</em> expression, as a way of measuring our confidence in the cell type call.</p>
<p>If we kept all of our Treg cells as Tregs, then 12.7% would be <em>FOXP3</em>+. If we keep only the top 100 cells, 42% would be <em>FOXP3</em>+.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">met <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)</span>
<span id="cb12-2">met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"foxp3smooth"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> smoothed_tcell_markers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>,met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb12-3">met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"foxp3raw"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>,met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### calculate pct of actual FOXP3 positive Tregs, ranking by smoothed FOXP3</span></span>
<span id="cb12-6">treg_filter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> met[clust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treg"</span>][<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>foxp3smooth)][,rnk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>.N]</span>
<span id="cb12-7">treg_filter[,pct_foxp3_positive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(foxp3raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(rnk)]</span>
<span id="cb12-8"></span>
<span id="cb12-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(treg_filter[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,.N,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)]</span>
<span id="cb12-10">       ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>rnk, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>pct_foxp3_positive)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'identity'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.breaks=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.breaks=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>rnk, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>pct_foxp3_positive <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatC</span>(pct_foxp3_positive,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Proportion of FOXP3+ Treg cells when filtering by smoothed expression"</span></span>
<span id="cb12-17">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"# of Treg cells kept"</span></span>
<span id="cb12-18">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Proportion of FOXP3+ cells"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/filter_treg_bar.png" class="img-fluid figure-img" width="2254"></p>
</figure>
</div>
</div>
</div>
<p>We can also make a few scatter plots to show the bivariate distributions of some of these T cell markers, and color the cells by their original cell type labels. We can certainly see that each marker has a cluster of cells with strong, high-expression. On the other hand, there is a gray area at which unambiguous delineation between cell types becomes challenging.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd3gsmooth"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> smoothed_tcell_markers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3G"</span>,met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb13-2">met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd3graw"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3G"</span>,met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb13-3">met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4smooth"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> smoothed_tcell_markers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>,met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb13-4">met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4raw"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>,met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb13-5">met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8bsmooth"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> smoothed_tcell_markers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>,met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb13-6">met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8braw"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>,met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb13-7"></span>
<span id="cb13-8">scatterp1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(met, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(cd3gsmooth, foxp3smooth,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>clust)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> ctpal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span>
<span id="cb13-14">scatterp1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggMarginal</span>(scatterp1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"histogram"</span>)</span>
<span id="cb13-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(scatterp1)</span>
<span id="cb13-16"></span>
<span id="cb13-17">scatterp2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(met, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(cd3gsmooth, cd8bsmooth,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>clust)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> ctpal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span>
<span id="cb13-23">scatterp2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggMarginal</span>(scatterp2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"histogram"</span>)</span>
<span id="cb13-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(scatterp2)</span>
<span id="cb13-25"></span>
<span id="cb13-26">scatterp3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(met, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(cd4smooth, foxp3smooth,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>clust)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> ctpal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span>
<span id="cb13-32">scatterp3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggMarginal</span>(scatterp3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"histogram"</span>)</span>
<span id="cb13-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(scatterp1)</span></code></pre></div>
</details>
</div>
<p><em>CD3G</em> vs.&nbsp;<em>FOXP3</em>:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/scatterp1.png" class="img-fluid figure-img" width="1838"></p>
</figure>
</div>
</div>
</div>
<p><em>CD3G</em> vs.&nbsp;<em>CD8B</em>:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/scatterp2.png" class="img-fluid figure-img" width="2399"></p>
</figure>
</div>
</div>
</div>
<p><em>CD4</em> vs.&nbsp;<em>FOXP3</em>:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/scatterp3.png" class="img-fluid figure-img" width="1838"></p>
</figure>
</div>
</div>
</div>
<p>Here is a quick comparison of what the UMAP might look like after refining Tregs, using different filters.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">plist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb14-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(ii <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)){</span>
<span id="cb14-3">  met[,clust_filtered<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>clust]</span>
<span id="cb14-4">  threshold <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> treg_filter[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,.N,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)][ii][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"foxp3smooth"</span>]]</span>
<span id="cb14-5">  met[foxp3smooth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>  threshold <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb14-6">        clust_filtered<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treg"</span>,clust_filtered<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD4"</span>]</span>
<span id="cb14-7">  sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clust_filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb14-8">  sem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddMetaData</span>(sem, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(met[,.(clust_filtered)], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]))</span>
<span id="cb14-9">  plist[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(ii)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb14-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">umapf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clust_filtered"</span>, sem</span>
<span id="cb14-11">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cls =</span> ctpal_sub, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Filtered Tregs (smooth FOXP3 &gt; "</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatC</span>(threshold,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span>
<span id="cb14-14">}</span>
<span id="cb14-15">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plotlist =</span> plist,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-17">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/filter_treg_umaps.png" class="img-fluid figure-img" width="1096"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="other-marker-genes" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Other marker genes</h1>
<p>It may be worth mentioning that marker genes for any cell type (not just T cells) could potentially be utilized for visualization or cell type refinement.</p>
<p>Here’s a few others that highlight key regions on the UMAP:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">mrks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>( </span>
<span id="cb15-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span> </span>
<span id="cb15-3">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CTLA4"</span></span>
<span id="cb15-4">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PDCD1"</span></span>
<span id="cb15-5">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL32"</span></span>
<span id="cb15-6">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL7R"</span></span>
<span id="cb15-7">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8A"</span> </span>
<span id="cb15-8">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span></span>
<span id="cb15-9">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3E"</span></span>
<span id="cb15-10">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span></span>
<span id="cb15-11">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3G"</span></span>
<span id="cb15-12">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KLRK1"</span></span>
<span id="cb15-13">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MS4A1"</span></span>
<span id="cb15-14">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD19"</span></span>
<span id="cb15-15">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD79A"</span></span>
<span id="cb15-16">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IGKC"</span></span>
<span id="cb15-17">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"JCHAIN"</span></span>
<span id="cb15-18">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IGHG1"</span></span>
<span id="cb15-19">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IGHG2"</span></span>
<span id="cb15-20">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IGHM"</span></span>
<span id="cb15-21">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IGHA1"</span></span>
<span id="cb15-22">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MZB1"</span></span>
<span id="cb15-23">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XBP1"</span></span>
<span id="cb15-24">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CLEC10A"</span></span>
<span id="cb15-25">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL1B"</span></span>
<span id="cb15-26">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ITGAX"</span></span>
<span id="cb15-27">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL3RA"</span></span>
<span id="cb15-28">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GZMB"</span></span>
<span id="cb15-29">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GNLY"</span></span>
<span id="cb15-30">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GZMA"</span></span>
<span id="cb15-31">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CXCL8"</span></span>
<span id="cb15-32">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD68"</span></span>
<span id="cb15-33">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD163"</span></span>
<span id="cb15-34">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C1QA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C1QB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C1QC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LYZ"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MMP9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL18"</span></span>
<span id="cb15-35">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VWF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PECAM1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGS5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPARCL1"</span></span>
<span id="cb15-36">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KRT5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KRT17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KRT19"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EPCAM"</span></span>
<span id="cb15-37">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"COL1A1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"COL1A2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"COL3A1"</span></span>
<span id="cb15-38">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TIGIT"</span></span>
<span id="cb15-39">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CPA3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TPSB2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TPSAB1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KIT"</span></span>
<span id="cb15-40">  ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CSF3R"</span></span>
<span id="cb15-41">)</span>
<span id="cb15-42"></span>
<span id="cb15-43">smoothed_markers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>data[mrks,] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> smoother</span>
<span id="cb15-44">plist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb15-45"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(g <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD68"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GZMA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GNLY"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MS4A1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C1QC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VWF"</span>)){</span>
<span id="cb15-46">  plist[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(g,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".smooth"</span>)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb15-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_umap_plot</span>(smoothed_markers, g, sem, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span></span>
<span id="cb15-48">                     ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb15-49">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"smooth "</span>,g))</span>
<span id="cb15-50">}</span>
<span id="cb15-51">  </span>
<span id="cb15-52">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plotlist=</span>plist, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb15-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb15-54">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/smoothed_nontcell_markers.png" class="img-fluid figure-img" width="1710"></p>
</figure>
</div>
</div>
</div>
<p>A clustering analysis based only on smoothed expression of known marker genes could serve as a useful aid or even a standalone approach for cell typing. For example, here is a naive k-means clustering using a number of different marker genes, and with their clusters colored on the UMAP.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">kmd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.table</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(smoothed_markers))</span>
<span id="cb16-2">kmd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> kmd[,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(.SD, scale)]</span>
<span id="cb16-3">kmclus <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kmeans</span>(kmd, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">centers=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb16-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(kmclus<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(smoothed_markers)</span>
<span id="cb16-5">met <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)</span>
<span id="cb16-6">met[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">match</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(kmclus<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster),cell_ID),kmclust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(kmclus<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster)]</span>
<span id="cb16-7">sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kmclust <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb16-8">sem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddMetaData</span>(sem, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(met[,.(kmclust)], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span>met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]))</span>
<span id="cb16-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">umapf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pearsonumap"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kmclust"</span>, sem)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/kmeans_smooth_markers.png" class="img-fluid figure-img" width="1710"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="conclusion" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Conclusion</h1>
<p>In this vignette, I discussed a method that can be used to get an <strong>expected</strong> expression of a marker gene in a cell, given that cell’s nearest neighbors in UMAP space, along with potential applications to visualization and cell type refinement.</p>


<!-- -->


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-Danaher2022" class="csl-entry">
Danaher, Patrick, Edward Zhao, Zhi Yang, David Ross, Mark Gregory, Zach Reitz, Tae K. Kim, et al. 2022. <span>“Insitutype: Likelihood-Based Cell Typing for Single Cell Spatial Transcriptomics.”</span> <em>bioRxiv</em>. <a href="https://doi.org/10.1101/2022.10.19.512902">https://doi.org/10.1101/2022.10.19.512902</a>.
</div>
<div id="ref-Lause2021" class="csl-entry">
Lause, Jan, Philipp Berens, and Dmitry Kobak. 2021. <span>“Analytic Pearson Residuals for Normalization of Single-Cell RNA-Seq UMI Data.”</span> <em>Genome Biology</em> 22 (September): 258. <a href="https://doi.org/10.1186/s13059-021-02451-7">https://doi.org/10.1186/s13059-021-02451-7</a>.
</div>
</div></section></div> ]]></description>
  <category>visualization</category>
  <category>cell typing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/</guid>
  <pubDate>Wed, 19 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/figures/smooth_foxp3_thumbnail.png" medium="image" type="image/png" height="84" width="144"/>
</item>
<item>
  <title>napari-cosmx essentials</title>
  <dc:creator>Evelyn Metzger</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/using-napari-cosmx.html</link>
  <description><![CDATA[ 





<div class="cell">
<div class="cell-output-display">
<div id="fig-duality" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-duality-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-duality.png" class="img-fluid figure-img" width="400">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-duality-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Drawing that represents the duality of <code>napari-cosmx</code>. On the left side, cell types within a mouse coronal hemisphere are shown in an interactive Graphical User Interface. In addition to creating images interactively, the right side highlights that images can be generated programmatically. Both sides of <code>napari-cosmx</code> are discussed in this post.
</figcaption>
</figure>
</div>
</div>
</div>
<!-- napari-cosmx is flexible enough to quickly explore SMI data in a GUI -->
<!--   yet robust enough to script reproducible results and tap into -->
<!--   the underlying python objects.  -->
<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>This post is the second installment of the napari series. In the <a href="../../posts/using-napari-for-cosmx-data/index.html" target="_blank">first blog post</a> I introduced the <code>napari-cosmx</code> plugin, how CosMx™ Spatial Molecular Imager (SMI) data can be viewed as layers within napari, and a method for processing, or “stitching”, raw data that are exported from AtoMx™ Spatial Informatics Portal (SIP).</p>
<p>One of the things that I love about the <code>napari-cosmx</code> plugin is its duality. It’s flexible enough to quickly explore SMI data in a Graphical User Interface (GUI) yet robust enough to script reproducible results and tap into the underlying python objects. In this post, I’ll walk through some of the basic ways in which we can use <code>napari-cosmx</code>to view SMI data. I’ll make use of this duality by sharing a combination of GUI and programmatic tips.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is not intended to be official documentation for the <code>napari-cosmx</code> plugin. The tips herein are not an exhaustive list of features and methods.</p>
</div>
</div>
<ul>
<li>Section&nbsp;2 shows how to preprocess the example dataset. If you are using your AtoMx-exported SMI data, this section is optional</li>
<li>Section&nbsp;3 shows basic GUI tips for interacting with SMI data</li>
<li>Section&nbsp;4 provides several examples of recapitulating the aesthetics seen with the GUI as well as advanced ways we can fine-tune images and more</li>
</ul>
</section>
<section id="sec-example-data" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> The Example Dataset</h1>
<p>The example dataset that I am using is the mouse coronal hemisphere FFPE that is available to download from NanoString’s website <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/cosmx-smi-mouse-brain-ffpe-dataset/" target="blank">here</a>. If you are following along with your AtoMx exported data, you can skip most of these pre-processing steps as they are not required (but see Section&nbsp;2.1.2 if you would like to view metadata).</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Large memory (RAM) might be required to work with raw images. Stitching the example data on a laptop might not work for everyone. The raw data size for this example is 183 GBs. Not all raw data are needed to stitch, however, and users can exclude the <code>CellStatsDir/Morphology3D</code> folder if downloading locally. If excluding this folder, the raw data is closer to 35 GBs.</p>
<p>The computer I used to stitch was an M1 Macbook Pro. Processing this 130 FOV, mouse 1K data set took about 10 minutes, ~700% CPU, and a peak memory usage of about 12 GBs (swap space was also used). The size of the napari files combined was an additional 22 GBs of disk space.</p>
</div>
</div>
<section id="sec-preprocessing" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="sec-preprocessing"><span class="header-section-number">2.1</span> Pre-processing example data</h2>
<p>Once downloaded, unzip the <code>HalfBrain.zip</code> file on your computer or external hard drive. The format for this dataset differs from the expected AtoMx SIP export so a preprocessing step is necessary.</p>
<p>When uncompressed, the raw data in the HalfBrain folder are actually nested like this:</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">tree -L 4</span>
<span id="cb1-2"></span>
<span id="cb1-3">├── AnalysisResult</span>
<span id="cb1-4">│&nbsp;&nbsp; └── HalfBrain_20230406_205644_S1</span>
<span id="cb1-5">│&nbsp;&nbsp;     └── AnalysisResults &lt;-- **Raw Data Folder**</span>
<span id="cb1-6">|           └── cp7bjyp7pm</span>
<span id="cb1-7">├── CellStatsDir</span>
<span id="cb1-8">│&nbsp;&nbsp; └── HalfBrain_20230406_205644_S1</span>
<span id="cb1-9">│&nbsp;&nbsp;     └── CellStatsDir &lt;-- **Raw Data Folder**</span>
<span id="cb1-10">│           ├── CellComposite</span>
<span id="cb1-11">│           ├── CellOverlay</span>
<span id="cb1-12">│           ├── FOV001</span>
<span id="cb1-13">│           ├── FOV002</span>
<span id="cb1-14">|           ...</span>
<span id="cb1-15">│           ├── Morphology2D</span>
<span id="cb1-16">│           └── RnD</span>
<span id="cb1-17">└── RunSummary</span>
<span id="cb1-18">    └── HalfBrain_20230406_205644_S1</span>
<span id="cb1-19">        └── RunSummary &lt;-- **Raw Data Folder**</span>
<span id="cb1-20">            ├── Beta12_Affine_Transform_20221103.csv</span>
<span id="cb1-21">            ├── FovTracking</span>
<span id="cb1-22">            ├── Morphology_ChannelID_Dictionary.txt</span>
<span id="cb1-23">            ├── Run1000_20230406_205644_S1_Beta12_ExptConfig.txt</span>
<span id="cb1-24">            ├── Run1000_20230406_205644_S1_Beta12_SpatialBC_Metrics4D.csv</span>
<span id="cb1-25">            ├── Shading</span>
<span id="cb1-26">            ├── c902.fovs.csv</span>
<span id="cb1-27">            └── latest.fovs.csv</span></code></pre></div>
</div>
</div>
<section id="sec-expected-raw-format" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="sec-expected-raw-format"><span class="header-section-number">2.1.1</span> Expected Raw Data Format</h3>
<p>In order for <code>napari-cosmx</code> to stitch this non-AtoMx example dataset, we’ll need to rearrange the folders so that the nested raw data are at the top level. After rearrangement, the proper file structure should look like this:</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">tree -L 2</span>
<span id="cb2-2"></span>
<span id="cb2-3">.</span>
<span id="cb2-4">├── AnalysisResults</span>
<span id="cb2-5">│&nbsp;&nbsp; └── cp7bjyp7pm</span>
<span id="cb2-6">├── CellStatsDir</span>
<span id="cb2-7">│&nbsp;&nbsp; ├── CellComposite</span>
<span id="cb2-8">│&nbsp;&nbsp; ├── CellOverlay</span>
<span id="cb2-9">│&nbsp;&nbsp; ├── FOV001</span>
<span id="cb2-10">│&nbsp;&nbsp; ├── FOV002</span>
<span id="cb2-11">...</span>
<span id="cb2-12">│&nbsp;&nbsp; ├── Morphology2D</span>
<span id="cb2-13">│&nbsp;&nbsp; └── RnD</span>
<span id="cb2-14">└── RunSummary</span>
<span id="cb2-15">    ├── Beta12_Affine_Transform_20221103.csv</span>
<span id="cb2-16">    ├── FovTracking</span>
<span id="cb2-17">    ├── Morphology_ChannelID_Dictionary.txt</span>
<span id="cb2-18">    ├── Run1000_20230406_205644_S1_Beta12_ExptConfig.txt</span>
<span id="cb2-19">    ├── Run1000_20230406_205644_S1_Beta12_SpatialBC_Metrics4D.csv</span>
<span id="cb2-20">    ├── Shading</span>
<span id="cb2-21">    ├── c902.fovs.csv</span>
<span id="cb2-22">    └── latest.fovs.csv</span></code></pre></div>
</div>
</div>
<p>There are a few ways to rearrange. The first method retains the original folder structure and simply makes symbolic links to the data in the expected format. Here’s how to do it in unix/mac (Windows not shown).</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1"># Terminal in Mac/Linux</span>
<span id="cb3-2"></span>
<span id="cb3-3"># cd to folder containing HalfBrain. Then, </span>
<span id="cb3-4"></span>
<span id="cb3-5">mkdir -p RawFiles &amp;&amp; cd $_</span>
<span id="cb3-6">ln -s ../HalfBrain/AnalysisResult/HalfBrain_20230406_205644_S1/AnalysisResults .</span>
<span id="cb3-7">ln -s ../HalfBrain/CellStatsDir/HalfBrain_20230406_205644_S1/CellStatsDir .</span>
<span id="cb3-8">ln -s ../HalfBrain/RunSummary/HalfBrain_20230406_205644_S1/RunSummary .</span></code></pre></div>
</div>
</div>
<p>Alternatively, we could manually move folders. Specifically, in your Finder window, create a folder named <code>RawData</code>. Then, move:</p>
<ul>
<li><code>HalfBrain/AnalysisResult/HalfBrain_20230406_205644_S1/AnalysisResults</code> to <code>RawData/AnalysisResults</code></li>
<li><code>HalfBrain/CellStatsDir/HalfBrain_20230406_205644_S1/CellStatsDir</code> to <code>RawData/CellStatsDir</code></li>
<li><code>HalfBrain/RunSummary/HalfBrain_20230406_205644_S1/RunSummary</code> to <code>RawData/RunSummary</code></li>
</ul>
<p>Once the file structure is properly formatted, use the <a href="../../posts/using-napari-for-cosmx-data/index.html#sec-stitch-images" target="_blank">stitching widget method</a> from an earlier blog post to create the mouse brain napari files.</p>
<!-- For this post, I named my output folder `mouse_brain_napari_files`. -->
</section>
<section id="sec-adding-metadata" class="level3" data-number="2.1.2">
<h3 data-number="2.1.2" class="anchored" data-anchor-id="sec-adding-metadata"><span class="header-section-number">2.1.2</span> Adding metadata</h3>
<p>We will also use the cell typing data from the Seurat file. Let’s include the following metadata columns:</p>
<ul>
<li><code>RNA_nbclust_clusters</code>: the cell typing results (with abbreviated names)</li>
<li><code>RNA_nbclust_clusters_long</code>: (optional) human-readable cell type names</li>
<li><code>spatialClusteringAssignments</code>: spatial niche assignments</li>
</ul>
<p>Note that the Seurat file contains two sections of mouse brain samples. We need to filter the metadata to include only those cells from <code>Run1000_S1_Half</code>. Note that when preparing the metadata for napari, the cell ID must be the first column (<em>i.e.</em>, see the <code>relocate</code> verb in the code below).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is R code</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(Seurat)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plyr)</span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sem_path will be wherever you downloaded your Seurat object</span></span>
<span id="cb4-6">sem_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/your/muBrainRelease_seurat.RDS"</span></span>
<span id="cb4-7">sem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(sem_path)</span>
<span id="cb4-8">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Run_Tissue_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Run1000_S1_Half"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(RNA_nbclust_clusters, </span>
<span id="cb4-11">  RNA_nbclust_clusters_long, </span>
<span id="cb4-12">  spatialClusteringAssignments)</span>
<span id="cb4-13">  </span>
<span id="cb4-14">meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_ID <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(meta) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># adds cell_ID column</span></span>
<span id="cb4-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(meta) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb4-16">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relocate</span>(cell_ID) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># moves cell_ID to first column position</span></span>
<span id="cb4-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.table</span>(meta, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/inside/napari-ready-folder/_metadata.csv"</span>, </span>
<span id="cb4-18">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
<p>Now that the data are ready, drag and drop the slide folder into napari to launch the plugin.</p>
</section>
</section>
</section>
<section id="sec-interacting-with-the-gui" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Interacting with the GUI</h1>
<p>This section focuses on features relevant to the <code>napari-cosmx</code> plugin. Users new to napari may find napari’s general <a href="https://napari.org/stable/tutorials/fundamentals/viewer.html" target="_blank">viewer tutorial</a> helpful as well.</p>
<p>When we open a slide with <code>napari-cosmx</code>, by default there will be a few napari layers visible (Initial View tab; Figure&nbsp;2). These include <code>FOV labels</code> and <code>Segmentation</code>. Clicking the eye icon next to a layer will change its visibility. Let’s turn off those layers for a moment and visualize the cell types from the <code>RNA_nbclust_clusters</code> column (Cell Types tab; Figure&nbsp;3). We can also color cells by their spatialClusteringAssignments values (Niches tab; Figure&nbsp;4). In the <code>Color Cells</code> widget, we can control which cell types or niches we would like to view. When we activate the <code>Metadata</code> layer, hovering over a given cell will display the metadata associated with it as a ribbon at the bottom of the application. To view the IF channels, use the <code>Morphology Images</code> widget, In Figure&nbsp;5 (IF Channels tab) I turned off the visibility of the cell types, added GFAP in red and DNA in cyan, and zoomed into the hippocampus. When I click on a layer, it becomes the activate layer and I can use the <code>layer controls</code> widget to adjust attributes to that layer such as contrast limits, gamma, layer blending, and more. Finally, we can view raw transcripts (or proteins). Simply select the target and the color and click <code>Add layer</code>. In Figure&nbsp;6 (Transcripts tab), I zoomed in on a section of the cortex and plotted <em>Calb1</em>.</p>
<p>Like other programs that use layers, napari allows the layers to be moved up/down and to blend (not shown below).</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Initial View</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Cell Types</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Niches</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-4" aria-controls="tabset-1-4" aria-selected="false">IF Channels</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-5" aria-controls="tabset-1-5" aria-selected="false">Transcripts</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell">
<div class="cell-output-display">
<div id="fig-initial" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-initial-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-initial.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-initial-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: The initial view of the tissue shows the location of FOVs and cell boundary layers. Yellow arrow shows location of ipython terminal.
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell">
<div class="cell-output-display">
<div id="fig-cell-types" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-cell-types-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-cell-types-short.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-cell-types-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Same extent as Figure&nbsp;2 and displaying the cell type from the ‘RNA_nbclust_clusters’.
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<div class="cell">
<div class="cell-output-display">
<div id="fig-niches" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-niches-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-niches.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-niches-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Cells colored by niche
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-4" class="tab-pane" aria-labelledby="tabset-1-4-tab">
<div class="cell">
<div class="cell-output-display">
<div id="fig-IF" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-IF-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-IF.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-IF-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Hippocampal region of tissue with GFAP (red) and DNA (cyan).
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-5" class="tab-pane" aria-labelledby="tabset-1-5-tab">
<div class="cell">
<div class="cell-output-display">
<div id="fig-tx" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-tx-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-transcripts.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-tx-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: Expression of <em>Calb1</em> (white dots) in cortex layer I.
</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
<p>To capture screenshots, simply click <code>File &gt; Save Screenshot...</code>. The images above are captured “with viewer” but that is optional.</p>
</section>
<section id="sec-scripting" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Scripting with <code>napari-cosmx</code></h1>
<p>This section is for advanced users who want finer control of the aesthetics.</p>
<p>Most of the items we’ve covered can also be accessed through various methods in the <code>gem</code> object that can found loaded in the <code>&gt;_</code> <code>ipython</code> interpreter (<em>i.e.</em>, yellow arrow in Figure&nbsp;2). You may have noticed in the figures above that there was code being used to take the screenshots. Here’s the full script that can help reproduce the figures above. I use reproducible scripts often. This is because I may want to make slight changes to a figure down the road. For example, if a reviewer overall likes an image but asks for the cell colors to be different, I just need to change the colors in the code and the script will pan and zoom where needed, set the IF channels and contrasts, and reproduce other layers programmatically.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">import imageio</span>
<span id="cb5-2"></span>
<span id="cb5-3">output_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'path/to/store/figures'</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Initial</span></span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.show_widget</span>()</span>
<span id="cb5-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.window.resize</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1650</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1100</span>)</span>
<span id="cb5-8">gem.viewer.camera.center <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6830708351616575</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">57.16103351264418</span>)</span>
<span id="cb5-9">gem.viewer.camera.zoom <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">128.0</span></span>
<span id="cb5-10"></span>
<span id="cb5-11">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-initial.png"</span></span>
<span id="cb5-12">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-13">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb5-14">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Cell types only</span></span>
<span id="cb5-17">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'FOV labels'</span>].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> False</span>
<span id="cb5-18">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Segmentation'</span>].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> False</span>
<span id="cb5-19"></span>
<span id="cb5-20">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-cell-types-short.png"</span></span>
<span id="cb5-21">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-22">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb5-23">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span>
<span id="cb5-24"></span>
<span id="cb5-25"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Niches</span></span>
<span id="cb5-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.color_cells</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'spatialClusteringAssignments'</span>)</span>
<span id="cb5-27">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-niches.png"</span></span>
<span id="cb5-28">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-29">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb5-30">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span>
<span id="cb5-31"></span>
<span id="cb5-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># IF only</span></span>
<span id="cb5-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.color_cells</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RNA_nbclust_clusters'</span>)</span>
<span id="cb5-34">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RNA_nbclust_clusters'</span>].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> False</span>
<span id="cb5-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.add_channel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GFAP'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colormap =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb5-36">gfap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GFAP'</span>]</span>
<span id="cb5-37"></span>
<span id="cb5-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.add_channel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DNA'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colormap =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cyan'</span>)</span>
<span id="cb5-39">dna <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DNA'</span>]</span>
<span id="cb5-40">dna.contrast_limits <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">208.39669421487605</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1328.5289256198346</span>]</span>
<span id="cb5-41">dna.gamma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1682758620689655</span></span>
<span id="cb5-42"></span>
<span id="cb5-43">gem.viewer.camera.center <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7181216373638928</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">55.314605674992876</span>)</span>
<span id="cb5-44">gem.viewer.camera.zoom <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1095.856465340922</span></span>
<span id="cb5-45">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Segmentation'</span>].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> True</span>
<span id="cb5-46">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Segmentation'</span>].opacity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.371900826446281</span></span>
<span id="cb5-47"></span>
<span id="cb5-48">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-IF.png"</span></span>
<span id="cb5-49">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-50">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb5-51">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span>
<span id="cb5-52"></span>
<span id="cb5-53"></span>
<span id="cb5-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transcripts</span></span>
<span id="cb5-55">cell_type_layer <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RNA_nbclust_clusters'</span>]</span>
<span id="cb5-56">cell_type_layer.opacity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb5-57">cell_type_layer.visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> True</span>
<span id="cb5-58">gem.viewer.camera.center <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.009723512204714457</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">59.25760232977486</span>)</span>
<span id="cb5-59">gem.viewer.camera.zoom <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1204.3755331686673</span></span>
<span id="cb5-60">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Segmentation'</span>].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> True</span>
<span id="cb5-61">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Segmentation'</span>].opacity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span></span>
<span id="cb5-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.plot_transcripts</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Calb1"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point_size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I</span></span>
<span id="cb5-63"></span>
<span id="cb5-64">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-transcripts.png"</span></span>
<span id="cb5-65">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-66">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb5-67">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<p>In practice, I use the GUI to adjust the settings (<em>e.g.</em>, zoom, opacity) and then “jot down” the results in my text editor. For example, when I zoom or pan to another location, that location can be found at:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">gem.viewer.camera.zoom</span>
<span id="cb6-2">gem.viewer.camera.center</span></code></pre></div>
</div>
<p>Similarly, the contrast limits and gamma values for IF channels can be saved as well.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">dna <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DNA'</span>]</span>
<span id="cb7-2">dna.contrast_limits <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">208.39669421487605</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1328.5289256198346</span>]</span>
<span id="cb7-3">dna.gamma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1682758620689655</span></span></code></pre></div>
</div>
<p>Screenshots can be done programmatically with the napari’s <code>screenshot</code> method and there are additional settings you can change (<em>e.g.</em>, just the canvas, scale) that we won’t cover here.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-transcripts.png"</span></span>
<span id="cb8-2">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-3">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb8-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<p>There are also methods available in <code>napari-cosmx</code> that do not have the GUI equivalent. We won’t be able to touch on all of these methods in this post but I want to highlight a few.</p>
<section id="color-cells-with-outlines" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="color-cells-with-outlines"><span class="header-section-number">4.1</span> Color cells with outlines</h2>
<p>We can plot the cell colors as boundaries instead of filled in polygons (Figure&nbsp;7).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gem.viewer.camera.center = (0.0, -0.5375926704126319, -54.7415680001114)</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gem.viewer.camera.zoom = 1371.524539264374</span></span>
<span id="cb9-3"></span>
<span id="cb9-4">gfap.visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> False</span>
<span id="cb9-5">dna.visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> False</span>
<span id="cb9-6">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Calb1'</span>].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> False</span>
<span id="cb9-7">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Npy'</span>].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> False</span>
<span id="cb9-8">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Targets'</span>].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> False</span>
<span id="cb9-9"></span>
<span id="cb9-10">gem.viewer.camera.center <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6346878790298397</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">54.95271110236874</span>)</span>
<span id="cb9-11">gem.viewer.camera.zoom <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2113.6387223301786</span></span>
<span id="cb9-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.color_cells</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RNA_nbclust_clusters'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contour=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb9-13"></span>
<span id="cb9-14">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-contours.png"</span></span>
<span id="cb9-15">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-16">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>True)</span>
<span id="cb9-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-contours" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-contours-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-contours.png" class="img-fluid figure-img" width="517">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-contours-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;7: Cells types (or other metadata items) can be represented as cell boundaries.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="plot-transcripts-with-an-expanded-color-pallette" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="plot-transcripts-with-an-expanded-color-pallette"><span class="header-section-number">4.2</span> Plot transcripts with an expanded color pallette</h2>
<p>The GUI offers a handful of colors to plot transcripts. We can specify which color, by name or by hexcode, to plot. For example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.plot_transcripts</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Calb1"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pink'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point_size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
</div>
<p>which is the same as</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.plot_transcripts</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Calb1"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#FFC0CB'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point_size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
</div>
</section>
<section id="plotting-genes-with-list-comprehensions" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="plotting-genes-with-list-comprehensions"><span class="header-section-number">4.3</span> Plotting genes with list comprehensions</h2>
<p>We can plot similar genes or targets with the same color. For example, the code that generated Figure&nbsp;8 is here.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">gem.viewer.camera.center <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6346878790298397</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">54.95271110236874</span>)</span>
<span id="cb12-2">gem.viewer.camera.zoom <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2113.6387223301786</span></span>
<span id="cb12-3"></span>
<span id="cb12-4">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> gem.targets</span>
<span id="cb12-5">filtered_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> df[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">df.target.str.contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NegPrb"</span>)]</span>
<span id="cb12-6"></span>
<span id="cb12-7">pandas_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filtered_df.to_pandas_df</span>()</span>
<span id="cb12-8">negatives <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pandas_df.target.unique</span>()<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.tolist</span>()</span>
<span id="cb12-9">[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.plot_transcripts</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point_size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> negatives];</span>
<span id="cb12-10"></span>
<span id="cb12-11">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-negatives.png"</span></span>
<span id="cb12-12">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb12-13">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb12-14">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-negatives" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-negatives-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-negatives.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-negatives-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;8: Same extent as Figure&nbsp;7 but with negatives shown in white.
</figcaption>
</figure>
</div>
</div>
</div>
<p>We can also supply of list of tuples where each tuple is a target and a color.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">genes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> [(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Npy'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magenta"</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Calb1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>)]</span>
<span id="cb13-2">[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.plot_transcripts</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene =</span> x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point_size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> genes];</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> negatives<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb13-5">  gem.viewer.layers[x].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> False</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.color_cells</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RNA_nbclust_clusters'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reset to filled contours</span></span>
<span id="cb13-8">cell_type_layer <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RNA_nbclust_clusters'</span>]</span>
<span id="cb13-9">cell_type_layer.opacity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb13-10">cell_type_layer.visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> True</span>
<span id="cb13-11">gem.viewer.camera.center <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.026937869510583412</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">59.20560304046731</span>)</span>
<span id="cb13-12">gem.viewer.camera.zoom <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3820.667999302201</span></span>
<span id="cb13-13">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Segmentation'</span>].visible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> True</span>
<span id="cb13-14">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Segmentation'</span>].opacity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span></span>
<span id="cb13-15"></span>
<span id="cb13-16">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-crowded-tx.png"</span></span>
<span id="cb13-17">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb13-18">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb13-19">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-crowded-tx" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-crowded-tx-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-crowded-tx.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-crowded-tx-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;9: Cortical layer with <em>Npy</em> (magenta) and <em>Calb1</em> (white).
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="changing-transcript-transparency" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="changing-transcript-transparency"><span class="header-section-number">4.4</span> Changing transcript transparency</h2>
<p>Sometimes transcripts can be stacked on top of each other to the point that it’s difficult to qualitatively determine the number of transcripts. Adjusting the transcript opacity of the layer in the GUI only changes the transparency of a single point. But it’s possible to change all points using the <code>ipython</code> interpreter.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Npy'</span>].opacity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb14-2">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-tx-opacity.png"</span></span>
<span id="cb14-3">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb14-4">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb14-5">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-tx-opacity" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-tx-opacity-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-tx-opacity.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-tx-opacity-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;10: Same extent as Figure&nbsp;9 but opacity of <em>Npy</em> reduced from 1 to 0.5.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="center-to-a-particular-fov" class="level2" data-number="4.5">
<h2 data-number="4.5" class="anchored" data-anchor-id="center-to-a-particular-fov"><span class="header-section-number">4.5</span> Center to a particular FOV</h2>
<p>While zooming (<code>gem.viewer.camera.zoom</code>) and panning (<code>gem.viewer.camera.center</code>) can control the exact location of the camera, you can programmatically go to a particular fov with the <code>center_fov</code> method.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># center to fov 123 and zoom in a little (i.e., buffer &gt; 1).</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.center_fov</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">buffer=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>)</span>
<span id="cb15-3"></span>
<span id="cb15-4">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-center-to-fov.png"</span></span>
<span id="cb15-5">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb15-6">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb15-7">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-center-to-fov" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-center-to-fov-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-center-to-fov.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-center-to-fov-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;11: Centering to a particular FOV (123) using the <code>center_fov</code> method.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="plot-all-transcripts" class="level2" data-number="4.6">
<h2 data-number="4.6" class="anchored" data-anchor-id="plot-all-transcripts"><span class="header-section-number">4.6</span> Plot all transcripts</h2>
<p>This is not advised for resource-limited systems as it plots <em>all</em> transcripts. The method <code>add_points</code> plots all the points for a given FOV. If no FOV is specified, it will plot all transcripts (this can be taxing on resource-limited computers).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.add_points</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb16-2">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Targets'</span>].opacity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span></span>
<span id="cb16-3">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-tx-all.png"</span></span>
<span id="cb16-4">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb16-5">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>False)</span>
<span id="cb16-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-tx-all" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-tx-all-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-tx-all.png" class="img-fluid figure-img" width="825">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-tx-all-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;12: All targets for FOV 123.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="changing-background-color" class="level2" data-number="4.7">
<h2 data-number="4.7" class="anchored" data-anchor-id="changing-background-color"><span class="header-section-number">4.7</span> Changing background color</h2>
<p>For some publication styles (<em>e.g.</em>, posters), turning the background a lighter color might be useful. However, when changing the background, some items might be more difficult to see (compare Figure&nbsp;7 with Figure&nbsp;13).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">gem.viewer.window.qt_viewer.canvas.background_color_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span></span>
<span id="cb17-2">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-white.png"</span></span>
<span id="cb17-3">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb17-4">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>True)</span>
<span id="cb17-5">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-white" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-white-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-white.png" class="img-fluid figure-img" width="517">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-white-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;13: Same extent as Figure&nbsp;7 but with a white background.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="scale-bar-location" class="level2" data-number="4.8">
<h2 data-number="4.8" class="anchored" data-anchor-id="scale-bar-location"><span class="header-section-number">4.8</span> Scale Bar location</h2>
<p>To reposition the scale bar to the bottom left:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">gem.viewer.window.qt_viewer.canvas.background_color_override <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span></span>
<span id="cb18-2">gem.viewer.scale_bar.position<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bottom_left'</span></span>
<span id="cb18-3">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-scale_bl.png"</span></span>
<span id="cb18-4">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb18-5">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>True)</span>
<span id="cb18-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-scale_bl" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-scale_bl-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-scale_bl.png" class="img-fluid figure-img" width="517">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-scale_bl-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;14: Same extent as Figure&nbsp;7 but with a scale bar moved to the bottom left.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="specify-individual-cell-types" class="level2" data-number="4.9">
<h2 data-number="4.9" class="anchored" data-anchor-id="specify-individual-cell-types"><span class="header-section-number">4.9</span> Specify individual cell types</h2>
<p>Here’s my last tip for this post. Using the <code>color_cells</code> method, one can choose the color of the cell types and which cells to color by supplying a dictionary. If a cell type is <em>not</em> in the supplied dictionary, it will not be shown as a color.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">custom_colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb19-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOL"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#AA0DFE"</span>,</span>
<span id="cb19-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GN"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#85660D"</span>,</span>
<span id="cb19-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CHO_HB"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># need not be hexcode</span></span>
<span id="cb19-5">}</span>
<span id="cb19-6"></span>
<span id="cb19-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.color_cells</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RNA_nbclust_clusters'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>custom_colors)</span>
<span id="cb19-8">fig_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> output_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/fig-color_three.png"</span></span>
<span id="cb19-9">with <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageio.get_writer</span>(fig_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>)) as writer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb19-10">        screenshot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gem.viewer.screenshot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">canvas_only=</span>True)</span>
<span id="cb19-11">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writer.append_data</span>(screenshot)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-color_three" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-color_three-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-color_three.png" class="img-fluid figure-img" width="517">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-color_three-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;15: Same extent as Figure&nbsp;7 highlighting three cell types only. MOL = mature oligodenrocytes = purple; GN = granule neurons = brown; CHO_HB = Cholinergic neurons Habenula = orange; cyan = all other cells.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Conclusion</h1>
<p>In this post I showed you some of my go-to <code>napari-cosmx</code> plugin features that I use when analyzing SMI data. In my workflow, I take advantage of the plugin’s interactivity as well as its underlying functions and methods. This comes in the form of “jotting down” settings for reproducibility or fine-tuning an image’s aesthetics ahead of publication. I couldn’t cover all the things this plugin can do but look for other tips in future posts.</p>


</section>

 ]]></description>
  <category>napari</category>
  <category>how-tos</category>
  <category>visualization</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/using-napari-cosmx.html</guid>
  <pubDate>Mon, 17 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/figures/fig-duality.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>GeoMx® mask generation for marker-based single-cell application</title>
  <dc:creator>Lidan Wu</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/GeoMx-scMask-generation/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>The ability to separate cells based on their relationship to nearby marker protein staining is a desired feature in many biological studies. One such use case would be to study the difference between neurons immediately next to neurofibrillary tangles and neurons that are a little further away. Another example would be to study the immune cells that are at different stages of engulfing microbes. This post introduces a pipeline for automatically generating <a href="https://nanostring.com/products/geomx-digital-spatial-profiler/geomx-dsp-overview/" target="_blank">GeoMx® Digital Spatial Profiler (DSP)</a>-ready binary masks in batch for marker-based single-cell application.</p>
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">Analysis Scratch Space</a>, the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies.</p>
</section>
<section id="workflow-description" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Workflow Description</h1>
<p>The pipeline is a python script <code>Generate_scMask_given_query.py</code> that runs as a command line and you can downloaded from <code>_code/GeoMx-scMask-generation</code> <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/GeoMx-scMask-generation" target="_blank">folder</a> in this repository. By passing the file path to image folder to the script, the pipeline would take GeoMx® morphology images and generate binary masks for negative-stained cells and cells connecting to positive-stained regions, respectively.</p>
<div id="fig-workflow" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-workflow-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/GeoMx-scMask-generation/figures/workflow_GeoMx_scMask_given_query.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-workflow-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: <strong>Workflow schematic</strong>. In neuropathology study, it’s sometimes desired to separate between neurons (stained in red channel) touching the neurofibrillary tangles (stained in green channel) and those that are a little further away. The pipeline described here fullfills the need of separating cells based on additional morphology marker of interest (aka “query channel”) and could also be applied to other single-cell applications like separating immune cells based on their contact with nearby pathogen.
</figcaption>
</figure>
</div>
<ol type="1">
<li>The process starts with color-channel reordering of morphology images that user downloads from <a href="https://nanostring.com/products/geomx-digital-spatial-profiler/geomx-dsp-overview/" target="_blank">GeoMx® DSP</a> instrument for the region of interest (ROI). The pipeline script would take those images and rearrange the channel order to have cytoplasm stain as 1st channel, query marker stain as 2nd channel, and optionally nuclear stain as 3rd channel.
<ul>
<li>The rearranged images would be saved in <code>2chan_res</code> (or <code>3chan_res</code> if including nuclear stain as 3rd channel) sub folder of the user-designated output root folder.</li>
</ul></li>
<li>After rearrangement, the pipeline script would perform cell segmentation using cytoplasm stain and optionally nuclear stain as well.
<ul>
<li>The resulting cell label images with pixel value indicates cell ID would be saved under <code>cellLabels</code> sub folder within the step (1) result folder.</li>
</ul></li>
<li>The pipeline script also takes the query marker stain of each image and performs auto-threshold to identify individual objects with positive stain and <strong>bigger</strong> than user-defined size cutoff, <code>min_positive_area</code>.
<ul>
<li>You can adjust the size cutoff based on your particular application to get a cleaner isolation of objects of interest. For example, if you are only interested in mature tangles, you can use higher size cutoff to select only the query-positive objects of big size.</li>
</ul></li>
<li>With label images from both cell segmentation and query-stained object segmentation, the pipeline script would then perform connectivity analysis between the 2 sets of label images and output 2 sets of binary masks in separate folders under user-designated output root folder.
<ol type="i">
<li><code>negative_cell_masks</code>: binary masks for cells that do <strong>NOT</strong> have valid overlapping with any of positive-stained object.
<ul>
<li>A valid overlapping is defined by whether the intersected area between cell and positive-stained object is <strong>bigger</strong> than user-defined size cutoff, <code>min_intersect_area</code>.</li>
<li>The ability to define valid overlapping based on area cutoff could help to separate between barely touching events and more significant overlapping events. This could be useful if you want to separate between immune cells just contacting a microbe stained in query channel and immune cells that have engulfed an invading microbe.</li>
</ul></li>
<li><code>positive_ROI_masks</code>: binary masks for cells with valid overlapping event <strong>AND</strong> their connected positive-stained objects.</li>
</ol></li>
</ol>
<p>Once complete, user can upload these binary masks back to GeoMx® DSP instrument for the corresponding ROI selection and initiate the sample collection.</p>
<div class="callout callout-style-default callout-tip callout-titled" title="Use manually modified cell label images">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Use manually modified cell label images
</div>
</div>
<div class="callout-body-container callout-body">
<p>You can use <a href="https://imagej.net/" target="_blank">ImageJ</a> or similar viewer to inspect and modify the outcomes of both cell segmentation and binary mask generation. We recommend <code>cellpose</code> <a href="https://cellpose.readthedocs.io/en/latest/gui.html" target="_blank">GUI</a> for visualization and modification on cell segmentation outcomes.</p>
<p>To use the modified cell label images which must be under <strong>same</strong> names and folder structure as original outputs, simply <strong>rerunning</strong> the pipeline script with same configuration would skip the step (1) and (2) above but instead perform identification of positive-stained objects and binary mask generation using the modified cell label images.</p>
</div>
</div>
</section>
<section id="setup-environment" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Setup Environment</h1>
<p>The pipeline script uses <a href="https://cellpose.readthedocs.io/en/latest/index.html" target="_blank">cellpose</a> python package for cell segmentation. Please refer to <code>cellpose</code> guide on <a href="https://github.com/MouseLand/cellpose/tree/main?tab=readme-ov-file#installation" target="_blank">installation instruction</a> for best usage, especially if you want to enable GPU for faster processing.</p>
<p>In addition, you would also need the following python packages in your environment. Below shows how to install them in terminal via <code>pip</code>.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">pip install numpy scipy opencv-python scikit-image</span></code></pre></div>
</div>
</div>
</section>
<section id="command-line-usage" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Command Line Usage</h1>
<p>The pipeline script in use, <code>Generate_scMask_given_query.py</code>, assumes you have multi-channel single-slice images in one folder. Those images should be downloaded for the ROIs you choose in GeoMx® study. The required inputs for the pipeline include:</p>
<ul>
<li><code>in_dir</code>: the <strong>absolute</strong> path to your GeoMx® DSP morphology image folder.</li>
<li><code>cyto_chan</code>, <code>query_chan</code>, <code>nuc_chan</code>: channel index for cytoplasm, query marker and nucleus stain, respectively.
<ul>
<li>The channel index should start from 1, so if your cytoplasm stain is at 4th channel, you use <code>--cyto_chan 4</code> with the script.</li>
<li>By default, <code>nuc_chan</code> is set to <code>0</code> such that it would not be included in cell segmentation downstream. But if you would like to use stains for both cytoplasm and nucleus for cell segmentation, you can pass the corresponding channel index of nucleus stain to the script.</li>
</ul></li>
<li><code>cell_diameter</code>: median cell diameter in pixel unit within your images, default to <code>30</code>. For best cell segmentation results, it’s recommended to set this parameter based on your sample.</li>
</ul>
<p>To use the pipeline, run <code>python Generate_scMask_given_query.py</code> and specify parameters as desired.</p>
<p>For instance to run on a folder with images where the 4th and 3rd channels of each image are cytoplasm and query marker stain, respectively while defining positive-stained objects (in query marker channel) to have at least 500 squared pixel area (using default values for all other parameters):</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Command Line Interface (CLI) example to run in Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">python Generate_scMask_given_query.py --in_dir imageFolder --cyto_chan 4 --query_chan 3 --out_dir outputFolder --min_positive_area 500</span></code></pre></div>
</div>
</div>
<p>The resulting output folder structure looks like this:</p>
<pre><code>outputFolder 
├── 20240612_pipeline_run_log.txt
│
├── 2chan_res 
│  ├── 001.tiff 
│  ├── 002.tiff 
│  └──cellLabels
│     ├── 001_cp_masks.tif 
│     └── 002_cp_masks.tif 
│
├── negative_cell_masks 
│     ├── 001_neg_2.tif
│     └── 002_neg_2.tif 
│
└── positive_ROI_masks 
      ├── 001_pos_1.tif
      └── 002_pos_1.tif</code></pre>
<p>There are other additional arguments providing fine control of different steps of the pipeline. Please use <code>-h</code> argument to see a full list of options allowed by the pipeline script.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Command Line Parameters</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">usage: Generate_scMask_given_query.py [-h] [--in_dir IN_DIR] [--out_dir OUT_DIR] [--cyto_chan CYTO_CHAN]</span>
<span id="cb4-2">                                      [--query_chan QUERY_CHAN] [--nuc_chan NUC_CHAN]</span>
<span id="cb4-3">                                      [--cell_seg_model CELL_SEG_MODEL] [--cell_diameter CELL_DIAMETER]</span>
<span id="cb4-4">                                      [--min_cell_area MIN_CELL_AREA] [--thresh_method THRESH_METHOD]</span>
<span id="cb4-5">                                      [--fill_holes] [--min_positive_area MIN_POSITIVE_AREA]</span>
<span id="cb4-6">                                      [--min_intersect_area MIN_INTERSECT_AREA] [--clean_export]</span></code></pre></div>
</div>
</div>
<section id="input-image-arguments" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="input-image-arguments"><span class="header-section-number">4.1</span> Input Image Arguments:</h2>
<dl>
<dt>in_dir</dt>
<dd>
absolute path to folder containing multi-channel images to evaluate
</dd>
<dt>out_dir</dt>
<dd>
output parent folder for intermediate results and final masks. (default to use input image folder)
</dd>
<dt>cyto_chan</dt>
<dd>
input channel index for cytoplasm or membrane stain of cells (starting from 1); Default: 1
</dd>
<dt>query_chan</dt>
<dd>
input channel index for the stain in query to define positive vs.&nbsp;negative staining (starting from 1); Default: 2
</dd>
<dt>nuc_chan</dt>
<dd>
input channel index for nuclear stain of cells (starting from 1); default to 0 to exclude nuclear stain from cell segmentation; Default: 0
</dd>
</dl>
</section>
<section id="cell-segmentation-model-arguments" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="cell-segmentation-model-arguments"><span class="header-section-number">4.2</span> Cell Segmentation Model Arguments:</h2>
<dl>
<dt>cell_seg_model</dt>
<dd>
cell segmentation model in use, ok to pass a file path of custom model; Default: <code>cyto3</code>
</dd>
<dt>cell_diameter</dt>
<dd>
median cell diameter of input images, in pixel unit; Default: 30
</dd>
<dt>min_cell_area</dt>
<dd>
minimal area of a valid cell, in squared pixel unit; can turn off with -1; Default: 15
</dd>
</dl>
</section>
<section id="positive-stained-cell-arguments" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="positive-stained-cell-arguments"><span class="header-section-number">4.3</span> Positive-stained cell Arguments:</h2>
<dl>
<dt>thresh_method</dt>
<dd>
auto-threshold method to define positive-stained object in query channel, use either <code>triangle</code> or <code>otsu</code>; Default: <code>triangle</code>
</dd>
<dt>fill_holes</dt>
<dd>
fill holes in positive-stained object before area filtering; if <code>True</code>, use 0.1x of input cell diameter as kernel size and output roundish borders; Default: <code>False</code>
</dd>
<dt>min_positive_area</dt>
<dd>
minimal area of a positive-stained object in query channel, in squared pixel unit; recommend to be 0.5x of expected cell area; Default: 50
</dd>
<dt>min_intersect_area</dt>
<dd>
minimal intersection area between a positive-stained cell with nearest positive-stained object in query channel, in squared pixel unit; recommend to be 0.1x of expected cell area; Default: 500
</dd>
<dt>clean_export</dt>
<dd>
export masks into file only when there are cells selected in either case; Default: <code>False</code>
</dd>
</dl>


</section>
</section>

 ]]></description>
  <category>GeoMx</category>
  <category>how-tos</category>
  <category>image processing</category>
  <category>Python</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/GeoMx-scMask-generation/</guid>
  <pubDate>Wed, 12 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/GeoMx-scMask-generation/figures/workflow_GeoMx_scMask_given_query.png" medium="image" type="image/png" height="85" width="144"/>
</item>
<item>
  <title>Making composite images from layered morphology 2D images</title>
  <dc:creator>Evelyn Metzger</dc:creator>
  <dc:creator>Vikram Kohli</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/composite-images/making-composite-images.html</link>
  <description><![CDATA[ 





<div class="cell">
<div class="cell-output-display">
<div id="fig-composite" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-composite-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/composite-images/figures/fig1.png" class="img-fluid figure-img" width="468">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-composite-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: A composite image created using the make_composite.py script. This image represents all channels of a single field of view in the <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/cosmx-smi-mouse-brain-ffpe-dataset/" target="blank">publicly available</a> mouse coronal hemisphere FFPE dataset.
</figcaption>
</figure>
</div>
</div>
</div>
<section id="description" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Description</h1>
<p>Composite images of CosMx™ Spatial Molecular Imager (SMI) fields of view (FOVs) can be useful when using open-sourced software such as <a href="https://squidpy.readthedocs.io/en/stable/index.html" target="_blank">squidpy</a> and <a href="https://giottosuite.readthedocs.io/en/latest/subsections/datasets/Nanostring_Lung12.html#create-a-giotto-object-for-each-fov" target="_blank">giotto</a>. In this post, we describe the make_composite.py script, a developmental python script that creates such composite images from layered morphology 2D images that can be exported from the AtoMx™ Spatial Informatics Portal (SIP). Layered images are extracted from the 2D morphology TIF files and written in a file format selected by the user. The extracted images are converted to 8bit, and composite images are written from these 8bit images.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>make_composite.py is a development version. Use at your own risk.</p>
</div>
</div>
</section>
<section id="where-to-find-the-script" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Where to find the script?</h1>
<p>The script and license can be found in the <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/assets/make-composite" target="_blank"><code>assets/make-composite</code></a> folder of the repository.</p>
</section>
<section id="required-libraries" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Required libraries</h1>
<p>The script requires the following libraries to be installed:</p>
<ul>
<li>Pillow (<em>e.g.</em>, <code>pip install pillow</code>)</li>
<li>Numpy (<em>e.g.</em>, <code>pip install numpy</code>)</li>
</ul>
</section>
<section id="user-inputs-required" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> User inputs (required)</h1>
<ul>
<li><p><code>clipping</code> (int or float) - Histogram clipping percentage. This value is the percentage of the histogram to clip on the left and right side. The effect changes the contrast of the image. A higher percentage produces more contrast. The user needs to determine the appropriate percentage by testing on a subset of images. The same clipping value is applied to all images. Generally, setting the value between 1 and 3 is a good starting point. Specifying a clipping value of 0 will not alter the histogram. A value is required, there is no default. <code>clipping</code> is a required input.</p></li>
<li><p><code>user_format</code> (str) - File format to be written. Options are jpg, png, and tif. All output files will be written in the format specified by the user. <code>user_format</code> is a required input.</p></li>
</ul>
</section>
<section id="additional-inputs-changed-within-the-script" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Additional inputs (changed within the script)</h1>
<ul>
<li><p>Variable: <code>colors</code> = [‘cyan’, ‘red’, ‘yellow’, ‘blue’, ‘magenta’]. The variable is the composite color scheme (not a user input; changeable within the script). The colors are listed in order of channel number (channel 0 to channel 4). Example: Channel 0 is colored ‘cyan’,</p></li>
<li><p>Variable: <code>compress_value</code> (set to 3). Lossless file compression value. Higher values produce smaller files at the expense of increased script execution time. The set value is a compromise between file size and execution time.</p></li>
</ul>
</section>
<section id="output" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Output</h1>
<ul>
<li><p><code>raw</code> – The extracted tif files from the morphology 2D images will be saved in this folder. The file format will follow &lt;fov_num&gt;_ch&lt;#&gt;_raw.&lt;user_format&gt;. &lt;fov_num&gt; is the fov number,<code>ch&lt;#&gt;</code> is the channel number (from 0 to 4), and &lt;user_format&gt; is the specified file type format (see User inputs). Note: If the specified <code>user_format</code> is jpg, the raw files will be 8bit jpg files.</p>
<p>Example</p>
<pre><code>F001_ch0_raw.jpg (for user_format = jpg)</code></pre></li>
<li><p><code>8bit</code> - The images in the raw_folder are converted to 8bit and saved in this folder. Note: If the specified <code>user_format</code> is jpg, the 8bit files are identical to the raw files. The file format will follow &lt;fov_num&gt;_ch&lt;#&gt;_8bit.&lt;user_format&gt; except when <code>user_format</code> = jpg</p>
<p>Example</p>
<pre><code>F001_ch0_8bit.tif (for user_format = tif)
F001_ch0_raw.jpg (for user_format = jpg)</code></pre></li>
<li><p><code>8bit_autocontrast</code> – Images in the 8bit folder are autocontrasted based on the user supplied clipping value. The file format will follow &lt;fov_num&gt;_ch&lt;#&gt;_8bit_autocontrast.&lt;user_format&gt;</p>
<p>Example</p>
<pre><code>F001_ch0_8bit_autocontrast.png (for user_format = png)</code></pre></li>
<li><p><code>composite</code> - Composite images created from the images in the <code>8bit</code> folder. The composite type is a screen composite. The file format will follow &lt;fov_num&gt;_composite.&lt;user_format&gt;</p>
<p>Example</p>
<pre><code>F001_composite.jpg (for user_format = jpg)</code></pre></li>
<li><p><code>composite_autocontrast</code> - Images in the composite_folder are autocontrasted based on the user specified clipping value. The file format will follow &lt;fov_num&gt;_composite_autocontrast.&lt;user_format&gt;</p>
<p>Example</p>
<pre><code>F001_composite_autocontrast.png (for user_format = png)</code></pre></li>
</ul>
</section>
<section id="usage" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Usage</h1>
<pre><code>cd to/your/Morphology2D folder
python /path/to/your/make_composite.py # and follow the on-screen prompts</code></pre>
<p>Regex pattern matching on 2D morphology file name format is implemented, however, only NanoString 2D morphology files should be present in the folder containing the make_composite script.</p>
</section>
<section id="example" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Example</h1>
<p>The example dataset that we used was the mouse coronal hemisphere FFPE dataset that is available to download from NanoString’s website <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/cosmx-smi-mouse-brain-ffpe-dataset/" target="blank">here</a>.</p>
<p>The Morphology2D folder is found within the CellStatsDir folder and has TIF files for each of the 130 FOVs.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In Terminal</span></span>
<span id="cb7-2">cd <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>to<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>slide<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>CellStatsDir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Morphology2D</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In Terminal</span></span>
<span id="cb8-2">tree <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>L <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</div>
<pre><code>├── 20230406_205644_S1_C902_P99_N99_F001.TIF
├── 20230406_205644_S1_C902_P99_N99_F002.TIF
...
├── 20230406_205644_S1_C902_P99_N99_F129.TIF
└── 20230406_205644_S1_C902_P99_N99_F130.TIF
</code></pre>
<p>Once in the Morphology2D folder, simply run the script and follow the on-screen prompts (Figure&nbsp;2).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In Terminal</span></span>
<span id="cb10-2">python <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>to<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>CosMx<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Analysis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Scratch<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Space<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>assets<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>make<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>composite<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>make_composite.py</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-run" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-run-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/composite-images/figures/fig-out.png" class="img-fluid figure-img" width="675">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-run-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Screenshot of standard output from terminal following script execution. In this example, I set the clipping percentage to 3 and the output to <code>png</code>. On a Macbook Pro M1, this took about 25 minutes to process 130 FOVs.
</figcaption>
</figure>
</div>
</div>
</div>
<p>When complete, the structure of the Morphology2D folder should resemble this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In Terminal</span></span>
<span id="cb11-2">tree <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>L <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</div>
<pre><code>├── 20230406_205644_S1_C902_P99_N99_F001.TIF
├── 20230406_205644_S1_C902_P99_N99_F002.TIF
...
├── 20230406_205644_S1_C902_P99_N99_F129.TIF
├── 20230406_205644_S1_C902_P99_N99_F130.TIF
├── 8bit
├── 8bit_autocontrast
├── composite
├── composite_autocontrast
└── raw</code></pre>
<p>These composite images can now be imported into open-sourced software or explored further.</p>


</section>

 ]]></description>
  <category>Squidpy</category>
  <category>Giotto</category>
  <category>pre-processing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/composite-images/making-composite-images.html</guid>
  <pubDate>Wed, 12 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/composite-images/figures/fig1.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Creating an anndata object from AtoMx™ exported results for interactive viewer and python-based analysis</title>
  <dc:creator>Lidan Wu</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Annotated Data, <a href="https://anndata.readthedocs.io/en/latest/" target="_blank">AnnData</a>, is a popular data structure for exploring and analyzing high-plex single-cell data, including spatial transcription data. There are quite a few open-sourced single-cell analysis tools in <code>python</code>, e.g.&nbsp;<a href="https://scanpy.readthedocs.io/en/stable/" target="_blank"><code>scanpy</code></a> and <a href="https://squidpy.readthedocs.io/en/stable/index.html" target="_blank"><code>squidpy</code></a>, as well as interactive viewers, e.g.&nbsp;<a href="https://cirrocumulus.readthedocs.io/en/latest/" target="_blank">Cirrocumulus</a> and <a href="https://github.com/chanzuckerberg/cellxgene" target="_blank">CELLxGENE</a> viewers, using this data structure. Converting CosMx™ spatial data sets into <code>anndata</code> data structure allows non-coders to easily share the light-weighted data object, visualize and explore the processed data in an interactive way.</p>
<p>This post describes how to create <code>anndata</code> object (<code>.h5ad</code>) from either a post-analysis <code>Seurat</code> object or basic data files exported from AtoMx™ Spatial Informatics Portal (SIP). We hope this post would facilitate seamless integration of CosMx™ spatial data sets into Python-based single-cell analysis workflows.</p>
<ul>
<li>Section&nbsp;2 Creating an <code>anndata</code> object in <code>.h5ad</code> format from post-analysis <code>Seurat</code> object exported by AtoMx™ SIP</li>
<li>Section&nbsp;3 Visualize the post-analysis <code>.h5ad</code> object in an interactive viewer</li>
<li>Section&nbsp;4 Creating per-sample <code>anndata</code> object from basic data files in <code>Python</code> for python-based single-cell analysis</li>
</ul>
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies.</p>
</section>
<section id="sec-convert-seurat" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Creating an <code>anndata</code> object from post-analysis <code>Seurat</code> object exported by AtoMx™ SIP</h1>
<p>AtoMx™ SIP can export a CosMx™ Spatial Molecular Imager (SMI) study into <code>Seurat</code> data objects for direct usage in <code>R</code>. Here we first work in <code>R</code> to open, visualize, and make minor adjustments to the object. We then export it into a <code>.h5ad</code> file for usage in <code>Python</code> tools.</p>
<p>The <code>Seurat</code> object used in this section is made from the CosMx™ mouse brain public data set and assembled in the structure used by the Technology Access Program (<a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/technology-access-program/" target="_blank">TAP</a>); similar outputs are available from the AtoMx™ SIP. To download raw data for this dataset, go <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/cosmx-smi-mouse-brain-ffpe-dataset/" target="_blank">here</a>. For more details on its data structure, please refer to earlier post on <a href="../../posts/seurat-cosmx-basics/#sec-data-structure" target="_blank">Visualizing spatial data with Seurat</a>.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>All the code in this section&nbsp;2 is in <code>R</code>.</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Many of the below functions require that you are working with <a href="https://satijalab.org/seurat/" target="_blank">Seurat v5</a> and may not work in earlier versions. Additionally, if you are exporting a <code>Seurat</code> object from AtoMx (v1.3+), be sure to export the <code>Seurat</code> object with polygon coordinates and transcripts included to access all of the functionality below.</p>
</div>
</div>
<section id="explore-post-analysis-seurat-object-and-add-in-custom-cell-meta-data" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="explore-post-analysis-seurat-object-and-add-in-custom-cell-meta-data"><span class="header-section-number">2.1</span> Explore post-analysis <code>Seurat</code> object and add in custom cell meta data</h2>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Setup R</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(Seurat)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(SeuratObject)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(SeuratDisk)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load existing seurat object</span></span>
<span id="cb1-7">seu.obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_object.Rds"</span>)</span></code></pre></div>
</div>
</div>
<p>The post-analysis <code>Seurat</code> object exported from AtoMx™ SIP should contain</p>
<ul>
<li>expression matrices for various feature types, like <code>RNA</code>, <code>RNA_normalized</code>, <code>negprobes</code> and <code>falsecodes</code>;</li>
<li>dimension reduction results, like <code>pca</code> and <code>umap</code>;</li>
<li>results for graphs, like <code>snn</code> and <code>nn</code>.</li>
</ul>
<p>You can visualize which results are included by running <code>names(seu.obj)</code>. The exact names of the results stored in your post-analysis <code>Seurat</code> object might be slightly different from what are included in the particular example here. Please adjust the code accordingly.</p>
<p>You can also add in any new cell metadata if desired. For illustration, the code below adds a new column with unique ID for each FOV.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add a new column for unique ID of each FOV</span></span>
<span id="cb2-2">fovNames <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'slide_ID_numeric'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov'</span>)]</span>
<span id="cb2-3">fovNames[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_names'</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_'</span>, fovNames[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'slide_ID_numeric'</span>]], </span>
<span id="cb2-4">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>, fovNames[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov'</span>]])</span>
<span id="cb2-5">fovNames <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(fovNames[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_names'</span>]], </span>
<span id="cb2-6">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nm =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(fovNames))</span>
<span id="cb2-7"></span>
<span id="cb2-8">seu.obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddMetaData</span>(seu.obj, </span>
<span id="cb2-9">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> fovNames, </span>
<span id="cb2-10">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov_names"</span>)</span></code></pre></div>
</div>
</section>
<section id="prepare-spatial-coordinates-and-visualize" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="prepare-spatial-coordinates-and-visualize"><span class="header-section-number">2.2</span> Prepare spatial coordinates and visualize</h2>
<p>AtoMx™ SIP stores the per-slide cell segmentation information as separate <code>SeuratObject::FOV</code> objects in the <code>images</code> slot. You can get the slide names by running <code>names(seu.obj@images)</code> in <code>R</code>.</p>
<p>The example dataset used in this section has <strong>two</strong> tissue slides in one study and each slide is in its own spatial coordinate space and thus may have xy overlapping between the slides.</p>
<section id="sec-perSlide" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="sec-perSlide"><span class="header-section-number">2.2.1</span> Case 1: 1 slide per <code>anndata</code> object</h3>
<p>When a per-slide <code>anndata</code> object is preferred, one should split the <code>Seurat</code> object by the slide name first before cleaning it up in section&nbsp;2.3. The code below is for generating one <code>anndata</code> object per tissue slide and the resulting data is used in later sections.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract the segmentation to separate variable</span></span>
<span id="cb3-2">imgList <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>images</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove segmentation in current seurat object before split</span></span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (slideName <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(imgList)){</span>
<span id="cb3-6">  seu.obj[[slideName]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb3-7">}</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># split Seurat object by slide name which is stored under "Run_Tissue_name" column of cell meta.data. </span></span>
<span id="cb3-10">objList <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SplitObject</span>(seu.obj, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">split.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Run_Tissue_name"</span>)</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You can add the segmentation back for each per-slide object </span></span>
<span id="cb3-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (eachSlide <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(objList)){</span>
<span id="cb3-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># standard names used in `images` slot</span></span>
<span id="cb3-15">  slideName <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">W|_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, eachSlide)</span>
<span id="cb3-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the `SeuratObject::FOV` object for current slide alone</span></span>
<span id="cb3-17">  objList[[eachSlide]][[slideName]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> imgList[[slideName]]</span>
<span id="cb3-18">}</span></code></pre></div>
</div>
<p>We would focus on the first slide for this section.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep data for only the 1st section for analysis in later section</span></span>
<span id="cb4-2">eachSlide <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(objList)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb4-3">slideName <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">W|_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, eachSlide)</span>
<span id="cb4-4">seu.obj1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> objList[[eachSlide]]</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract spatial coordinates of each cell for the chosen slide</span></span>
<span id="cb4-7">spatial_coords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> seu.obj1[[slideName]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>centroids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>coords</span>
<span id="cb4-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(spatial_coords) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> seu.obj1[[slideName]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>centroids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cells</span></code></pre></div>
</div>
<p>Let’s visualize the current cell segmentation colored by cell types and the molecular positions of a few selected genes. For more visualization tricks using <code>Seurat</code>, please refer to <a href="../../posts/seurat-cosmx-basics/index.html" target="_blank">earlier post</a> and <a href="https://satijalab.org/seurat/articles/seurat5_spatial_vignette_2" target="_blank">Seurat’s vignette</a> on image-based spatial data analysis.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify to show cell boundary </span></span>
<span id="cb5-2">SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DefaultBoundary</span>(seu.obj1[[slideName]]) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segmentation"</span></span>
<span id="cb5-3"></span>
<span id="cb5-4">Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ImageDimPlot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> seu.obj1, </span>
<span id="cb5-5">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> slideName, </span>
<span id="cb5-6">                     </span>
<span id="cb5-7">                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># column name of cell type in meta.data</span></span>
<span id="cb5-8">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nb_clus_final"</span>, </span>
<span id="cb5-9">                     </span>
<span id="cb5-10">                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify which molecules to plot</span></span>
<span id="cb5-11">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">molecules =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Slc17a7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gad1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Plp1"</span>), </span>
<span id="cb5-12">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mols.size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, </span>
<span id="cb5-13">                     </span>
<span id="cb5-14">                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fixed aspect ratio and flip xy in plotting</span></span>
<span id="cb5-15">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coord.fixed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flip_xy =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-mBrain-S1-cellType-segmentation.png" class="img-fluid"></p>
<p>You can zoom in to view a subset of cells by specifying which cells to plots.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change idents to "fov" for cell selection</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># note: "fov" here is a column in cell meta.data instead of the `SeuratObject::FOV` object. </span></span>
<span id="cb6-3">SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Idents</span>(seu.obj1) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span></span>
<span id="cb6-4"></span>
<span id="cb6-5">Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ImageDimPlot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> seu.obj1, </span>
<span id="cb6-6">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> slideName, </span>
<span id="cb6-7">                     </span>
<span id="cb6-8">                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># column name of cell type in meta.data</span></span>
<span id="cb6-9">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nb_clus_final"</span>, </span>
<span id="cb6-10">                     </span>
<span id="cb6-11">                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a vector of chosen cells, plot cells in chosen fovs</span></span>
<span id="cb6-12">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cells =</span> SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WhichCells</span>(</span>
<span id="cb6-13">                       seu.obj1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">idents =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">74</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">92</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">97</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">116</span>)), </span>
<span id="cb6-14">                     </span>
<span id="cb6-15">                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># crop the plots to area with cells only</span></span>
<span id="cb6-16">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crop =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb6-17">                     </span>
<span id="cb6-18">                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fixed aspect ratio and flip xy in plotting</span></span>
<span id="cb6-19">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coord.fixed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flip_xy =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-mBrain-S1-cellType-fovZoomed.png" class="img-fluid"></p>
</section>
<section id="sec-perStudy" class="level3" data-number="2.2.2">
<h3 data-number="2.2.2" class="anchored" data-anchor-id="sec-perStudy"><span class="header-section-number">2.2.2</span> Case 2: multi-slide per <code>anndata</code> object</h3>
<p>Since AtoMx™ SIP keeps the spatial coordinates of each slide in their own spatial coordinate space, one would need to arrange the spatial coordinates of multiple sample sections to avoid overlap in XY space when exporting multiple slides in same study-level <code>anndata</code> object. The example code below would arrange all slides along Y axis with some spacing between the slides.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract the segmentation to separate variable</span></span>
<span id="cb7-2">imgList <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>images</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># arrange slides along Y axis, add in spacer which is 0.2x of previous slide's coordinate span in Y direction</span></span>
<span id="cb7-5">spacerFactor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span></span>
<span id="cb7-6">global_y_offset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> </span>
<span id="cb7-7"></span>
<span id="cb7-8">spatial_coords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(imgList, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(img){</span>
<span id="cb7-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># coordinates of query slide</span></span>
<span id="cb7-10">  eachCoord <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>centroids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>coords</span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(eachCoord) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>centroids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cells</span>
<span id="cb7-12">  </span>
<span id="cb7-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># align to lower left corner</span></span>
<span id="cb7-14">  ori_offsets <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(eachCoord, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, min)</span>
<span id="cb7-15">  eachCoord <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sweep</span>(eachCoord, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, ori_offsets, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>)</span>
<span id="cb7-16">  </span>
<span id="cb7-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># span in y direction</span></span>
<span id="cb7-18">  y_span <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(eachCoord[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]))</span>
<span id="cb7-19"></span>
<span id="cb7-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add spacer in y direction </span></span>
<span id="cb7-21">  eachCoord[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> eachCoord[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> global_y_offset</span>
<span id="cb7-22">  </span>
<span id="cb7-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update global offset for next slide</span></span>
<span id="cb7-24">  global_y_offset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;&lt;-</span> global_y_offset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y_span<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>spacerFactor)</span>
<span id="cb7-25">  </span>
<span id="cb7-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(eachCoord)</span>
<span id="cb7-27">})</span>
<span id="cb7-28">spatial_coords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(rbind, spatial_coords)  </span>
<span id="cb7-29"></span>
<span id="cb7-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use the study-level Seurat object for downstream</span></span>
<span id="cb7-31">seu.obj1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> seu.obj</span>
<span id="cb7-32"></span>
<span id="cb7-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prefix for file name</span></span>
<span id="cb7-34">slideName <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"StudyLevel"</span> </span></code></pre></div>
</div>
<p>Let’s visualize the coordinates of all cells after slide arrangement.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add in cell type for color</span></span>
<span id="cb8-2">plotData <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(seu.obj1[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nb_clus_final"</span>]], </span>
<span id="cb8-3">                  spatial_coords[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(seu.obj1), ])</span>
<span id="cb8-4"></span>
<span id="cb8-5">ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(plotData, </span>
<span id="cb8-6">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flip xy to be consistent with earlier plots</span></span>
<span id="cb8-7">                ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(nb_clus_final))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-8">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-9">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10">  Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NoLegend</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-11">  Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DarkTheme</span>()</span></code></pre></div>
</div>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-mBrain-S1S2-cellType-slidesArranged.png" class="img-fluid"></p>
</section>
</section>
<section id="sec-cleanUp" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="sec-cleanUp"><span class="header-section-number">2.3</span> Clean up to keep only necessary data</h2>
<p>Next, we would further clean up the <code>Seurat</code> object (single-slide object from Case 1 in section&nbsp;2.2.1 or full-study-level object from Case 2 in section&nbsp;2.2.2) by trimming it down to contain only the data of interested.</p>
<p>Typically, one would keep the raw data counts from <code>RNA</code> assay (this example dataset uses <code>Nanostring</code> as assay name for <code>RNA</code>), cell embedding for <code>umap</code> (standard AtoMx exported object uses <code>approximateumap</code> as name for <code>umap</code>). We would also store the spatial coordinates of each cell as the cell embedding in a dimension reduction object called <code>spatial</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up seurat object to only necessary data </span></span>
<span id="cb9-2">seu.obj2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DietSeurat</span>(</span>
<span id="cb9-3">  seu.obj1, </span>
<span id="cb9-4">  </span>
<span id="cb9-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># subset of assays to keep, standard AtoMx object uses "RNA" assay</span></span>
<span id="cb9-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># of note, AtoMx stores normalized RNA counts in separate "RNA_normalized" assay</span></span>
<span id="cb9-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assays =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nanostring"</span>,</span>
<span id="cb9-8">  </span>
<span id="cb9-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep raw counts stored in "counts" layer</span></span>
<span id="cb9-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use "data" or "scale.data" if prefer to keep normalized counts before or after scaling</span></span>
<span id="cb9-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layers =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"counts"</span>, </span>
<span id="cb9-12">  </span>
<span id="cb9-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dimension reduction to keep, standard AtoMx object uses "approximateumap"</span></span>
<span id="cb9-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dimreducs =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umap"</span>)</span>
<span id="cb9-15"></span>
<span id="cb9-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clear the `images` slot</span></span>
<span id="cb9-17">allImgs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(seu.obj1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>images)</span>
<span id="cb9-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (img <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> allImgs){</span>
<span id="cb9-19">  seu.obj2[[img]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb9-20">}</span>
<span id="cb9-21"></span>
<span id="cb9-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add in spatial coordinates for current slide or study as a new dimension reduction</span></span>
<span id="cb9-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(spatial_coords) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPATIAL_"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_len</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(spatial_coords)))</span>
<span id="cb9-24">seu.obj2[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spatial"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateDimReducObject</span>(</span>
<span id="cb9-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">embeddings =</span> spatial_coords, </span>
<span id="cb9-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPATIAL_"</span>, </span>
<span id="cb9-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># standard AtoMx object use "RNA" assay</span></span>
<span id="cb9-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nanostring"</span>)</span></code></pre></div>
</div>
</section>
<section id="converting-to-h5ad-format-via-h5seurat" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="converting-to-h5ad-format-via-h5seurat"><span class="header-section-number">2.4</span> Converting to <code>h5ad</code> format via <code>h5Seurat</code></h2>
<p>Lastly, we would export the cleaned <code>Seurat</code> object into <code>h5Seurat</code> format and then further convert it into <code>h5ad</code> format using <code>SeuratDisk::Convert</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># export as "h5Seurat" object in your current working directory</span></span>
<span id="cb10-2">SeuratDisk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SaveH5Seurat</span>(seu.obj2, </span>
<span id="cb10-3">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(slideName, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_subset.h5Seurat"</span>))</span></code></pre></div>
</div>
<p><code><span style="color: red;"> Creating h5Seurat file for version 3.1.5.9900<br> Adding counts for Nanostring<br> Adding data for Nanostring<br> No variable features found for Nanostring<br> No feature-level metadata found for Nanostring<br> Adding cell embeddings for umap<br> No loadings for umap<br> No projected loadings for umap<br> No standard deviations for umap<br> No JackStraw data for umap<br> Adding cell embeddings for spatial<br> No loadings for spatial<br> No projected loadings for spatial<br> No standard deviations for spatial<br> No JackStraw data for spatial</span></code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to h5ad format</span></span>
<span id="cb11-2">SeuratDisk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Convert</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(slideName, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_subset.h5Seurat"</span>), </span>
<span id="cb11-3">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dest =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"h5ad"</span>)</span></code></pre></div>
</div>
<p><code><span style="color: red;"> Validating h5Seurat file<br> Adding data from Nanostring as X<br> Adding counts from Nanostring as raw<br> Transfering meta.data to obs<br> Adding dimensional reduction information for spatial<br> Adding dimensional reduction information for umap</span></code></p>
</section>
</section>
<section id="sec-interactive-viewer" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Visualize the post-analysis <code>.h5ad</code> object in an interactive viewer</h1>
<p>The resulting <code>anndata</code> object in <code>.h5ad</code> format could be visualized by various open-sourced interactive viewers. One such viewer would be <a href="https://cirrocumulus.readthedocs.io/en/latest/" target="_blank">Cirrocumulus viewer</a>.</p>
<p>For a quick start, one can install the viewer in terminal via <code>pip</code>.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb12-1">pip install cirrocumulus</span></code></pre></div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Create virtual environment for viewer">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Create virtual environment for viewer
</div>
</div>
<div class="callout-body-container callout-body">
<p>It’s recommended to create separate virtual environment for viewer. The current released version of <code>cirrocumulus</code> viewer is in version <code>1.1.57</code> and has package dependencies as listed below.</p>
<ul>
<li>Python &gt;= 3.9.7 and Python &lt;= 3.9.18</li>
<li>pandas &gt;= 1.3.4 and pandas &lt;= 2.1.0</li>
<li>anndata &gt;= 0.9.1 and &lt;= 0.10.2</li>
</ul>
<p>One can create a new environment with specific version of packages for this viewer using various package managers in terminal. One of such managers that people often use is <a href="https://docs.anaconda.com/free/miniconda/miniconda-install/" target="_blank">conda</a> and below is an example code.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb13-1">conda create --name myenv python==3.9.18 pandas==2.1.0 anndata==0.10.2</span></code></pre></div>
</div>
</div>
<p>To activate an existing environment, one should pass the name of environment to <code>conda activate</code> function.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb14-1">conda activate myenv</span></code></pre></div>
</div>
</div>
</div>
</div>
<p>To launch the viewer for the <code>.h5ad</code> object of interest, one can simply run</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb15-1">cirro launch &lt;path_to_dataset_file.h5ad&gt;</span></code></pre></div>
</div>
</div>
<p>The cirrocumulus viewer allows user to</p>
<ul>
<li><p>view multiple cell embeddings (<code>umap</code> and <code>spatial</code>) side-by-side for both cell metadata and gene expression (Figure&nbsp;1, Dual Embedding View);</p></li>
<li><p>use lasso tool to subset cells of interest in the embedding space (Figure&nbsp;2, Lasso-in-Space);</p></li>
<li><p>explore how the gene expression changes between different selections (Figure&nbsp;3, Marker Heatmap for all cells vs. Figure&nbsp;4, Dot Plots for Subsets).</p></li>
</ul>
<p>For more information, please refer to the <a href="https://cirrocumulus.readthedocs.io/en/latest/documentation.html" target="_blank">documentation</a> of <code>cirrocumulus</code> package</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Dual Embedding View</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Lasso-in-Space</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Marker Heatmap</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-4" aria-controls="tabset-1-4" aria-selected="false">Dot Plots for Subsets</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell">
<div class="cell-output-display">
<div id="fig-full-embedding" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-full-embedding-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-mBrain-S1-cirroViewer-screenshot.png" class="img-fluid figure-img" width="776">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-full-embedding-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: The dual-embedding views of <code>umap</code> and <code>spatial</code> for chosen cell meta data and gene expression level.
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell">
<div class="cell-output-display">
<div id="fig-chosen" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-chosen-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-mBrain-S1-lasso.png" class="img-fluid figure-img" width="760">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-chosen-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Use lasso tool to select cells in <code>spatial</code> embedding. Chosen cells are shown in solid colors.
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<div class="cell">
<div class="cell-output-display">
<div id="fig-marker-heatmap" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-marker-heatmap-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-mBrain-S1-cirroViewer-markerHeatmap.png" class="img-fluid figure-img" width="760">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-marker-heatmap-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Heatmap of selected gene expression across ‘leiden_clus’ of all cells.
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-4" class="tab-pane" aria-labelledby="tabset-1-4-tab">
<div class="cell">
<div class="cell-output-display">
<div id="fig-dot-plots" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-dot-plots-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-mBrain-S1-cirroViewer-dotPlot-selection-vs-all.png" class="img-fluid figure-img" width="760">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-dot-plots-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Dot plots of chosen gene expression for all cells (top) vs.&nbsp;cells within lasso selection (bottom) in Figure&nbsp;2 tab.
</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="sec-create-from-flatFiles" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Creating per-sample <code>anndata</code> object from basic data files in <code>Python</code> for python-based single-cell analysis</h1>
<p>For python lovers, it may be desired to create <code>anndata</code> object from scratch and then feed it into python-based single-cell analysis tools, like <a href="https://scanpy.readthedocs.io/en/stable/" target="_blank"><code>scanpy</code></a> and <a href="https://squidpy.readthedocs.io/en/stable/index.html" target="_blank"><code>squidpy</code></a>.</p>
<p>In this section, we start from the basic data files (in <code>.csv</code> format) exported from AtoMx™ SIP. For an example public dataset that you can download, go <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/cosmx-smi-human-pancreas-ffpe-dataset/" target="_blank">here</a>.</p>
<p>AtoMx™ SIP splits and organizes the basic data files by tissue slides during export. Thus, unlike the <code>Seurat</code> object of the mouse brain dataset used in earlier section&nbsp;2, the basic data files used for this section&nbsp;4 contain information for one <strong>single</strong> slide of pancreas sample. The <a href="../../assets/Pancreas-CosMx-ReadMe.html" target="_blank">ReadMe</a> associated with this example data set on pancreas shows the data structures of each file used in this section.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>All the code in this section&nbsp;4 is in <code>Python</code>.</p>
</div>
</div>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Setup Python</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb16-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb16-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb16-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb16-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> anndata <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ad</span>
<span id="cb16-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.sparse <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> csr_matrix</span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># path to folder of downloaded basic data files</span></span>
<span id="cb16-9">dataDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pancreas-CosMx-WTx-FlatFiles"</span></span></code></pre></div>
</div>
</div>
<p>Firstly, we would load the raw expression matrix and assign row names for <code>cell</code> in same naming pattern as the ones in cell meta data file. For demonstration purpose, we would focus on just the <code>RNA</code> probes and remove all the control probes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read in cell expression file</span></span>
<span id="cb17-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(os.path.join(dataDir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pancreas_exprMat_file.csv'</span>))</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create row names for "cell" in same format as what's used in cell metadata file</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the new cell_ID has pattern as 'c_[slideID]_[cell_ID]', where slideID = 1 in this example dataset</span></span>
<span id="cb17-6">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"new_cell_ID"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> row: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"c_1_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>fov<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cell_ID<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb17-7">df.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"new_cell_ID"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb17-8"></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drop annotation columns</span></span>
<span id="cb17-10">df.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>], inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb17-11"></span>
<span id="cb17-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># focus on RNA probes while drop control probes</span></span>
<span id="cb17-13">dummy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>re.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'Negative|SystemControl'</span>, flags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>re.IGNORECASE)</span>
<span id="cb17-14">chosen_probes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [col <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(df.columns) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> dummy.search(col)]</span>
<span id="cb17-15"></span>
<span id="cb17-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "cell" names for ordering downstream</span></span>
<span id="cb17-17">chosen_cells <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.index</span>
<span id="cb17-18"></span>
<span id="cb17-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to a sparse matrix</span></span>
<span id="cb17-20">raw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> csr_matrix(df[chosen_probes].astype(pd.SparseDtype(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float64"</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)).sparse.to_coo())</span>
<span id="cb17-21"></span>
<span id="cb17-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># delete unused variable to free up memory</span></span>
<span id="cb17-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">del</span> df</span></code></pre></div>
</div>
<p>Next, we would read in the cell meta data and extract the spatial coordinates of each cell. Based on the <a href="../../assets/Pancreas-CosMx-ReadMe.html" target="_blank">ReadMe</a> of these data files, we can know this data set has pixel size of 0.12028 µm per pixel. For illustration, we also convert the pixel coordinates to µm here.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read in cell meta data file</span></span>
<span id="cb18-2">cell_meta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(os.path.join(dataDir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pancreas_metadata_file.csv'</span>))</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use "cell" column as row names to match with raw expression matrix</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for convenience, the "cell" column is kept with the meta data</span></span>
<span id="cb18-6">cell_meta.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, drop <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb18-7"></span>
<span id="cb18-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract spatial coordinates of cells, use the global coordinates</span></span>
<span id="cb18-9">coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterX_global_px"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterY_global_px"</span>]]</span>
<span id="cb18-10"></span>
<span id="cb18-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use "x" and "y" as column names</span></span>
<span id="cb18-12">coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coords.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterX_global_px"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, </span>
<span id="cb18-13">                                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterY_global_px"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>})</span>
<span id="cb18-14"></span>
<span id="cb18-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reorder cells to be in same row order as raw expression matrix</span></span>
<span id="cb18-16">coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coords.reindex(index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chosen_cells)</span>
<span id="cb18-17"></span>
<span id="cb18-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert px coordinates to micrometer </span></span>
<span id="cb18-19">pixel_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12028</span></span>
<span id="cb18-20">coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coords.mul(pixel_size)</span></code></pre></div>
</div>
<p>Now, we are ready to create the <code>anndata</code> object using <code>anndata.AnnData()</code> python function. We would add the spatial coordinates as an annotation array stored in <code>obsm</code> slot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">adata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ad.AnnData(</span>
<span id="cb19-2">    X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> raw, </span>
<span id="cb19-3">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta, </span>
<span id="cb19-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row names should be the same as gene names</span></span>
<span id="cb19-5">    var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb19-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(chosen_probes), </span>
<span id="cb19-7">        columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>],</span>
<span id="cb19-8">        index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chosen_probes))</span>
<span id="cb19-9">                   </span>
<span id="cb19-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add spatial coordinates </span></span>
<span id="cb19-11">adata.obsm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'spatial'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coords.to_numpy()</span>
<span id="cb19-12"></span>
<span id="cb19-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># you can add name of slide or original file as one of unstructured annotation</span></span>
<span id="cb19-14">adata.uns[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pancreas"</span></span>
<span id="cb19-15"></span>
<span id="cb19-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert string columns to categorical data in `obs`</span></span>
<span id="cb19-17">adata.strings_to_categoricals()</span></code></pre></div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Add additional embedding">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Add additional embedding
</div>
</div>
<div class="callout-body-container callout-body">
<p>You can add additional embedding if exists. The code below assumes you have a new embedding for <code>umap</code> stored in <code>umap.csv</code> file as a data frame with rows in same order as the cell expression file.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">adata.obsm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'umap'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(os.path.join(dataDir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'umap.csv'</span>)).to_numpy()</span></code></pre></div>
</div>
</div>
</div>
<p>In some case, one may want to convert a meta data column with numeric values (like numeric ID for cell clusters) to categorical data, you can do this as shown below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for illustration, we would convert the "fov" column here</span></span>
<span id="cb21-2">columnName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span></span>
<span id="cb21-3">adata.obs[columnName] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Categorical(adata.obs[columnName].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>))</span></code></pre></div>
</div>
<p>You can also specific color for each categorical value via a dictionary. Most viewers based on <code>anndata</code> data structure would be able to recognize the color information stored under <code>[cell_meta_name]_colors</code> when displaying the corresponding categorical cell meta data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use random colors for illustration here</span></span>
<span id="cb22-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb22-3"></span>
<span id="cb22-4">colors_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb22-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> catVal <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> adata.obs[columnName].cat.categories:</span>
<span id="cb22-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># random RGB value</span></span>
<span id="cb22-7">    [r, g, b] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)]</span>
<span id="cb22-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to hex format</span></span>
<span id="cb22-9">    colors_dict[catVal] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{:02x}{:02x}{:02x}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(r, g, b)</span>
<span id="cb22-10"></span>
<span id="cb22-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add to `uns` slot</span></span>
<span id="cb22-12">colorName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>.join((columnName, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"colors"</span>))</span>
<span id="cb22-13">adata.uns[colorName] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [colors_dict[k] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> adata.obs[columnName].cat.categories]</span></code></pre></div>
</div>
<p>At this point, we have a <code>anndata</code> object that could be exported to <code>.h5ad</code> file format and pass to other python-based single-cell analysis tools, like <a href="https://scanpy.readthedocs.io/en/stable/" target="_blank"><code>scanpy</code></a> and <a href="https://squidpy.readthedocs.io/en/stable/index.html" target="_blank"><code>squidpy</code></a>.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Export as .h5ad file</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">adata.write(os.path.join(dataDir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pancreas_basic.h5ad"</span>), compression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gzip"</span>)</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Load existing .h5ad file</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> scanpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sc</span>
<span id="cb24-2">adata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sc.read(os.path.join(dataDir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pancreas_basic.h5ad"</span>))</span></code></pre></div>
</div>
</div>
<p>Let’s visualize the distribution of some cell meta data saved in this <code>anndata</code> object.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb25-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb25-3"></span>
<span id="cb25-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot transcripts distribution</span></span>
<span id="cb25-5">fig, axs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb25-6"></span>
<span id="cb25-7">axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total RNA transcripts per cell"</span>)</span>
<span id="cb25-8">sns.histplot(</span>
<span id="cb25-9">    adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nCount_RNA"</span>],</span>
<span id="cb25-10">    kde<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb25-11">    ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb25-12">)</span>
<span id="cb25-13"></span>
<span id="cb25-14">axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unique RNA transcripts per cell"</span>)</span>
<span id="cb25-15">sns.histplot(</span>
<span id="cb25-16">    adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nFeature_RNA"</span>],</span>
<span id="cb25-17">    kde<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb25-18">    ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb25-19">)</span>
<span id="cb25-20"></span>
<span id="cb25-21">axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transcripts per FOV"</span>)</span>
<span id="cb25-22">sns.histplot(</span>
<span id="cb25-23">    adata.obs.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nCount_RNA"</span>],</span>
<span id="cb25-24">    kde<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb25-25">    ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb25-26">)</span></code></pre></div>
</div>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-Pancreas-RNA-distribution.png" class="img-fluid"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot immune intensity distribution</span></span>
<span id="cb26-2">fig, axs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb26-3"></span>
<span id="cb26-4">axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PanCK"</span>)</span>
<span id="cb26-5">sns.histplot(</span>
<span id="cb26-6">    adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean.PanCK"</span>],</span>
<span id="cb26-7">    kde<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb26-8">    ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb26-9">)</span>
<span id="cb26-10"></span>
<span id="cb26-11">axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD68 &amp; CK8/18"</span>)</span>
<span id="cb26-12">sns.histplot(</span>
<span id="cb26-13">    adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean.CD68_CK8_18"</span>],</span>
<span id="cb26-14">    kde<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb26-15">    ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb26-16">)</span>
<span id="cb26-17"></span>
<span id="cb26-18">axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD298 &amp; B2M"</span>)</span>
<span id="cb26-19">sns.histplot(</span>
<span id="cb26-20">    adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean.CD298_B2M"</span>],</span>
<span id="cb26-21">    kde<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb26-22">    ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb26-23">)</span>
<span id="cb26-24"></span>
<span id="cb26-25">axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD45"</span>)</span>
<span id="cb26-26">sns.histplot(</span>
<span id="cb26-27">    adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean.CD45"</span>],</span>
<span id="cb26-28">    kde<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb26-29">    ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb26-30">)</span></code></pre></div>
</div>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-Pancreas-Membrane-Intensity-distribution.png" class="img-fluid"> For more details on how to analyze spatial data sets using python tools, please refer to the tutorials provided by <a href="https://scanpy.readthedocs.io/en/stable/tutorials/index.html" target="_blank"><code>scanpy</code></a> and <a href="https://squidpy.readthedocs.io/en/stable/notebooks/tutorials/index.html" target="_blank"><code>squidpy</code></a> packages.</p>
</section>
<section id="sec-conclusions" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Conclusions</h1>
<p>In summary, <code>anndata</code> serves as a versatile data structure in Python-based single-cell analysis. This post outlines how to create <code>anndata</code> object in <code>.h5ad</code> file format from AtoMx™ SIP exported results, which are either a post-analysis <code>Seurat</code> object or basic data files in <code>.csv</code> format. The conversion of AtoMx™ SIP exported results into <code>.h5ad</code> file would facilitate seamless integration into Python-based single-cell analysis workflows. Leveraging Python libraries like <a href="https://scanpy.readthedocs.io/en/stable/" target="_blank"><code>scanpy</code></a> and <a href="https://squidpy.readthedocs.io/en/stable/index.html" target="_blank"><code>squidpy</code></a>, as well as interactive viewers such as <a href="https://cirrocumulus.readthedocs.io/en/latest/" target="_blank">Cirrocumulus</a> and <a href="https://github.com/chanzuckerberg/cellxgene" target="_blank">CELLxGENE</a> viewers, researchers can share the lightweight data objects, visualize processed data, and explore them in more avenues.</p>


</section>

 ]]></description>
  <category>how-tos</category>
  <category>visualization</category>
  <category>Seurat</category>
  <category>AnnData</category>
  <category>Python</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/</guid>
  <pubDate>Wed, 05 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/h5ad_conversion/figures/Fig-mBrain-S1-cirroViewer-screenshot.png" medium="image" type="image/png" height="94" width="144"/>
</item>
<item>
  <title>Vignette: Basics of CosMx Analysis in R</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/vignette-basic-analysis/</link>
  <description><![CDATA[ 





<section id="basic-cosmx-analysis-workflow" class="level1">
<h1>Basic CosMx analysis workflow</h1>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>A complete demo analysis of a CosMx dataset can be found at workflow section in this post and the correspond scripts are stored under <code>_code/vignette</code> <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/vignette" target="_blank">folder</a> in this repository. It’s intended to be used as a template for other analyses to follow.</p>
<p>We’ll be analyzing a 1000-plex dataset from melanoma samples. We begin with the files written by the AtoMx flat file export module. The full dataset we’ve used is too big to be saved on Github. To follow along, we recommend using your own data, also as output by the AtoMx flat file export module.</p>
</section>
<section id="file-structure" class="level2">
<h2 class="anchored" data-anchor-id="file-structure">File structure</h2>
<p>We’ll organize the data for this analysis as follows:</p>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/vignette-basic-analysis/figures/folders.png" class="img-fluid"></p>
<ul>
<li>The “data” folder holds the exports from AtoMx</li>
<li>“processed_data” holds data objects generated during analysis, meant to be used by later analyses.</li>
<li>“results” holds results intended for human consumption.</li>
</ul>
<p>Inside the “data” folder, we’ll place a folder names “flat_files”, containing the AtoMx exports:</p>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/vignette-basic-analysis/figures/folders2.png" class="img-fluid"></p>
<p>And we’ll organize code as follows:</p>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/vignette-basic-analysis/figures/folders3.png" class="img-fluid"></p>
<ul>
<li>Analysis scripts are numbered by the order in which they should be run. Each creates data used by the downstream scripts.</li>
<li>Scripts are meant to be run in the directory where they lie.</li>
<li>“utils” holds R scripts containing functions used by analyses.</li>
</ul>
</section>
<section id="data-structure" class="level2">
<h2 class="anchored" data-anchor-id="data-structure">Data structure</h2>
<p>Our flat file exports contain the following data types:</p>
<ul>
<li>Raw counts</li>
<li>Cell metadata: other attributes of cells, e.g.&nbsp;size, immunofluorescence values, tissue and FOV IDs,…</li>
<li>Spatial locations: xy locations given in mm. <strong>Warning</strong>: studies containing multiple slides may initially have overlapping xy locations.</li>
<li>Transcript data: for all RNA transcripts detected, location, gene ID, and cell ID. Most analyses use cell-level data, not this transcript-level data, but it can make compelling plots.</li>
<li>Tissue images. Not used by most analyses, but useful for Figures.</li>
</ul>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/vignette-basic-analysis/figures/data_before.png" class="img-fluid"></p>
<p>Our analyses will append lots of new information to this starting point, ending here:</p>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/vignette-basic-analysis/figures/data_after.png" class="img-fluid"></p>
<p>New data types include:</p>
<ul>
<li>UMAP coordinates</li>
<li>Data acting as new metadata columns, e.g.&nbsp;cell type assignment and spatial cluster</li>
<li>Special results objects from analyses: cell typing, differential expression, InSituCor, …</li>
</ul>
</section>
<section id="sec-workflow" class="level2">
<h2 class="anchored" data-anchor-id="sec-workflow">Workflow</h2>
<p>Our workflow performs the below steps:</p>
<p>First, the fundamentals:</p>
<ul>
<li><a href="./assets/0.-loading-flat-files.html" target="_blank">Parse and format data export by AtoMx</a></li>
<li><a href="./assets/1.-finessing-tissues-spatial-arrangement.html" target="_blank">Custom arranging of tissues and FOVs in space</a></li>
<li><a href="./assets/2.-QC-and-normalization.html" target="_blank">QC and normalization</a></li>
<li><a href="./assets/3.-dimension-reduction.html" target="_blank">Dimension reduction (PCA and UMAP)</a></li>
<li><a href="./assets/4.-cell-typing.html" target="_blank">Cell typing</a></li>
</ul>
<p>Then, we go after biology:</p>
<ul>
<li><a href="./assets/5.-define-spatial-context.html" target="_blank">Defining cells’ spatial context</a></li>
<li>Hypothesis-driven analyses, i.e.&nbsp;differential expression: how do cells change behavior based on their spatial context? (coming summer 2024)</li>
<li>Hypothesis-generating analyses: identifying spatially correlated genes with InSituCor (coming summer 2024)</li>
</ul>
</section>
<section id="general-analysis-advice" class="level2">
<h2 class="anchored" data-anchor-id="general-analysis-advice">General analysis advice</h2>
<ul>
<li>For large experiments, <a href="../../posts/big-data/index.html" target="_blank">more advanced workflows</a> may be needed to avoid overwhelming your compute and/or memory.</li>
<li>For studies across multiple flow cells, batch correction should be considered.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>recommended</category>
  <category>overview</category>
  <category>quality control</category>
  <category>normalization</category>
  <category>cell typing</category>
  <category>pre-processing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/vignette-basic-analysis/</guid>
  <pubDate>Fri, 24 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>FOV QC from single-cell gene expression in spatial dataset</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/fov-qc/</link>
  <description><![CDATA[ 





<div class="cell">
<style type="text/css">
.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}

</style>
</div>
<section id="fov-qc" class="level1">
<h1>FOV QC</h1>
<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p>In most experiments, all FOVs will perform comparably, and data analyses need not consider FOV as a relevant variable. However, FOVs can suffer a variety of technical effects, sometimes causing obvious bias in the data (e.g.&nbsp;all the cells in an FOV will be clustered as the same cell type), and sometimes more subtle. We recommend that FOV QC be performed early in analyses. Should misbehaving FOVs be detected, we almost always recommend they be excluded.</p>
<p>Here we’ll describe known FOV-level artifacts, and we’ll show use of R code for detecting impacted FOVs.</p>
<div class="callout callout-style-default callout-caution callout-titled" title="Important note">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This approach, which looks only at gene expression data, compliments a tool we’ve developed for detecting FOVs with registration failures. This other tool will appear on the <a href="../../about.html" target="_blank">CosMx Analysis Scratch Space</a> in June 2024.</p>
</div>
</div>
</section>
<section id="fov-artifacts" class="level2">
<h2 class="anchored" data-anchor-id="fov-artifacts">FOV artifacts</h2>
<p>All known FOV artifacts act by modulating our ability to detect reporter probes. In CosMx SMI, the reporter probes contain a barcode that is read out across reporter cycles. At each reporter cycle, a given probe will either contain one of four colors or an empty slot. Among FOV artifacts, most commonly we see a single reporter cycle in which all 4 colors of probes lose efficiency; that is, 4 “bits” of our color barcode are impacted, and in turn, so are all the genes sharing those barcode bits.</p>
<p>Thus we see phenomena like the below, where genes with impacted bits are muted in specific FOVs (top left), while other genes behave normally:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/fov-qc/figures/example1.png" class="img-fluid figure-img" width="471"></p>
</figure>
</div>
</div>
</div>
<p>We have observed the below root causes of FOV artifacts:</p>
<section id="registration-failure" class="level4">
<h4 class="anchored" data-anchor-id="registration-failure">Registration failure:</h4>
<p>The images from each reporter cycle must be “registered”, i.e. aligned to the images from the other cycles, in both horizontal and vertical position. This process can go wrong in various ways, but all with the same impact: the barcode bits from that reporter cycle are assigned to the wrong positions, and they can no longer be used to identify the RNA transcript they came from. This phenomenon drives down expression for all genes with a barcode bit in the impacted reporter cycle. The CosMx instrument performs 8 “cycles” (as opposed to “reporter cycles”) of data acquisition for every reporter cycle and therefore barcode position; registration failure can impact a reporter cycle across one or all of these cycles, causing either a slight decrease or a total loss of signal for the impacted genes.</p>
</section>
<section id="autofluorescence" class="level4">
<h4 class="anchored" data-anchor-id="autofluorescence">Autofluorescence:</h4>
<p>If the tissue in an FOV is autofluorescent, it can make fluorescent signal from CosMx reporter probes harder to detect. When this happens, all genes with barcode bits in the impacted color will be harder to detect. At the same time, they will suffer higher rates of FalseCode style background events - i.e., their barcode will more often be spuriously observed in the absense of hyb probes for the gene.</p>
</section>
<section id="loss-of-signal" class="level4">
<h4 class="anchored" data-anchor-id="loss-of-signal">Loss of signal:</h4>
<p>An FOV with unusually low signal is an indicator of something having gone wrong with data collection. To be cautious, we recommend removing FOVs with any substantial loss of signal.</p>
</section>
</section>
<section id="approach-to-fov-qc" class="level2">
<h2 class="anchored" data-anchor-id="approach-to-fov-qc">Approach to FOV QC</h2>
<p>First, we’ll apply a permissive look at FOV’s signal strength, throwing out FOVs with &gt;30% loss of signal across most of their spatial span.</p>
<p>Then we’ll look for FOVs with biased gene expression profiles. Because all known artifacts impact <em>reporter cycles</em> (each containing 4 “bits”, i.e.&nbsp;reporter cycle/color pairs), we will look for artifacts at the level of bits, not genes. Specifically, for each barcode bit, we’ll look for FOVs where genes using the bit are underexpressed compared to comparable regions elsewhere. And we’ll fail reporter cycles where multiple bits look bad.</p>
<section id="technical-details" class="level4">
<h4 class="anchored" data-anchor-id="technical-details">Technical details:</h4>
<p>We place a 7x7 grid across each FOV. For each grid square, we find the 10 most similar squares in other FOVs, with “similar” being based on the square’s expression profile. (We also only accept one neighbor per other FOV.)</p>
<p>Then we score FOVs for signal loss. For each square, we compare its total counts to its comparator squares. For each barcode bit, this gives us 49 contrasts. If most (75%) of an FOV’s squares have low total counts compared to comparators, we flag the FOV.</p>
<p>To score FOVs for bias, we use a similar approach. For each barcode bit, we take the genes using the bit, and we contrast their expression in the square vs.&nbsp;in the average of the 10 most similar squares elsewhere. When an FOV’s grid squares consistently underexpress the relevant gene set, we flag the FOV.</p>
<p>Below we demonstrate this approach, looking at a tissue with particularly dramatic FOV effects.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/fov-qc/figures/example2.png" class="img-fluid figure-img" width="689"></p>
</figure>
</div>
</div>
</div>
<p>On the left, we plot expression of a single barcode bit (c12B = reporter cycle 12, color Blue) impacted by FOV effects. FOV 19 has almost entirely lost expression of the genes from this barcode bit, and FOV 16 looks as though it could be losing some expression.</p>
<p>On the right, we show the results of our FOV QC approach: for a 7x7 grid within each FOV, we see estimated change in barcode bit expression compared to similar grid squares in other FOVs. FOV 19 still stands out as an obvious failure. In contrast, the low expression in FOV 16 is shown to be similar - sometimes higher, sometimes lower - than biologically similar regions elsewhere in the tissue. FOV 22 now stands out as having perhaps increased expression of the bit, but the high log2(fold-changes) (red squares) appear to follow spatially smooth biology and not the sharp FOV borders, suggesting we needn’t worry about technical artifacts in this FOV.</p>
<p>Our tool summarize our output across FOVs x barcode bits with plots like the below:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/fov-qc/figures/exampleheatmap.png" class="img-fluid figure-img" width="626"></p>
</figure>
</div>
</div>
</div>
<p>In this example, 2 barcode bits from reporter cycle 12 were flagged, as was one bit from reporter cycle 18. Because all known artifacts impact <em>reporter cycles</em>, not the individual colors within them, we only flag FOVs in which at least two bits/colors from a single reporter cycle appear anomalous. This rule helps avoid flagging FOVs due to biological variability. So in this example, FOV 19 would be flagged since it had 2 bits flagged in reporter cycle 12, whereas FOV 18 would not be flagged since it had only one bit flagged in reporter cycle 18.</p>
</section>
</section>
<section id="code" class="level2">
<h2 class="anchored" data-anchor-id="code">Code</h2>
<p>Vignette for FOV QC can be found <a href="../../_code/FOV QC/FOV-QC-vignette.html" target="_blank">here</a> with functions stored under <code>_code/FOV QC</code> <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/FOV%20QC" target="_blank">folder</a> in the repository. The gene-to-barcode mappings needed by this approach are saved in the same <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/FOV%20QC/barcodes_by_panel.RDS" target="_blank">folder</a>.</p>
<p>We advise this approach be applied separately to each slide or tissue in a study.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This approach is new as of April 2024, and as-yet lightly tested. Use thoughtfully.</p>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>quality control</category>
  <category>pre-processing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/fov-qc/</guid>
  <pubDate>Mon, 20 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/fov-qc/figures/fov_qc_thumbnail.png" medium="image" type="image/png" height="118" width="144"/>
</item>
<item>
  <title>Evaluating Cell Segmentation Error based on Transcriptional Spatial Profiles using FastReseg</title>
  <dc:creator>Lidan Wu</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error-evaluation/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Accurate cell segmentation that assigns transcripts to cell locations is critical to data quality of spatial transcriptomics assays and the proper interpretation of downstream <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error/index.html" target="_blank">differential expression</a> analysis results. But it’s very challenging for tissue sections where cells are tightly packaged with shared, 3D boundaries and uneven morphology staining.</p>
<p>The <a href="https://github.com/Nanostring-Biostats/FastReseg/" target="_blank">FastReseg R package</a> offers a rapid way to evaluate the performance of existing cell segmentation and to perform refinement given the spatial transcriptional profiles.</p>
<ol type="1">
<li>The evaluation process starts with a cluster-specific reference expression profiles that are either derived from cell typing of query spatial data set given its current image-based cell segmentation or from external non-spatial data sets, like scRNA-seq.</li>
<li>Given the provided reference profiles, FastReseg algorithm scores individual transcripts for the goodness-of-fit within their respective cells based on the probability of each gene belonging to each cell type.</li>
<li>FastReseg then scores each cell for its spatial dependency of transcript score profiles under its most likely cell type given the overall transcriptional profiles. As confirmed by the membrane-stained images, cells with boundary errors at the junction of different cell types, exhibit strong spatial dependency in their transcript score profile and thus can be easily identified.</li>
<li>FastReseg further identifies the spatially connected groups of transcripts with low goodness-of-fit within incorrectly segmented cells.</li>
<li>A set of heuristic rules on neighborhood cell typing and transcript number are then applied to the identified transcript groups to decide on the re-segmentation actions, like merging, splitting and trimming. The re-segmented results show no significant spatial dependency on transcript score of individual cells, suggesting the successful correction of poorly segmented cells.</li>
</ol>
<div id="fig-FastReseg-workflow" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-FastReseg-workflow-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error-evaluation/figures/Fig1-FastReseg-workflow.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-FastReseg-workflow-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Schematic of FastReseg workflow
</figcaption>
</figure>
</div>
<p>You can find the FastReseg package <a href="https://github.com/Nanostring-Biostats/FastReseg/" target="_blank">here</a>. See the corresponding <a href="https://nanostring-biostats.github.io/FastReseg/articles/tutorial.html" target="_blank">tutorial</a> inside the package for more details.</p>
<p>The required inputs for <a href="https://github.com/Nanostring-Biostats/FastReseg/" target="_blank">FastReseg</a> include:</p>
<ul>
<li><p><code>counts</code>: a cell-by-gene counts matrix for entire dataset.</p></li>
<li><p><code>clust</code>: a vector of cluster assignments for each cell in <code>counts</code>; use <code>NULL</code> to automatically assign the cell cluster for each cell based on maximum transcript score of given the provided <code>refProfiles</code>.</p></li>
<li><p><code>refProfiles</code>: a gene-by-cluster matrix of cluster-specific expression profiles; default = <code>NULL</code> to use external cluster assignments.</p></li>
<li><p><code>transDF_fileInfo</code>: a data.frame with each row for each individual file of per-FOV transcript data.frame, columns include the file path of per FOV transcript data.frame file, annotation columns like <code>slide</code> and <code>fov</code> to be used as prefix when creating unique cell_ID across entire dataset.</p>
<ul>
<li>when <code>NULL</code>, use the transcript data.frame <code>transcript_df</code> directly.</li>
</ul></li>
</ul>
<p>This post will show you how to prepare your inputs if you have data assembled in the structure used by the Technology Access Program (<a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/technology-access-program/" target="_blank">TAP</a>); similar outputs are available from the AtoMx™ Spatial Informatics Portal (SIP). You can download an example public dataset from <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/cosmx-smi-human-pancreas-ffpe-dataset/" target="_blank">here</a>. The <a href="../../assets/Pancreas-CosMx-ReadMe.html" target="_blank">ReadMe</a> associated with this example data set on pancreas shows the data structures of each file used in this post.</p>
<ul>
<li>Section&nbsp;2 Prepare inputs from basic data files</li>
<li>Section&nbsp;3 Run segmentation evaluation</li>
<li>Section&nbsp;4 Run full pipeline to correct putative segmentation error identified</li>
</ul>
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies.</p>
</section>
<section id="sec-loading-flatFiles" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Prepare inputs from basic data files</h1>
<p>Here we start from the basic data files exported from AtoMx™ SIP.</p>
<p>While one can use cluster-specific expression profiles from other studies as <code>refProfiles</code>, here we take advantages of the existing cell typing derived from current cell segmentation in this data set and use it as <code>clust</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load existing cell typing results </span></span>
<span id="cb1-2">cellTypeRes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CellType_Accessory_Data/Pancreas_celltype_InSituType.rds"</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4">validCells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cellTypeRes[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_ID'</span>]]</span>
<span id="cb1-5">clust <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(cellTypeRes[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_types'</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nm =</span> cellTypeRes[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_ID'</span>]])</span></code></pre></div>
</div>
<p>Inspecting the cell typing results and the <a href="../../assets/Pancreas-CosMx-ReadMe.html" target="_blank">ReadMe</a> associated with this data set, we can know that this data set uses <code>c_[slide ID]_[fov ID]_[cell ID]</code> format to get cell ids unique across entire data set.</p>
<p>We next to load raw expression matrix for all genes and cells with available cell typing results.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load raw expression matrix and assign unique cell_ID to each one </span></span>
<span id="cb2-2">counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pancreas_exprMat_file.csv"</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use same slide ID as the existing cell typing results</span></span>
<span id="cb2-5">cell_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c_1_'</span>, counts[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov'</span>]], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>, counts[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_ID'</span>]])</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get valid gene names</span></span>
<span id="cb2-8">all_rnas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov|cell_ID|Negative|SystemControl"</span>, </span>
<span id="cb2-9">                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(counts), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invert =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-10"></span>
<span id="cb2-11">counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(counts[, .SD, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.SDcols =</span> all_rnas])</span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(counts) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_ids</span>
<span id="cb2-13"></span>
<span id="cb2-14">counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as</span>(counts[validCells, , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sparseMatrix"</span>) </span></code></pre></div>
</div>
<p>We then load the transcript file which contains all molecules’ coordinates and cell segmentation information. For faster processing in downstream <code>FastReseg</code> pipeline that is paralleled by input transcript files for different spatial regions, we recommend to split the full transcript data into multiple files by FOV (Field of View) and export those per-FOV transcript information as individual csv files. We would pass their file paths to <code>FastReseg</code> functions through <code>transDF_fileInfo</code> data.frame.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">fullTx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pancreas_tx_file.csv"</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add unique id for each transcript</span></span>
<span id="cb3-4">fullTx[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcript_id'</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_len</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(fullTx))</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove extracellular transcripts which has cell_ID = 0 in tx file </span></span>
<span id="cb3-7">fullTx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fullTx[cell_ID <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, ]</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep only the necessary info</span></span>
<span id="cb3-10">fullTx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fullTx[, .SD, .SDcols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcript_id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>, </span>
<span id="cb3-11">                                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'target'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov'</span>)]</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># split by FOV and export as per FOV csv file</span></span>
<span id="cb3-14">txDir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"perFOV_txFile"</span></span>
<span id="cb3-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.exists</span>(txDir)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(txDir)</span>
<span id="cb3-16"></span>
<span id="cb3-17">allFOVs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(fullTx[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov'</span>]])</span>
<span id="cb3-18"></span>
<span id="cb3-19">transDF_fileInfo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(allFOVs, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(fovId){</span>
<span id="cb3-20">  perFOV_filePath <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span>(txDir, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_'</span>, fovId, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_tx_data.csv'</span>))</span>
<span id="cb3-21">  data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fwrite</span>(fullTx[fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> fovId, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> perFOV_filePath)</span>
<span id="cb3-22">  </span>
<span id="cb3-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># since global coordinates of each molecule are available</span></span>
<span id="cb3-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use 0 for stage coordinates to disable conversion of local to global coordinates</span></span>
<span id="cb3-25">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file_path =</span> perFOV_filePath, </span>
<span id="cb3-26">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slide =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb3-27">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> fovId, </span>
<span id="cb3-28">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stage_X =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb3-29">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stage_Y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(df)</span>
<span id="cb3-31">})</span>
<span id="cb3-32"></span>
<span id="cb3-33">transDF_fileInfo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(rbind, transDF_fileInfo)</span></code></pre></div>
</div>
<p><code>FastReseg</code> evaluates segmentation in physical space and thus it’s preferred to convert all 3D coordinates into same unit. The relevant default parameters of <code>FastReseg</code> are set with respect to micrometer in coordinate unit. According to the <a href="../../assets/Pancreas-CosMx-ReadMe.html" target="_blank">ReadMe</a>, the pixel size for this data set is 0.12028 µm per pixel and the z step size is 0.8 µm per z slice. We would pass this information to <code>FastReseg</code> functions to do the coordinate conversion. If your data is already in micrometer unit, you can use <code>1</code> for pixel size and z step to disable the conversion.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">pixel_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12028</span></span>
<span id="cb4-2">zstep_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span></code></pre></div>
</div>
<p>By default, <code>FastReseg</code> would use 75% of available cores on your PC to do parallel processing of per-FOV transcript files in batch. If you have big per-FOV transcript file size (200+ MB per file) or limited memory available, it’s recommended to reduce the amount of cores used. You can control the number of cores in use by passing <code>percentCores</code> argument to <code>FastReseg</code> wrapper functions or set the core number directly with <code>options(mc.cores = X)</code>, where X is the number of cores you would like to use. The set option approach would overwrite the <code>percentCores</code> argument.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Too many large FOVs being processed in same batch could hit the memory limit and abort the current processing. Below is an example error message when memory limit was reached.</p>
<p><code><span style="color: red;"> Error in FUN(X[[i]], …) : subscript out of bounds<br> In addition: Warning messages:<br> 1: In parallel::mclapply(X = seq_len(nrow(transDF_fileInfo)), mc.allow.recursive = TRUE, :<br> scheduled cores 1, 3, 4, 7, 8, 10, 11 did not deliver results, all values of the jobs will be affected<br> 2: In parallel::mclapply(X = seq_len(nrow(transDF_fileInfo)), mc.allow.recursive = TRUE, :<br> scheduled core 12 encountered error in user code, all values of the job will be affected </span></code></p>
</div>
</div>
<p>Since the example data set in use is a Whole Transcriptome (WTx) spatial data set with high number of unique genes and large per-FOV transcript file size, here we cautiously reduce the % of core number to 0.25.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">percentCores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span></code></pre></div>
</div>
</section>
<section id="sec-FastReseg-flagging" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Run segmentation evaluation</h1>
<p>Now we have all the inputs needed to run <code>FastReseg</code> pipelines. For segmentation evaluation, one can use <code>FastReseg::fastReseg_flag_all_errors()</code> function to run through all the FOVs.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># path to output folder</span></span>
<span id="cb6-2">outDir_flagErrors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"res1f_flagErrors"</span></span>
<span id="cb6-3"></span>
<span id="cb6-4">flagAll_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FastReseg<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fastReseg_flag_all_errors</span>(</span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> counts,</span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clust =</span> clust,</span>
<span id="cb6-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refProfiles =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb6-8">  </span>
<span id="cb6-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># one can use `clust = NULL` if providing `refProfiles`</span></span>
<span id="cb6-10">  </span>
<span id="cb6-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transcript_df =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb6-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transDF_fileInfo =</span> transDF_fileInfo,</span>
<span id="cb6-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filepath_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'file_path'</span>,</span>
<span id="cb6-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prefix_colns =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to use existing cell IDs that are unique across entire data set </span></span>
<span id="cb6-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fovOffset_colns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'stage_Y'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'stage_X'</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># match XY axes between stage and each FOV</span></span>
<span id="cb6-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pixel_size =</span> pixel_size, </span>
<span id="cb6-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zstep_size =</span> zstep_size,</span>
<span id="cb6-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transID_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcript_id'</span>, </span>
<span id="cb6-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transGene_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>,</span>
<span id="cb6-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cellID_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>, </span>
<span id="cb6-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">spatLocs_colns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span>),</span>
<span id="cb6-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extracellular_cellID =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, </span>
<span id="cb6-23">  </span>
<span id="cb6-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># control core number used for parallel processing</span></span>
<span id="cb6-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">percentCores =</span> percentCores, </span>
<span id="cb6-26">  </span>
<span id="cb6-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cutoff of transcript number to do spatial modeling</span></span>
<span id="cb6-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flagModel_TransNum_cutoff =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, </span>
<span id="cb6-29">  </span>
<span id="cb6-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flagCell_lrtest_cutoff =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cutoff for flagging wrongly segmented cells</span></span>
<span id="cb6-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">svmClass_score_cutoff =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cutoff for low vs. high transcript score</span></span>
<span id="cb6-32">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path_to_output =</span> outDir_flagErrors, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># path to output folder</span></span>
<span id="cb6-33">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_trimmed_perCell =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flag to return per cell expression matrix after trimming all flagged transcripts </span></span>
<span id="cb6-34">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ctrl_genes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># optional to include name for control probes in transcript data.frame, e.g. negative control probes</span></span>
<span id="cb6-35">  )</span>
<span id="cb6-36"></span>
<span id="cb6-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract spatial evaluation outcomes of valid cells</span></span>
<span id="cb6-38">modStats_ToFlagCells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> flagAll_res[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'combined_modStats_ToFlagCells'</span>]]</span></code></pre></div>
</div>
<p>The function above returns the statistics for evaluating each cell for spatial dependent model against null model. Based on the P value <code>lrtest_Pr</code> or the negative log10 value <code>lrtest_nlog10P</code>, one can select for cells with strong spatial dependency in transcript score profile. Those cells are likely to contain contaminating transcripts for neighbor cells.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 13%">
<col style="width: 10%">
<col style="width: 11%">
<col style="width: 9%">
<col style="width: 10%">
<col style="width: 13%">
<col style="width: 15%">
<col style="width: 7%">
<col style="width: 8%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: right;">transcript_num</th>
<th style="text-align: right;">modAlt_rsq</th>
<th style="text-align: right;">lrtest_ChiSq</th>
<th style="text-align: right;">lrtest_Pr</th>
<th style="text-align: left;">UMI_cellID</th>
<th style="text-align: right;">lrtest_nlog10P</th>
<th style="text-align: left;">tLLR_maxCellType</th>
<th style="text-align: left;">flagged</th>
<th style="text-align: right;">file_idx</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">315</td>
<td style="text-align: right;">0.1076159</td>
<td style="text-align: right;">35.86547</td>
<td style="text-align: right;">0.0000419</td>
<td style="text-align: left;">c_1_51_1</td>
<td style="text-align: right;">4.377932</td>
<td style="text-align: left;">Macrophage</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: right;">309</td>
<td style="text-align: right;">0.0744980</td>
<td style="text-align: right;">23.92246</td>
<td style="text-align: right;">0.0044256</td>
<td style="text-align: left;">c_1_51_10</td>
<td style="text-align: right;">2.354028</td>
<td style="text-align: left;">Ductal</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1676</td>
<td style="text-align: right;">0.0976644</td>
<td style="text-align: right;">172.24037</td>
<td style="text-align: right;">0.0000000</td>
<td style="text-align: left;">c_1_51_100</td>
<td style="text-align: right;">31.676496</td>
<td style="text-align: left;">Ductal</td>
<td style="text-align: left;">TRUE</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: right;">753</td>
<td style="text-align: right;">0.0928050</td>
<td style="text-align: right;">73.34062</td>
<td style="text-align: right;">0.0000000</td>
<td style="text-align: left;">c_1_51_1000</td>
<td style="text-align: right;">11.974934</td>
<td style="text-align: left;">Ductal</td>
<td style="text-align: left;">TRUE</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: right;">892</td>
<td style="text-align: right;">0.1512712</td>
<td style="text-align: right;">146.30190</td>
<td style="text-align: right;">0.0000000</td>
<td style="text-align: left;">c_1_51_1001</td>
<td style="text-align: right;">26.936616</td>
<td style="text-align: left;">Ductal</td>
<td style="text-align: left;">TRUE</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: right;">1220</td>
<td style="text-align: right;">0.0802211</td>
<td style="text-align: right;">102.01879</td>
<td style="text-align: right;">0.0000000</td>
<td style="text-align: left;">c_1_51_1002</td>
<td style="text-align: right;">17.211741</td>
<td style="text-align: left;">Acinar.2</td>
<td style="text-align: left;">TRUE</td>
<td style="text-align: right;">1</td>
</tr>
</tbody>
</table>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># histogram for spatial dependency in all cells</span></span>
<span id="cb7-2">tmp_flag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(modStats_ToFlagCells<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lrtest_nlog10P)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># exclude cells with too few transcript number</span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(modStats_ToFlagCells<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lrtest_nlog10P[tmp_flag], </span>
<span id="cb7-4">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FD"</span>, </span>
<span id="cb7-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-log10(lrtest p.value)"</span>,</span>
<span id="cb7-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Histogram of spatial dependency, mean = "</span>, </span>
<span id="cb7-7">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(modStats_ToFlagCells<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lrtest_nlog10P[tmp_flag]), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb7-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(modStats_ToFlagCells<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lrtest_nlog10P[tmp_flag]), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error-evaluation/index_files/figure-html/plotModStats-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cutoff to flag for cells with strong spatial dependency in transcript score profiles</span></span>
<span id="cb8-2">flagCell_lrtest_cutoff  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb8-3"></span>
<span id="cb8-4">modStats_ToFlagCells[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'flagged'</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (modStats_ToFlagCells[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lrtest_nlog10P'</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> flagCell_lrtest_cutoff )</span>
<span id="cb8-5">flagged_cells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> modStats_ToFlagCells[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'UMI_cellID'</span>]][modStats_ToFlagCells[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'flagged'</span>]]]</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%d cells, %.4f of all evaluated cells, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">are flagged for resegmentation with lrtest_nlog10P &gt; %.1f."</span>, </span>
<span id="cb8-8">                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(flagged_cells), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(flagged_cells)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(modStats_ToFlagCells), flagCell_lrtest_cutoff))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>33210 cells, 0.6791 of all evaluated cells, 
are flagged for resegmentation with lrtest_nlog10P &gt; 5.0.</code></pre>
</div>
</div>
<p>Let’s visualize some flagged cells with various degrees of spatial dependency in transcript profiles</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># focus on 1st per-FOV file</span></span>
<span id="cb10-2">transcript_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(outDir_flagErrors, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/1_flagged_transDF.csv"</span>))</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(modStats_ToFlagCells) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> modStats_ToFlagCells<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>UMI_cellID</span>
<span id="cb10-5">cells_to_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> modStats_ToFlagCells[flagged_cells, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lrtest_nlog10P'</span>]</span>
<span id="cb10-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(cells_to_plot) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> flagged_cells</span>
<span id="cb10-7"></span>
<span id="cb10-8">cells_to_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cells_to_plot[flagged_cells <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> transcript_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMI_cellID"</span>]]]</span>
<span id="cb10-9"></span>
<span id="cb10-10">cells_to_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cells_to_plot[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(cells_to_plot, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> T)]</span>
<span id="cb10-11">cells_to_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cells_to_plot[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(cells_to_plot), </span>
<span id="cb10-12">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(cells_to_plot)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>))]</span>
<span id="cb10-13"></span>
<span id="cb10-14">FastReseg<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotSpatialScoreMultiCells</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chosen_cells =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(cells_to_plot), </span>
<span id="cb10-15">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cell_labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(cells_to_plot, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), </span>
<span id="cb10-16">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transcript_df =</span> transcript_df, </span>
<span id="cb10-17">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cellID_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMI_cellID"</span>, </span>
<span id="cb10-18">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transID_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMI_transID"</span>,</span>
<span id="cb10-19">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score_tLLR_maxCellType"</span>, </span>
<span id="cb10-20">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">spatLocs_colns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>),</span>
<span id="cb10-21">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point_size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
</div>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error-evaluation/figures/fig_plotFlagCells-1.png" class="img-fluid"></p>
<p>You can see that cells with large <code>lrtest_nlog10P</code> value exhibited strong spatial dependency in their transcript score profiles under their best fitted cell type (i.e.&nbsp;<code>score_tLLR_maxCellType</code>). Below we would zoom in to one of the flagged cells (<code>c_1_51_1211</code> with <code>lrtest_nlog10P = 49.82</code>) and visualize its transcript score profiles in 3D.</p>
<div class="cell">
<div class="sourceCode cell-code hidden" id="cb11" data-startfrom="270" data-source-offset="0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 269;"><span id="cb11-270">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FileAttachment</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assets/chosenCell_flagged_transDF.csv"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csv</span>({ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">typed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span> })</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="ojs-cell-1" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell panel-input card bg-light p-2">
<div class="sourceCode cell-code hidden" id="cb12" data-startfrom="276" data-source-offset="-0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 275;"><span id="cb12-276">viewof colorColumn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(</span>
<span id="cb12-277">  [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'score_tLLR_maxCellType'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb12-278">  { <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Colored by'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb12-279">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'score_tLLR_maxCellType'</span></span>
<span id="cb12-280">  }</span>
<span id="cb12-281">)</span>
<span id="cb12-282"></span>
<span id="cb12-283">viewof lowerLimit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(</span>
<span id="cb12-284">  [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb12-285">  { <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Lower Limit'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb12-286">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb12-287">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">step</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb12-288">  }</span>
<span id="cb12-289">)</span>
<span id="cb12-290"></span>
<span id="cb12-291">viewof upperLimit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(</span>
<span id="cb12-292">  [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb12-293">  { <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Upper Limit'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb12-294">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb12-295">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">step</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb12-296">  }</span>
<span id="cb12-297">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-2-1" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-2-2" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-2-3" data-nodetype="declaration">

</div>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code hidden" id="cb13" data-startfrom="301" data-source-offset="-0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 300;"><span id="cb13-301">Plotly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">require</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdn.plot.ly/plotly-2.32.0.min.js"</span>)</span>
<span id="cb13-302"></span>
<span id="cb13-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// document element for plot</span></span>
<span id="cb13-304">plotDiv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb13-305">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> div <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`&lt;div id="plotlyDiv" style="width:100%;height:600px;"&gt;&lt;/div&gt;`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-306">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-307">}</span>
<span id="cb13-308"></span>
<span id="cb13-309"></span>
<span id="cb13-310"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Function to create the 3D scatter plot</span></span>
<span id="cb13-311"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createPlot</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colorColumn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> lowerLimit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> upperLimit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> div) {</span>
<span id="cb13-312">  div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span>DOM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div'</span>)</span>
<span id="cb13-313">  div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plotlyDiv"</span></span>
<span id="cb13-314">  </span>
<span id="cb13-315">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">var</span> trace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb13-316">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-317">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-318">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">z</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-319">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'markers'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-320">     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">marker</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb13-321">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">size</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-322">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> d[colorColumn])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-323">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">colorscale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb13-324">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(252, 253, 191)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb13-325">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.056</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(252, 236, 173)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-326">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.111</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(253, 218, 156)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-327">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.167</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(254, 201, 141)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-328">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.222</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(254, 183, 126)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-329">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.278</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(254, 167, 114)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-330">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.333</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(253, 149, 103)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-331">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.389</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(251, 131, 95)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-332">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.444</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(247, 113, 92)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-333">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(241, 96, 93)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-334">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.556</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(232, 83, 98)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-335">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.611</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(219, 71, 106)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-336">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.667</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(205, 64, 113)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-337">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.722</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(189, 57, 119)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-338">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.778</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(174, 52, 123)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-339">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.833</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(159, 47, 127)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-340">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.889</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(0, 149, 175)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-341">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.944</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(0, 93, 158)"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb13-342">          [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(38, 24, 95)"</span>]</span>
<span id="cb13-343">        ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-344">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">showscale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-345">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">cmin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Math</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(lowerLimit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> upperLimit)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb13-346">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">cmax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Math</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(lowerLimit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> upperLimit)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb13-347">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">colorbar</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> { <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> colorColumn }</span>
<span id="cb13-348">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-349">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scatter3d'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-350">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`target: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;br&gt;score_tLLR_maxCellType:&lt;br&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score_tLLR_maxCellType</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb13-351">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">hoverinfo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text'</span></span>
<span id="cb13-352">  }</span>
<span id="cb13-353">  </span>
<span id="cb13-354">  Plotly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">newPlot</span>(div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>[trace]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>{})</span>
<span id="cb13-355">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> div</span>
<span id="cb13-356">  </span>
<span id="cb13-357"> </span>
<span id="cb13-358">}</span>
<span id="cb13-359"></span>
<span id="cb13-360"></span>
<span id="cb13-361">figDiv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createPlot</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colorColumn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> lowerLimit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> upperLimit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> plotDiv)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-3-1" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-3-2" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-3-3" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-3-4" data-nodetype="declaration">

</div>
</div>
</div>
</div>
</section>
<section id="sec-FastReseg-full" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Run full pipeline to correct putative segmentation error identified</h1>
<p>If cell segmentation correction is desired, one can use <code>FastReseg::fastReseg_full_pipeline()</code> function to not only flag but also correct the identified putative cell segmentation errors.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The current defaults for separating out poor-fit transcripts are on the conservative ends. To make the separation more aggressive with less constraint in spatial neighborhood, please refer to the <a href="https://www.rdocumentation.org/packages/e1071/versions/1.7-14/topics/svm" target="_blank">manual of <code>e1071::svm()</code> function</a> on what arguments one can adjust and pass to the <code>FastReseg</code> functions via <code>svm_args</code> list variable. Example arguments include <code>kernel</code> type, <code>scale</code>, <code>gamma</code> and <code>type</code> of <code>svm</code> classification machine.</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Include control probes">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Include control probes
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you would like to keep the control probes, e.g.&nbsp;negative probes, in the post-resegmentation data, you can pass the names of those control probes as a vector to the function via <code>ctrl_genes</code> argument. Those <code>ctrl_genes</code> would be assigned with same transcript scores under all cell types and thus the only way they changed their cell ID assignment would be due to the presence of poor-fit transcriptional zone in proximity. Of note, to avoid significant interference from those <code>ctrl_genes</code>, it’s recommended to have total counts of those genes below 1% of total counts of all genes in each cell.</p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># path to output folder</span></span>
<span id="cb14-2">outDir_full <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"res2_fullPipeline"</span></span>
<span id="cb14-3"></span>
<span id="cb14-4">refineAll_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FastReseg<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fastReseg_full_pipeline</span>(</span>
<span id="cb14-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> counts,</span>
<span id="cb14-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clust =</span> clust,</span>
<span id="cb14-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refProfiles =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb14-8">  </span>
<span id="cb14-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># one can use `clust = NULL` if providing `refProfiles`</span></span>
<span id="cb14-10">  </span>
<span id="cb14-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transcript_df =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb14-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transDF_fileInfo =</span> transDF_fileInfo,</span>
<span id="cb14-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filepath_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'file_path'</span>,</span>
<span id="cb14-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prefix_colns =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to use existing cell IDs that are unique across entire data set </span></span>
<span id="cb14-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fovOffset_colns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'stage_Y'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'stage_X'</span>),</span>
<span id="cb14-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pixel_size =</span> pixel_size,</span>
<span id="cb14-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zstep_size =</span> zstep_size,</span>
<span id="cb14-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transID_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transcript_id'</span>,</span>
<span id="cb14-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transGene_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>,</span>
<span id="cb14-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cellID_coln =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>,</span>
<span id="cb14-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">spatLocs_colns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span>),</span>
<span id="cb14-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extracellular_cellID =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb14-23">  </span>
<span id="cb14-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># control core number used for parallel processing</span></span>
<span id="cb14-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">percentCores =</span> percentCores, </span>
<span id="cb14-26">  </span>
<span id="cb14-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cutoff of transcript number to do spatial modeling</span></span>
<span id="cb14-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flagModel_TransNum_cutoff =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, </span>
<span id="cb14-29">  </span>
<span id="cb14-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optionally, one can set various cutoffs to NULL for automatic calculation from input data</span></span>
<span id="cb14-31">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Refer to `FastReseg::runPreprocess()` for more details</span></span>
<span id="cb14-32">  </span>
<span id="cb14-33">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># distance cutoff for neighborhood searching at molecular and cellular levels, respectively</span></span>
<span id="cb14-34">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">molecular_distance_cutoff =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.7</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2.7um is recommended for CosMx RNA dataset</span></span>
<span id="cb14-35">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cellular_distance_cutoff =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, </span>
<span id="cb14-36">  </span>
<span id="cb14-37">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cutoffs for transcript scores and number for cells under each cell type</span></span>
<span id="cb14-38">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score_baseline =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb14-39">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lowerCutoff_transNum =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb14-40">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">higherCutoff_transNum=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb14-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">imputeFlag_missingCTs =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb14-42">  </span>
<span id="cb14-43">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Settings for error detection and correction, refer to `FastReseg::runSegRefinement()` for more details</span></span>
<span id="cb14-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flagCell_lrtest_cutoff =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cutoff to flag for cells with strong spatial dependency in transcript score profiles</span></span>
<span id="cb14-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">svmClass_score_cutoff =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cutoff of transcript score to separate between high and low score classes</span></span>
<span id="cb14-46">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">groupTranscripts_method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dbscan"</span>,</span>
<span id="cb14-47">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">spatialMergeCheck_method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leidenCut"</span>, </span>
<span id="cb14-48">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cutoff_spatialMerge =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># spatial constraint cutoff for a valid merge event</span></span>
<span id="cb14-49">  </span>
<span id="cb14-50">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path_to_output =</span> outDir_full,</span>
<span id="cb14-51">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">save_intermediates =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flag to return and write intermediate results to disk</span></span>
<span id="cb14-52">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_perCellData =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flag to return per cell level outputs from updated segmentation </span></span>
<span id="cb14-53">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">combine_extra =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flag to include trimmed and extracellular transcripts in the exported `updated_transDF.csv` files </span></span>
<span id="cb14-54">)</span></code></pre></div>
</div>
<p>The re-segmentation pipeline would generate new transcript <code>data.frame</code> and cell expression matrix after the segmentation refinement. The updated results should be treated as a new data set and go through the standard single-cell analysis pipeline, including QC, normalization, and cell typing, etc. While the <code>updated_cellID</code> matches with their original source cell ID in most cases, cells involved in the evaluation of a potential merging event may have their <code>updated_cellID</code> unrelated to their original source cell ID. You can track the change of cell assignment for each transcript group via either the <code>reseg_actions</code> returned by the pipeline function or the spatial coordinates of each transcript.</p>
</section>
<section id="sec-conclusions" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Conclusions</h1>
<p>This post serves as a quick-start guide to use <a href="https://github.com/Nanostring-Biostats/FastReseg/" target="_blank">FastReseg</a> package on spatial transcriptomic data set. The package has several parameters one can adjust to tune the identification of wrongly segmented transcript groups and the rules used for cell segmentation correction. These include</p>
<ul>
<li>cutoffs for spatial model evaluation and flagging for poor-fit cells &amp; transcripts: <code>flagModel_TransNum_cutoff</code>, <code>flagCell_lrtest_cutoff</code>, <code>svmClass_score_cutoff</code>;</li>
<li>distance cutoffs used to define neighborhood: <code>molecular_distance_cutoff</code>,<code>cellular_distance_cutoff</code>;</li>
<li>method and rules used for grouping and separating poor-fit transcripts in space:<code>svm_args</code>, <code>groupTranscripts_method</code>, <code>config_spatNW_transcript</code>;</li>
<li>cutoffs and rules used for segmentation correction: <code>score_baseline</code>, <code>lowerCutoff_transNum</code>, <code>higherCutoff_transNum</code></li>
<li>additional spatial constraint on merging event during error correction: <code>spatialMergeCheck_method</code>, <code>cutoff_spatialMerge</code></li>
</ul>
<p>Many of those parameters have reasonable defaults for most spatial data sets and could be derived from your data using <code>FastReseg::runPreprocess()</code> function. For new user or new sample type, it’s recommended to process just one per-FOV transcript data using <code>FastReseg::fastReseg_perFOV_full_process()</code> functions first and check out the impact of the parameters chosen. Please refer to <a href="https://nanostring-biostats.github.io/FastReseg/articles/tutorial.html#modular-functions-for-individual-tasks" target="_blank">FastReseg tutorial</a>, <code>Modular functions for individual tasks</code> section, for more details.</p>


</section>

 ]]></description>
  <category>segmentation</category>
  <category>algorithms</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error-evaluation/</guid>
  <pubDate>Wed, 15 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error-evaluation/figures/Fig1-FastReseg-workflow.png" medium="image" type="image/png" height="72" width="144"/>
</item>
<item>
  <title>Introduction to visualizing CosMx data in Seurat</title>
  <dc:creator>Claire Williams</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>One of the most exciting aspects of CosMx™ Spatial Molecular Imager (SMI) data is the ability to directly observe gene expression in its spatial context at the single cell level. This is a great technological leap from previous single cell transcriptomics methods that lost spatial context while retrieving cells. For analysts looking to perform spatial data analysis, the <a href="https://satijalab.org/seurat/" target="_blank">Seurat R package</a> has continually added features to support CosMx data. Readers are encouraged to take a look at previous vignettes by the Seurat group (<a href="https://satijalab.org/seurat/articles/seurat5_spatial_vignette_2.html#human-lung-nanostring-cosmx-spatial-molecular-imager" target="_blank">Spatial Vignette</a> and <a href="https://satijalab.org/seurat/articles/pbmc3k_tutorial" target="_blank">Clustering Tutorial</a>) as well as blog posts we’ve provided previously (<a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">scratch space</a>). The blog post herein supplements these and provides you with some of the plotting configurations we find most helpful as you explore your CosMx data. This vignette does not cover analysis of data in Seurat but rather tries to address frequently asked questions we’ve received from customers on getting started with their data in Seurat.</p>
<p>For this vignette, we use a Seurat object made from the mouse brain public data set and assembled in the structure used by the Technology Access Program (<a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/technology-access-program/">TAP</a>); similar outputs are available from the AtoMx™ Spatial Informatics Portal (SIP). To download raw data for this dataset, go <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/cosmx-smi-mouse-brain-ffpe-dataset/" target="_blank">here</a>.</p>
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies. This post will show you how to:</p>
<ul>
<li>Section&nbsp;2 Load needed libraries and example dataset</li>
<li>Section&nbsp;3 Find important data in Seurat object</li>
<li>Section&nbsp;4 Plot CosMx data in space</li>
<li>Section&nbsp;5 Visualize dimension reduction data</li>
<li>Section&nbsp;6 Concluding thoughts</li>
</ul>
</section>
<section id="sec-loading" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Data Loading</h1>
<p>Here we start from a Seurat object containing CosMx data and analysis stored in an rds file. To start from raw data instead, see the Seurat Spatial Vignette above.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Many of the below functions require that you are working with <a href="https://satijalab.org/seurat/" target="_blank">Seurat v5</a> and may not work in earlier versions. Additionally, if you are exporting a Seurat object from AtoMx (v1.3+), be sure to export the Seurat object with polygon coordinates and transcripts included to access all of the functionality below.</p>
</div>
</div>
<p>First, load needed libraries:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(Seurat)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span></code></pre></div>
</div>
<p>Adjust globals option to avoid an error exceeding max allowed size. We’ve found this is necessary even with relatively small CosMx datasets (30 - 40 FOVs).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">future.globals.maxSize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
<p>Load in the Seurat object, available on Box.com <a href="https://nanostring.box.com/s/y7ielc54qw1g1f5x98hxczdo8tezobbg" target="_blank">here</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">seu.obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_object.Rds"</span>)</span></code></pre></div>
</div>
</section>
<section id="sec-data-structure" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Data Structure</h1>
<p>Here we’ll show where various key data are stored in the Seurat object.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cell metadata</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>                       orig.ident nCount_Nanostring nFeature_Nanostring cell_ID
Run1000.S1.Half_1_1 SeuratProject               216                  95 c_2_1_1
Run1000.S1.Half_2_1 SeuratProject               325                 118 c_2_1_2
Run1000.S1.Half_3_1 SeuratProject               503                 284 c_2_1_3
Run1000.S1.Half_4_1 SeuratProject              1085                 329 c_2_1_4
Run1000.S1.Half_5_1 SeuratProject               935                 349 c_2_1_5
Run1000.S1.Half_6_1 SeuratProject              1705                 487 c_2_1_6
                    fov  Area AspectRatio Width Height Mean.Histone Max.Histone
Run1000.S1.Half_1_1   1  6073        0.47    66    141         7095       42463
Run1000.S1.Half_2_1   1  5675        0.72   101    140         9220       39045
Run1000.S1.Half_3_1   1 12896        1.26   153    121        16993       45967
Run1000.S1.Half_4_1   1  8234        0.51    81    160        12720       31967
Run1000.S1.Half_5_1   1  9852        0.88   117    133        11177       38479
Run1000.S1.Half_6_1   1 13372        0.90   171    191         6009       17648
                    Mean.Blank Max.Blank Mean.rRNA Max.rRNA Mean.GFAP Max.GFAP
Run1000.S1.Half_1_1         70      4044       376     2871        42     3313
Run1000.S1.Half_2_1         82       296       642     1486        36      527
Run1000.S1.Half_3_1         78      1652       109     1538        37     1797
Run1000.S1.Half_4_1        121      3074       664     3284        71     3625
Run1000.S1.Half_5_1         99      3173       444     2946        82     2957
Run1000.S1.Half_6_1        215      2482       687     2429      2775    35102
                    Mean.DAPI Max.DAPI Run_name Slide_name ISH.concentration
Run1000.S1.Half_1_1        65      233  Run1000 Run1000_S1               1nM
Run1000.S1.Half_2_1        88      287  Run1000 Run1000_S1               1nM
Run1000.S1.Half_3_1        35      249  Run1000 Run1000_S1               1nM
Run1000.S1.Half_4_1       219      540  Run1000 Run1000_S1               1nM
Run1000.S1.Half_5_1       251      628  Run1000 Run1000_S1               1nM
Run1000.S1.Half_6_1       255      702  Run1000 Run1000_S1               1nM
                    Beta tissue slide_ID_numeric Run_Tissue_name
Run1000.S1.Half_1_1   12   Half                2 Run1000_S1_Half
Run1000.S1.Half_2_1   12   Half                2 Run1000_S1_Half
Run1000.S1.Half_3_1   12   Half                2 Run1000_S1_Half
Run1000.S1.Half_4_1   12   Half                2 Run1000_S1_Half
Run1000.S1.Half_5_1   12   Half                2 Run1000_S1_Half
Run1000.S1.Half_6_1   12   Half                2 Run1000_S1_Half
                    log10totalcounts   IFcolor nb_clus leiden_clus
Run1000.S1.Half_1_1         2.334454 #BC077CFF     PVM           2
Run1000.S1.Half_2_1         2.511883 #FF06A1FF    VLMC           2
Run1000.S1.Half_3_1         2.705008 #3706FFFF    OLPC          19
Run1000.S1.Half_4_1         3.035430 #FF0CDEFF    VLMC           2
Run1000.S1.Half_5_1         2.970347 #DE0DC3FF    VSMC           2
Run1000.S1.Half_6_1         3.231470 #FFFF69FF     NGF           8
                    nb_clus_final                  id
Run1000.S1.Half_1_1          VLMC Run1000.S1.Half_1_1
Run1000.S1.Half_2_1          VLMC Run1000.S1.Half_2_1
Run1000.S1.Half_3_1          OLPC Run1000.S1.Half_3_1
Run1000.S1.Half_4_1          VLMC Run1000.S1.Half_4_1
Run1000.S1.Half_5_1          VSMC Run1000.S1.Half_5_1
Run1000.S1.Half_6_1           NGF Run1000.S1.Half_6_1</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transcript counts. Here, transcript counts are in the 'Nanostring' assay but in other objects they may be stored in an 'RNA' assay.</span></span>
<span id="cb6-2">seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>assays<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Nanostring<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stderr">
<pre><code>Loading required package: Matrix</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>5 x 5 sparse Matrix of class "dgCMatrix"
       Run1000.S1.Half_1_1 Run1000.S1.Half_2_1 Run1000.S1.Half_3_1
Slc6a1                   .                   .                   1
Cd109                    .                   .                   .
Ldha                     .                   .                   1
Aldoc                    .                   .                   2
Drd1                     .                   .                   .
       Run1000.S1.Half_4_1 Run1000.S1.Half_5_1
Slc6a1                   1                   .
Cd109                    .                   .
Ldha                     1                   2
Aldoc                    .                   2
Drd1                     .                   .</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># UMAP positions</span></span>
<span id="cb9-2">seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,]</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>                        umap_1     umap_2
Run1000.S1.Half_1_1  -6.179202 -22.688357
Run1000.S1.Half_2_1  -6.470077 -23.498900
Run1000.S1.Half_3_1  -7.297677   4.227824
Run1000.S1.Half_4_1  -6.037831 -23.252535
Run1000.S1.Half_5_1  -2.250786 -21.083180
Run1000.S1.Half_6_1  14.308562  27.765420
Run1000.S1.Half_7_1  -6.235466 -22.308980
Run1000.S1.Half_8_1  -6.485635 -22.782622
Run1000.S1.Half_9_1  -7.263406 -21.322018
Run1000.S1.Half_10_1 -7.601895   4.258457</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Image names. Each slide is stored as a separate image within the object.</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Run1000.S1.Half"    "Run5642.S3.Quarter"</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Positions in space, here shown for one image / slide</span></span>
<span id="cb13-2">seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>images[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>centroids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>coords[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In this object, this is equivalent to: seu.obj@images$Run1000.S1.Half$centroids@coords[1:10,]</span></span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>              x     y
 [1,] -494161.3 10541
 [2,] -494201.3 10413
 [3,] -496227.3 10339
 [4,] -494275.3 10083
 [5,] -494221.3  9981
 [6,] -494216.3  9776
 [7,] -494375.3  9591
 [8,] -494697.3  9149
 [9,] -494748.3  8939
[10,] -494669.3  8799</code></pre>
</div>
</div>
</section>
<section id="sec-spatial-plotting" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Plot data in space</h1>
<p>Within the Seurat object, each slide is stored as a separate ‘image’ or ‘fov’. This is an unfortunate naming convention difference between CosMx nomenclature and the Seurat package. What Seurat refers to as an ‘fov’ is what NanoString refers to as a slide. When plotting cells in space, you need to specify the Seurat ‘fov’ to plot, and this is equivalent to choosing which CosMx slide to plot.</p>
<p>Plot all cells on one slide in space, coloring by cell type.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get name of the first image</span></span>
<span id="cb15-2">image1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot all cells.</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We recommend setting the border color to 'NA' as the default 'white' often masks all cells when zoomed out, leading to a fully white plot.</span></span>
<span id="cb15-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ImageDimPlot</span>(seu.obj, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> image1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border.color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_allCellsInSpace-1.png" class="img-fluid figure-img" width="1152"></p>
</figure>
</div>
</div>
</div>
<p>Plot the location of individual transcripts with the ‘molecules’ option.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ImageDimPlot</span>(seu.obj,</span>
<span id="cb16-2">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb16-3">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border.color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb16-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reduce alpha of cell fills to better visualize the overlaying molcules</span></span>
<span id="cb16-5">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">molecules =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Slc17a7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gad1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Plp1"</span>),</span>
<span id="cb16-6">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mols.size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb16-7">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nmols =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the total number of molecules to visualize</span></span>
<span id="cb16-8">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_genesOnImage-1.png" class="img-fluid figure-img" width="1152"></p>
</figure>
</div>
</div>
</div>
<p>Plot one CosMx FOV. To do this, we set the cells we’d like to plot to be all those in our target FOV. A similar strategy could be used to plot a subset of FOVs or a subset of cells of interest.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ImageDimPlot</span>(seu.obj,</span>
<span id="cb17-2">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb17-3">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border.color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb17-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cells =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>)])</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_oneCosMxFOV-1.png" class="img-fluid figure-img" width="1152"></p>
</figure>
</div>
</div>
</div>
<p>By default, cells are colored by the ‘Identity’ set in the Seurat object. We can change this by selecting another column to color by. Here we show coloring by leiden cluster, which we treat as a factor rather than an integer.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check the default identities</span></span>
<span id="cb18-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Idents</span>(seu.obj))</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot by leiden cluster using the 'group.by' option</span></span>
<span id="cb18-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ImageDimPlot</span>(seu.obj,</span>
<span id="cb18-6">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb18-7">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border.color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb18-8">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_clus"</span>,</span>
<span id="cb18-9">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glasbey"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Option to use a different palette for cell colors</span></span>
<span id="cb18-10">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cells =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>)])</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_FOVleiden-1.png" class="img-fluid figure-img" width="1152"></p>
</figure>
</div>
</div>
</div>
<p>To color cells by a continuous value, such as the log10totalcounts, or by the expression of a transcript of interest, such as <em>Slc17a7</em>, we use the function ‘ImageFeaturePlot’.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color cells by log10totalcounts</span></span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ImageFeaturePlot</span>(seu.obj,</span>
<span id="cb19-3">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb19-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border.color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb19-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log10totalcounts"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_imageContinuousVariable-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color cells by the expression of a gene of interest, Slc17a7</span></span>
<span id="cb20-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ImageFeaturePlot</span>(seu.obj,</span>
<span id="cb20-3">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb20-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border.color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb20-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Slc17a7"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_imageContinuousVariable_gene-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Seurat can plot cells with either cell shapes shown (‘segmentation’) or with a single point at the center of where they’re located (‘centroids’). Here we show the switch to plotting centroids for one FOV.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check what the current default boundary is</span></span>
<span id="cb21-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DefaultBoundary</span>(seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>images[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]])</span>
<span id="cb21-3"></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the default boundaries for the first slide</span></span>
<span id="cb21-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DefaultBoundary</span>(seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>images[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]]) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"centroids"</span></span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot one FOV from this slide. Note that cell shapes are no longer shown</span></span>
<span id="cb21-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ImageDimPlot</span>(seu.obj,</span>
<span id="cb21-9">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Images</span>(seu.obj)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb21-10">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb21-11">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shuffle.cols =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Option to randomly shuffle colors within the palette</span></span>
<span id="cb21-12">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cells =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(seu.obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>)])</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_centroids-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="sec-dim-reduction-plots" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Dimension reduction plots</h1>
<p>The CosMx Seurat object contains coordinates for each cell for UMAP dimensional reduction.</p>
<p>Here, we color cells by cell type and overlay cell type labels.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DimPlot</span>(seu.obj, </span>
<span id="cb22-2">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nb_clus"</span>,</span>
<span id="cb22-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress the legend since labels are plotted on top of UMAP</span></span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_umapCellTypes-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Here, we color cells by a continuous value, using transcript expression for a transcript of interest.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FeaturePlot</span>(seu.obj, </span>
<span id="cb23-2">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Slc17a7"</span>,</span>
<span id="cb23-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plots cells in order of expression</span></span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_umapTranscriptExpression-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="sec-conclusions" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Conclusions</h1>
<p>This vignette serves as an introduction to exploring CosMx data in Seurat, with a primary focus on visualization. Mix and match the functions and options from above to generate new customized visualizations with your data. Once you’re comfortable visualizing your spatial data, you may want to proceed to <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-basics/index.html" target="_blank">refining your cell typing</a>, <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error/index.html" target="_blank">performing differential expression</a>, <a href="https://github.com/Nanostring-Biostats/InSituCor" target="_blank">finding spatially correlated genes</a>, or countless other analysis paths.</p>


</section>

 ]]></description>
  <category>visualization</category>
  <category>Seurat</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/</guid>
  <pubDate>Fri, 10 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/seurat-cosmx-basics/figures/plot_oneCosMxFOV-1.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Getting Started with the napari-cosmx plugin</title>
  <dc:creator>Evelyn Metzger</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/</link>
  <description><![CDATA[ 





<div class="cell">
<div class="cell-output-display">
<div id="fig-pancreas" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-pancreas-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/pancreas.png" class="img-fluid figure-img" width="632">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-pancreas-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Nine Fields of View (FOVs) of a whole-transcriptome Pancreas dataset visualized with the <code>napari-cosmx</code> plugin. DAPI and PanCK are shown in blue and green, respectively. Endocrine cells in the Islets of Langerhans can be identified by their transcript abundance of marker genes (points). Red = <em>GCG</em> (alpha cells), orange = <em>INS</em> (beta cells), cyan = <em>SST</em> (delta cells).
</figcaption>
</figure>
</div>
</div>
</div>
<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>The AtoMx™ Spatial Informatics Portal (SIP) is an excellent solution for analyzing multi-omics spatial data generated on the CosMx™ Spatial Molecular Imager (SMI). It offers seamless integration of data analysis with a data viewer in an intuitive web-based interface.</p>
<p>For bespoke analyses, however, it can be useful to extract SMI image and transcript or protein data from the SIP. Version 1.3 of the SIP introduced new exporting abilities that allow raw data and processed data in a variety of formats (<em>e.g.</em>, Seurat, tiledb, “flat files”) to be downloaded. Still, how do we actually <em>view</em> and interact with the images from these downloads?</p>
<p>This blog post is the first in our series on using our <code>napari-cosmx</code> plugin. Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the <code>napari-cosmx</code> plugin is experimental so the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies. Future posts will do deep-dives into <em>using</em> the <code>napari-cosmx</code> plugin. This post will show you how to:</p>
<ul>
<li>Section&nbsp;2.1 Install Napari and the <code>napari-cosmx</code> plugin</li>
<li>Section&nbsp;2.2 Describe what our “napari-ready” data format is</li>
<li>Section&nbsp;2.3 How to load a napari-ready slide</li>
<li>Section&nbsp;2.4 How to create a napari-ready slide from AtoMx raw data export</li>
<li>Section&nbsp;2.5 Minimum example of how to view cell-level metadata</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><code>napari-cosmx</code> is actively and continuously under development in the RnD groups at NanoString. We do not (yet) have the source code for <code>napari-cosmx</code> opened-sourced. Please be aware that there may be bugs and that it has not gone through the regular level of quality and testing. Our goal here is to bring the capabilities of napari to CosMx users as fast as possible.</p>
</div>
</div>
<section id="what-is-napari" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="what-is-napari"><span class="header-section-number">1.1</span> What is Napari?</h2>
<p>Stepping back for a second. What exacty <em>is</em> Napari? <a href="https://napari.org/" target="_blank">Napari</a> is an <a href="https://github.com/napari/napari" target="_blank">open-source</a> Python project that runs a Qt-based desktop GUI for interactive visualization of scientific images. The application has layers of different types, similar to what you might find in application like Photoshop or Procreate.</p>
</section>
<section id="what-is-the-napari-cosmx-plugin" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="what-is-the-napari-cosmx-plugin"><span class="header-section-number">1.2</span> What is the <code>napari-cosmx</code> plugin?</h2>
<p>The napari-cosmx plugin enables viewing of data generated by the CosMx SMI platform in Napari. Tissue morphology layers generated by CosMx SMI are stored as <a href="https://zarr.readthedocs.io/en/stable/" target="_blank">zarr files</a> and displayed as image layers and standard controls such as opacity, gamma, and contrast limits can be use to interact with the tissue. Protein results are also viewed as an image layer in Napari. For CosMx RNA experiments, the detected transcripts are viewed as a points layer in Napari. Cell segmentation results are displayed as an image layer of the cell boundaries. The cell shapes can also be colored by metadata such as cell type. Figure&nbsp;2 shows some examples of these in an animated format.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-example-gif" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-example-gif-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/prostate.gif" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-example-gif-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Example animation made with <code>napari-cosmx</code> showing ligand-receptor interactions in a healthy prostate sample. Cell types fill in the cell boundaries. When cells are transparent, one can see more easily see the spatial location of <em>S100A8</em> and <em>S100A9</em> ligand RNA transcripts with the <em>TLR4</em> receptor transcript. While animations are certainly not needed for all purposes, this one highlights that the plugin can color RNA transcripts (points layer), cell-level metadata like cell types (labels layer), and cell boundaries (image layer). It can also visualize IF image layers (not shown here; see Figure&nbsp;1 for example of IF staining).
</figcaption>
</figure>
</div>
</div>
</div>
<p>Beyond the basic interactivity and viewing of napari, other posts in this series will provide examples of tips and tricks as well as more advanced analysis. See the <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html">series topics</a> for what’s coming ahead!</p>
</section>
</section>
<section id="using-the-napari-cosmx-plugin" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Using the <code>napari-cosmx</code> plugin</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>While Napari and the <code>napari-cosmx</code> can be installed on many systems, CosMx data can be quite large. A slide with a large number of FOVs may very well exceed the capabilities of a standard laptop.</p>
</div>
</div>
<section id="sec-installing" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="sec-installing"><span class="header-section-number">2.1</span> Installing <code>napari-cosmx</code></h2>
<p>The specific download instructions depend on your operating system (see tabs below) but the general procedure is the same: 1) installing Napari 0.4.17 and 2) installing the <code>napari-cosmx</code> plugin.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The <code>napari-cosmx</code> plugin was developed with Napari 0.4.17. There are some breaking changes that we have noticed if using the plugin with newer version of Napari (<em>e.g.</em>, 0.4.18). At the time of writing this post, please make sure to install version 0.4.17.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Windows Install</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">MacOS/Unix Install</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Depending on your browser and security settings you may get warnings when downloading or running some of the links below.</p>
</div>
</div>
<section id="part-1-installing-napari" class="level4" data-number="2.1.0.1">
<h4 data-number="2.1.0.1" class="anchored" data-anchor-id="part-1-installing-napari"><span class="header-section-number">2.1.0.1</span> Part 1: Installing Napari</h4>
<div class="columns">
<div class="column" style="width:45%;">
<p>The Napari project contains platform-specific bundled apps for each release that don’t require you to first install a Python environment. You simply run the installer and a link will be added to your Start Menu as with a typical app installation. The napari-CosMx plugin currently expects Napari 0.4.17.</p>
<p><a href="https://github.com/napari/napari/releases/download/v0.4.17/napari-0.4.17-Windows-x86_64.exe">Click to download the Windows Installer</a></p>
</div><div class="column" style="width:5%;">
<!-- empty column to create gap -->
</div><div class="column" style="width:40%;">
<div class="cell">
<div class="cell-output-display">
<div id="fig-windows-installer" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-windows-installer-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/windows_installer.png" class="img-fluid figure-img" width="240">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-windows-installer-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: The Windows Installer.
</figcaption>
</figure>
</div>
</div>
</div>
</div><section id="part-2-installing-napari-cosmx" class="level4" data-number="2.1.0.2">
<h4 data-number="2.1.0.2" class="anchored" data-anchor-id="part-2-installing-napari-cosmx"><span class="header-section-number">2.1.0.2</span> Part 2: Installing <code>napari-cosmx</code></h4>
<ol type="1">
<li>Download the <code>whl</code> file and license in <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/assets/napari-cosmx%20releases" target="_blank">asests/napari-cosmx releases</a>.</li>
<li>Go to the folder where the <code>whl</code> file is in your File Explorer and choose <code>Copy as Path</code>.</li>
<li>Now launch Napari from the Start menu in Windows.</li>
</ol>
<blockquote class="blockquote">
<p>Pro tip: If launching for the first time, the application may take a moment to appear. Avoid launching multiple instances.</p>
</blockquote>
<ol start="3" type="1">
<li>In napari, open up the <code>&gt;_</code> button that is located on the bottom left (see Figure&nbsp;4 for example).</li>
<li>Type <code>pip install</code> into the console (<em>i.e.</em>, with a single space after the word ‘install’).</li>
<li>Paste the location of the <code>whl</code> file</li>
<li>Press enter to execute</li>
<li>You should receive a message in the console that several packages were successfully installed including the <code>napari-cosmx</code> package.</li>
<li><strong>Close and re-start napari</strong></li>
</ol>
<div class="cell">
<div class="cell-output-display">
<div id="fig-windows-plugin-command" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-windows-plugin-command-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/windows_plugin_command.png" class="img-fluid figure-img" width="841">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-windows-plugin-command-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Example showing how to install the <code>napari-cosmx</code> file. Your file name and path will look different. Yellow circle shows the location of the &gt;_ ipython prompt.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</div>
</section>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Depending on your browser and security settings you may get warnings when downloading or running some of the links below.</p>
</div>
</div>
<section id="part-1-installing-napari-1" class="level4" data-number="2.1.0.3">
<h4 data-number="2.1.0.3" class="anchored" data-anchor-id="part-1-installing-napari-1"><span class="header-section-number">2.1.0.3</span> Part 1: Installing Napari</h4>
<p>Visit the Napari <a href="https://github.com/napari/napari/releases/tag/v0.4.17" target="_blank">0.4.17 release page</a>. Scroll all the way to the bottom and expand the section that says “Assets” (Figure&nbsp;5). Download the <code>pkg</code> file that is appropriate for your operating system (<em>i.e.</em>, <code>napari-0.4.17-macOS-x86_64.pkg</code> for Mac). Open the downloaded file and install via the instructions on screen (you can accept the defaults). When finished, launch Napari via the Applications folder.</p>
<blockquote class="blockquote">
<p>Pro tip: If launching for the first time, the application may take a moment to appear. Avoid launching multiple instances.</p>
</blockquote>
<div class="cell">
<div class="cell-output-display">
<div id="fig-mac-pkg-download" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-mac-pkg-download-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/mac_install_pkg.png" class="img-fluid figure-img" width="699">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-mac-pkg-download-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Screenshot of Napari packages. Blue highlighted package is appropriate for Mac. Other operating systems’ packages are also available but untested.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="part-2-installing-napari-cosmx-1" class="level4" data-number="2.1.0.4">
<h4 data-number="2.1.0.4" class="anchored" data-anchor-id="part-2-installing-napari-cosmx-1"><span class="header-section-number">2.1.0.4</span> Part 2: Installing <code>napari-cosmx</code></h4>
<ol type="1">
<li>Download the <code>whl</code> file and license in <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/assets/napari-cosmx%20releases" target="_blank">asests/napari-cosmx releases</a>.</li>
<li>In Napari, open up the <code>&gt;_</code> button that is located on the bottom left (see Figure&nbsp;6 for example).</li>
<li>Type <code>pip install</code> into the console (<em>i.e.</em>, with a single space after the word ‘install’).</li>
<li>Paste the location of the <code>whl</code> file</li>
<li>Press enter to execute</li>
<li>You should receive a message in the console that several packages were successfully installed including the <code>napari-cosmx</code> package.</li>
<li><strong>Close and re-start napari</strong></li>
</ol>
<div class="cell">
<div class="cell-output-display">
<div id="fig-mac-plugin-command" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-mac-plugin-command-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/mac_plugin_command.png" class="img-fluid figure-img" width="1044">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-mac-plugin-command-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: Example showing how to install the <code>napari-cosmx</code> file. Your file name and path will look different. Yellow circle shows the location of the &gt;_ ipython prompt.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</div>
</div>
</div>
</section>
<section id="sec-napari-ready-files" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="sec-napari-ready-files"><span class="header-section-number">2.2</span> Napari-ready slide folder</h2>
<p>The <code>napari-cosmx</code> plugin expects a slide that has been prepared using the <code>stitching</code> (Section&nbsp;2.4) method within the plugin itself. If you do not already have a napari-ready slide, you can download a simple, single-FOV example that we have created <a href="https://nanostring.box.com/s/vewpiiic0e3xk88kamxi358butsw9isc" target="_blank">here)</a>. This single-FOV dataset was derived from the mouse brain public dataset. The full data download is not needed for our current purposes but those interested in exploring the full data can download it <a href="https://nanostring.com/resources/coronal-hippocampus-and-cortex-raw-data-export/" target="_blank">here</a>.</p>
<p>At the very minimum, the napari-ready slide folder contains two top-level elements:</p>
<ol type="1">
<li><code>images</code> folder. Within the <code>images</code> folder, there are subfolders for each immunofluorescence channel and one folder for the cell boundaries (<code>labels</code>).</li>
<li><code>targets.hdf5</code> file that contains the RNA (or protein) targets.</li>
</ol>
<p>An example can be see below (Figure&nbsp;7).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-napari-ready-folder" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-napari-ready-folder-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/napari-ready-format.png" class="img-fluid figure-img" width="1109">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-napari-ready-folder-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;7: Example layout of a napari-ready folder. In this example, the ‘parent folder’ (<em>i.e.</em>, the folder you would drag and drop into Napari) is named <code>single_fov_napari_example</code> and contains the <code>images</code> folder with subfolders containing various zarr files within and the <code>targets.hdf5</code> file.
</figcaption>
</figure>
</div>
</div>
</div>
<p>If you would like to see the details of the zarr file structure for the <code>images</code> folder in our single-FOV example, expand the code chunk blow.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> tree <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span></span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> ./images</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> ├── ./images/DNA</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; ├── ./images/DNA/0</span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; └── ./images/DNA/0/0</span>
<span id="cb1-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp;     └── ./images/DNA/0/0/0</span>
<span id="cb1-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; ├── ./images/DNA/1</span>
<span id="cb1-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; └── ./images/DNA/1/0</span>
<span id="cb1-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp;     └── ./images/DNA/1/0/0</span>
<span id="cb1-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; ├── ./images/DNA/2</span>
<span id="cb1-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; └── ./images/DNA/2/0</span>
<span id="cb1-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp;     └── ./images/DNA/2/0/0</span>
<span id="cb1-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; └── ./images/DNA/3</span>
<span id="cb1-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp;     └── ./images/DNA/3/0</span>
<span id="cb1-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp;         └── ./images/DNA/3/0/0</span>
<span id="cb1-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> └── ./images/labels</span>
<span id="cb1-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     ├── ./images/labels/0</span>
<span id="cb1-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     │&nbsp;&nbsp; └── ./images/labels/0/0</span>
<span id="cb1-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     │&nbsp;&nbsp;     └── ./images/labels/0/0/0</span>
<span id="cb1-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     ├── ./images/labels/1</span>
<span id="cb1-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     │&nbsp;&nbsp; └── ./images/labels/1/0</span>
<span id="cb1-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     │&nbsp;&nbsp;     └── ./images/labels/1/0/0</span>
<span id="cb1-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     ├── ./images/labels/2</span>
<span id="cb1-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     │&nbsp;&nbsp; └── ./images/labels/2/0</span>
<span id="cb1-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     │&nbsp;&nbsp;     └── ./images/labels/2/0/0</span>
<span id="cb1-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>     └── ./images/labels/3</span>
<span id="cb1-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>         └── ./images/labels/3/0</span>
<span id="cb1-29"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span>             └── ./images/labels/3/0/0</span>
<span id="cb1-30"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> ./targets.hdf5</span></code></pre></div>
</details>
</div>
<p>We can also create a file named <code>_metadata.csv</code> that can be used for cell-level labeling. For more information on that, please see Section&nbsp;2.5.</p>
</section>
<section id="sec-loading-slides" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="sec-loading-slides"><span class="header-section-number">2.3</span> Loading a slide into <code>napari-cosmx</code></h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>You may have noticed that I put this section <em>before</em> the section on how to create (or ‘stitch’) napari-ready files. This is due to the current implementation of the <code>napari-cosmx</code> code base. Specifically, this is because the widget used for stitching is available once we launch the plugin. So in order to be able to stitch, we need to have <em>some</em> pre-existing slide to load into the plugin. There are advanced ways that we could get around this limitation but that’s an advanced topic for another day.</p>
</div>
</div>
<p>To launch and view CosMx data with the <code>napari-cosmx</code> plugin:</p>
<ol type="1">
<li>Navigate to a napari-ready slide folder. If you need a minimum example, see Section&nbsp;2.2 above.</li>
<li>Open Napari from the Start Menu (Windows) or the Application folder (Mac).</li>
<li>Drag the parent folder of the slide into the the Napari application. If you are using the single-FOV example above, this would be the folder named <code>single_fov_napari_example</code>. Otherwise, the napari-ready folder is whichever folder contains <code>images</code> and <code>targets.hdf5</code> (see Section&nbsp;2.2).</li>
<li>Napari will ask if you would like to open via the <code>napari-cosmx</code> plugin or another method. Select the <code>napari-cosmx</code> plugin and press okay.</li>
</ol>
</section>
<section id="sec-stitching" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="sec-stitching"><span class="header-section-number">2.4</span> How to create slides from Raw data</h2>
<p>At the time of writing, the process to <em>create</em> Napari ready files follows this framework:</p>
<ol type="1">
<li>Export Raw data from AtoMx SIP (v1.3+) (Section&nbsp;2.4.1)</li>
<li>Launch <code>napari-cosmx</code> within Napari (Section&nbsp;2.4.2)</li>
<li>Use the stitch widget to create napari-ready slide from raw data (Section&nbsp;2.4.3)</li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>One of the main advantages of AtoMx SIP is that the data are stored for you. However, <code>napari-cosmx</code> currently requires the raw data downloaded and stored <strong>locally</strong>. Raw data can be quite large (100s of GBs per slide). It is possible to store the data on a networked drive but we have noticed that stitching performance is slower, depending on your network speed. Storing the data on a high-capacity and fast I/O external hard drive may also be an option.</p>
</div>
</div>
<section id="sec-export-raw-data" class="level3" data-number="2.4.1">
<h3 data-number="2.4.1" class="anchored" data-anchor-id="sec-export-raw-data"><span class="header-section-number">2.4.1</span> 1. Export Raw Data</h3>
<p>In AtoMx SIP, in the <code>Study details</code> panel on the upper left, click <code>Export</code> (Figure&nbsp;8).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-atomx-export1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-atomx-export1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/export-fig1.png" class="img-fluid figure-img" width="1430">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-atomx-export1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;8: Click <code>Export</code> (available in AtoMx SIP version 1.3+).
</figcaption>
</figure>
</div>
</div>
</div>
<p>Configure your export with the options indicated in Figure&nbsp;9 and click <code>EXPORT</code>. If you would like to view metadata (optional). You can go ahead and download the Seurat data now or as a separate step (<em>i.e.</em>, Seurat data is not needed for stitching napari files).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-atomx-export2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-atomx-export2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/export-fig2.png" class="img-fluid figure-img" width="918">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-atomx-export2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;9: Example configuration for exporting. For more information on extracting cell-level metadata, see Section&nbsp;2.5.
</figcaption>
</figure>
</div>
</div>
</div>
<p>When the export is ready, download the data. You can do this over the sftp protocol in a variety of application. Here, I’m using <a href="https://cyberduck.io/" target="_blank">Cyberduck</a> but you can use other programs.</p>
<p>In Cyberduck, click <code>Open Connection</code>. In the dropdown menu, select <code>SFTP</code> and enter the URL, username, and your (AtoMx) password. Then click <code>Connect</code>. Example: Figure&nbsp;10.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-atomx-export3" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-atomx-export3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/export-fig3.png" class="img-fluid figure-img" width="1028">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-atomx-export3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;10: Example configuration for Cyberduck SFTP.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Once connected, find the relevant folder, right click, and select <code>Download As...</code> (Figure&nbsp;11). Choose the location on your computer to store the data. You may be able to store it on a networked drive but this is currently untested.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-atomx-export4" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-atomx-export4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/export-fig4.png" class="img-fluid figure-img" width="562">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-atomx-export4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;11: Download raw data somewhere on your desktop.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="sec-launch-napari-cosmx" class="level3" data-number="2.4.2">
<h3 data-number="2.4.2" class="anchored" data-anchor-id="sec-launch-napari-cosmx"><span class="header-section-number">2.4.2</span> 2. Launch <code>napari-cosmx</code></h3>
<p>In order to use the stitching widget in the plugin, we must first launch the plugin. Currently, the only way to do that is to load an existing napari-ready folder. This can be any Napari slide (<em>e.g.</em>, a previous study or the single-FOV example described in Section&nbsp;2.2).</p>
</section>
<section id="sec-stitch-images" class="level3" data-number="2.4.3">
<h3 data-number="2.4.3" class="anchored" data-anchor-id="sec-stitch-images"><span class="header-section-number">2.4.3</span> 3. Stitching images</h3>
<p>Once <code>napari-cosmx</code> is launched, the stitching widget is located on the right-hand panel (Figure&nbsp;12).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-stitch-widget1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-stitch-widget1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/stitch-widget1.png" class="img-fluid figure-img" width="1184">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-stitch-widget1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;12: Example showing a launched <code>napari-cosmx</code> plugin with a possibly-unrelated slide. To stitch, a new slide, Click <code>Browse...</code> in the <code>Stitch Images</code> widget located on the right-hand side of Napari.
</figcaption>
</figure>
</div>
</div>
</div>
<p>We need to tell <code>napari-cosmx</code> where the raw data that we exported are located locally. In the right-hand panel there is a <code>Stitch Images</code> widget. Click <code>Browse...</code> and navigate to the parent folder containing the slide’s raw data.</p>
<p>Your downloaded raw data folder name will be unique to your slide and you can rename it to whatever makes sense for your workflow. For this example, I renamed it <code>raw_data</code> (Figure&nbsp;13). Click on the raw data folder and select <code>Open</code>. In the <code>Stitch Images</code> widget, you should see the path of the raw data folder printed. If an unexpected format was detected, there will be an error message (<em>e.g.</em>, Figure&nbsp;14).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-stitch-widget2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-stitch-widget2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/stitch-widget2.png" class="img-fluid figure-img" width="805">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-stitch-widget2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;13: Browsing to the location of the raw data that you want to stitched. For more information on the structure of the raw data, see <a href="../../posts/napari-cosmx-basics/using-napari-cosmx.html#sec-expected-raw-format" target="_blank">the next post in the series</a>.
</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-stitch-widget3" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-stitch-widget3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/stitch-widget3.png" class="img-fluid figure-img" width="682">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-stitch-widget3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;14: Stitching widget prints the path to the correctly formatted raw data (left) or provides an error message if not formatted correctly (right). Note that only the correctly formatted location can proceed to the next step (choosing otuput folder).
</figcaption>
</figure>
</div>
</div>
</div>
<p>Next, select the location where you want the plugin to return the napari-ready files. It is recommended not to store it in the same location as the raw data. Here, I’m pointing it to a location adjacent to the raw data that I named <code>stitched_example</code> (Figure&nbsp;15).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-stitch-widget4" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-stitch-widget4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/stitch-widget4.png" class="img-fluid figure-img" width="1020">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-stitch-widget4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;15: Select output folder.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Finally, click <code>Stitch</code>. Note: currently there is no refreshing or printing of messages. Please do not click <code>Stitch</code> more than once. You may see Napari become unresponsive, see the “spinning beach ball” (Mac), <em>etc.</em> Depending on the number of FOVs, computer configuration, and analyte type, this can take several minutes. Once complete, you should see messages that resemble that of Figure&nbsp;16. If you see the last line <code>See output folder for results</code>, you successfully converted the raw data into napari-ready files!</p>
<p>To view the results, simply close napari, reopen it, and drag your newly created results into the application.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-stitch-widget5" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-stitch-widget5-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/stitch-widget5.png" class="img-fluid figure-img" width="659">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-stitch-widget5-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;16: Messages from a successfully completed stitching run.
</figcaption>
</figure>
</div>
</div>
</div>
<p>That’s it! To view the newly stitched slide, close Napari, re-open it, and drag the folder into Napari.</p>
</section>
</section>
<section id="sec-adding-metadata" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="sec-adding-metadata"><span class="header-section-number">2.5</span> Adding and viewing metadata</h2>
<p>While there will be dedicated posts that discuss tips and tricks for using the <code>napari-cosmx</code> plugin, here I’ll discuss one of the most powerful uses: viewing cell types.</p>
<p>While not needed for the basic stitching, the Seurat file that is downloaded from AtoMx SIP can contain important cell-level information. For example, if cell typing was performed in AtoMx, each cell will have a label with its cell type.</p>
<p>In this section, I’ll show you the basic principle for converting the meta data within the Seurat object into a csv file that can be understood by the <code>napari-cosmx</code> plugin. Users should have a basic understanding of R in order to use this feature. I’ll also need to switch our example dataset since the minimal single-FOV example dataset was from raw data and not analyzed in AtoMx so we don’t have any cell-level cell type information. Here, the specific column of interest will have the prefix <code>RNA_nbclust</code> and suffix <code>clusters</code>. In the code below, we’ll change that name to simply <code>cell_types</code>. We’ll also need a column named <code>cell_ID</code> in the metadata. We need to write the metadata columns to a file specifically named <code>_metadata.csv</code> and have that file located in the napari-ready folder.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is R code</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(Seurat)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plyr)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sem_path will be wherever you downloaded your Seurat object</span></span>
<span id="cb2-6">sem_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/your/seuratObject.RDS"</span></span>
<span id="cb2-7">sem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(sem_path)</span>
<span id="cb2-8">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data</span>
<span id="cb2-9">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA_nbclust"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ends_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clusters"</span>))</span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(meta)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_types'</span></span>
<span id="cb2-11">meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_ID <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(meta) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># adds cell_ID column</span></span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(meta) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb2-13">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relocate</span>(cell_ID) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># moves cell_ID to first column position</span></span>
<span id="cb2-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.table</span>(meta, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/inside/napari-ready-folder/_metadata.csv"</span>, </span>
<span id="cb2-15">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</details>
</div>
<p>Now, when we drag and drop the napari-ready folder, the metadata that you extracted from Seurat will be available to view using the right-hand widget named <code>Color Cells</code> (Figure&nbsp;17).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-color-cells" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-color-cells-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/color-cells.png" class="img-fluid figure-img" width="1167">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-color-cells-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;17: When metadata are available in the _metadata.csv file, it’s possible to color cells based on a cell-level metadata value (<em>e.g.</em>, cell types).
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Conclusion</h1>
<p>In this post we introduced the <code>napari-cosmx</code> plugin, a tool that can be used to interact with exported CosMx SMI data from AtoMx SIP. Our focus was on installation and launching the application. In future posts we’ll do deep-dives on usage and share tips and tricks that we’ve learned along the way. If you would like to see a Napari topic discussed, please create an issue or feature request on <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/labels/napari%20series" target="_blank">github</a> using the <code>Napari series</code> label.</p>
<p>–ERM</p>


</section>

 ]]></description>
  <category>visualization</category>
  <category>napari</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/</guid>
  <pubDate>Wed, 01 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/using-napari-for-cosmx-data/figures/prostate.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>The spatial algorithms zoo: recommended algorithms and efficient code</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-algorithm-zoo/</link>
  <description><![CDATA[ 





<section id="recommended-algorithms-for-spatial-biology" class="level1">
<h1>Recommended algorithms for spatial biology</h1>
<p>Spatial statistics is a well-developed field, with deep statistical methodology and highly efficient open-source tools. In CosMx data, where a single study can contain millions of cells, computational efficiency is vital. Here we recommend some toolkits we’ve found useful:</p>
<section id="table-of-contents" class="level2">
<h2 class="anchored" data-anchor-id="table-of-contents">Table of contents:</h2>
<ol type="1">
<li>Fast nearest-neighbors search</li>
<li>Measuring a gene’s spatial autocorrelation</li>
<li>Measuring spatial correlation between two genes</li>
<li>Counting occurrences within cell neighborhoods</li>
</ol>
</section>
<section id="fast-nearest-neighbors-search" class="level2">
<h2 class="anchored" data-anchor-id="fast-nearest-neighbors-search">Fast nearest-neighbors search: <a name="neighbors"></a></h2>
<section id="returning-the-indexes-and-distances-to-a-cells-k-nearest-neighbors" class="level4">
<h4 class="anchored" data-anchor-id="returning-the-indexes-and-distances-to-a-cells-k-nearest-neighbors">Returning the indexes and distances to a cell’s K-nearest neighbors:</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">neighbors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FNN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get.knnx</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> xy, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2-column matrix of xy locations</span></span>
<span id="cb1-2">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> xy, </span>
<span id="cb1-3">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># returns 2 outputs: a matrix of each cell's nearest neighbor indices (including itself),</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  and a matrix of distances to these neighbors.</span></span></code></pre></div>
</div>
<p>(This also works for neighbors in expression space - just input the top 20 PCs instead of xy locations.)</p>
</section>
<section id="returning-a-sparse-matrix-of-cells-k-nearest-neighbors" class="level4">
<h4 class="anchored" data-anchor-id="returning-a-sparse-matrix-of-cells-k-nearest-neighbors">Returning a sparse matrix of cells’ K-nearest neighbors</h4>
<p>See the function <a href="https://github.com/Nanostring-Biostats/InSituCor/blob/main/R/NeighborhoodCalculations.R">nearestNeighborGraph in the Insitucor package</a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># xy is a 2-column matrix of xy locations</span></span>
<span id="cb2-2">neighbors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InSituCor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nearestNeighborGraph</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span></code></pre></div>
</div>
<p>Note this matrix is populated by <em>distances</em>, not by simple 1/0 values.</p>
</section>
<section id="returning-a-sparse-matrix-of-cells-neighbors-within-a-radius" class="level4">
<h4 class="anchored" data-anchor-id="returning-a-sparse-matrix-of-cells-neighbors-within-a-radius">Returning a sparse matrix of cells’ neighbors within a radius</h4>
<p>See the function <a href="https://github.com/Nanostring-Biostats/InSituCor/blob/main/R/NeighborhoodCalculations.R">radiusBasedGraph in the Insitucor package</a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># xy is a 2-column matrix of xy locations</span></span>
<span id="cb3-2">neighbors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InSituCor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radiusBasedGraph</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span></code></pre></div>
</div>
<p>Note this matrix is populated by <em>distances</em>, not by simple 1/0 values.</p>
</section>
</section>
<section id="measuring-a-genes-spatial-autocorrelation" class="level2">
<h2 class="anchored" data-anchor-id="measuring-a-genes-spatial-autocorrelation">Measuring a gene’s spatial autocorrelation <a name="correlation"></a></h2>
<p>Our goal here is to measure how much a gene’s expression depends on spatial location. Genes with strong spatial dependence are presumably more interesting, deserving human attention. A much-less-than-comprehensive list of methods is below.</p>
<p>Methods:</p>
<ul>
<li>Moran’s I statistic: This is a time-honored method in spatial statistics, published in 1950. Using the analytical rather than the permutation p-value speeds it up greatly, and we find their performance to be similar.</li>
<li><a href="https://github.com/Teichlab/SpatialDE">SpatialDE</a>: the first attempt to measure spatial autocorrelation in spatial transcriptomics. Can be slow.</li>
<li><a href="https://github.com/dcjones/maxspin">Maxspin</a>: A more recent method using machine learning and information theory to get performance improvements. Can be slow.</li>
<li><a href="https://github.com/xzhoulab/SPARK">SPARK-X</a>: Runs at speed similar to Moran’s I.</li>
</ul>
</section>
<section id="measuring-spatial-correlation-between-two-genes" class="level2">
<h2 class="anchored" data-anchor-id="measuring-spatial-correlation-between-two-genes">Measuring spatial correlation between two genes <a name="correlation2"></a></h2>
<p>When two or more genes are spatially correlated it can be of high biological interest. These genes might regulate each other via cell-cell communication, or they could be jointly regulated by some latent variable in the microenvironment.</p>
<p>Methods for measuring spatial correlation between genes include:</p>
<ul>
<li>Lee’s L: another spatial statistics classic.</li>
<li><a href="https://github.com/Teichlab/SpatialDE">SpatialDE</a></li>
</ul>
<p>However, we have found methods like the above to be unsatisfying, since genes with cell-type-specific expression end up sharing strong spatial correlations. E.g. CD19 and MS4A1 are expressed mainly by B-cells, so if B-cells are spatially clustered, then these genes will be spatially correlated, but for biologically trivial reasons. To isolate more interesting spatial correlations, we developed: - <a href="https://github.com/Nanostring-Biostats/insitucor">InSituCor</a>. This is our recommended approach. It can analyze hundreds of thousands of cells and thousands of genes in minutes.</p>
</section>
<section id="counting-occurrences-within-cell-neighborhoods" class="level2">
<h2 class="anchored" data-anchor-id="counting-occurrences-within-cell-neighborhoods">Counting occurrences within cell neighborhoods <a name="counting"></a></h2>
<p>Analysts will often want to score cells for how often something occurs in their neighborhoods. For example, you might want to know how many T-cell neighbors each cell has, or how many transcripts of a gene surround it.</p>
<p>The below code demonstrates how to use the spatstat::marktable function to do this.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "xy"" is a 2-column matrix of cell locations</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "clust"" is a vector of cell type assignments</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a point process object:</span></span>
<span id="cb4-4">pp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> spatstat.geom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ppp</span>(xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xrange =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yrange =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]))</span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marks</span>(pp) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clust</span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marks</span>(pp) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marks</span>(pp))</span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># count neighbors of each db cluster:</span></span>
<span id="cb4-8">mt05 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> spatstat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marktable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> pp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exclude=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(mt05) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(use))</span></code></pre></div>
</div>


</section>
</section>

 ]]></description>
  <category>algorithms</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-algorithm-zoo/</guid>
  <pubDate>Wed, 20 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Cell typing: what we’ve found to work</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-basics/</link>
  <description><![CDATA[ 





<section id="cell-typing-basics" class="level1">
<h1>Cell typing basics</h1>
<section id="choice-of-cell-typing-algorithm" class="level2">
<h2 class="anchored" data-anchor-id="choice-of-cell-typing-algorithm">Choice of cell typing algorithm</h2>
<p>We cell type most studies using one of the following approaches:</p>
<ol type="1">
<li>Insitutype</li>
<li>Leiden clustering</li>
<li>Seurat’s label transfer algorithm</li>
</ol>
<section id="insitutype" class="level4">
<h4 class="anchored" data-anchor-id="insitutype">Insitutype:</h4>
<p>We created Insitutype for cell typing in CosMx data. It can perform unsupervised clustering, supervised cell typing if given a matrix of reference profiles, or semi-supervised cell typing to call pre-defined cell types alongside new clusters. Insitutype’s models the evidence provided by every gene in a cell’s profile; this makes it excel in cells / datasets with less signal.</p>
<p>Insitutype resources:</p>
<ul>
<li>https://github.com/Nanostring-Biostats/insitutype (see the <a href="https://github.com/Nanostring-Biostats/InSituType/blob/main/FAQs.md" target="_blank">FAQs.md</a> for detailed advice)</li>
<li><a href="https://www.biorxiv.org/content/10.1101/2022.10.19.512902v1">https://www.biorxiv.org/content/10.1101/2022.10.19.512902v1</a></li>
<li>A collection of cell profile reference matrices will be posted on https://github.com/Nanostring-Biostats in early 2024.</li>
</ul>
</section>
<section id="leiden-clustering" class="level4">
<h4 class="anchored" data-anchor-id="leiden-clustering">Leiden clustering:</h4>
<p>A single-cell clustering mainstay. Unsupervised clustering only. Often run from principal components of the expression data. Seurat, Giotto and igraph all have convenient implementations.</p>
</section>
<section id="label-transfer-algorithms" class="level4">
<h4 class="anchored" data-anchor-id="label-transfer-algorithms">Label transfer algorithms</h4>
<p>If a full scRNA-seq reference dataset is available, and if no new cell types are expected in the CosMx data, then these algorithms can work well. We have found Seurat’s implementation to work in some studies.</p>
</section>
</section>
<section id="general-cell-typing-notes" class="level2">
<h2 class="anchored" data-anchor-id="general-cell-typing-notes">General cell typing notes</h2>
<ul>
<li>Leiden clustering and UMAP tend to see the world the same way - that is, they’re both based on networks connecting similar cells. This makes Leiden results agree well with the UMAP, whether or not they are truly more accurate. In other words, don’t take the UMAP as an impartial arbiter of cell typing truth.</li>
<li>Insitutype tends to be the most resistant to batch effects; methods that rely on PCs tend to be the most easily fooled by batch effects.</li>
<li>Most studies require careful scrutiny of cell typing results. Often clusters have to be merged or subclustered before results are satisfactory. See the Insitutype <a href="https://github.com/Nanostring-Biostats/InSituType/blob/main/FAQs.md" target="_blank">FAQs.md</a> for a detailed discussion of how to QC &amp; refine cell typing results. Many of these QCs are useful for results of other methods.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>cell typing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-basics/</guid>
  <pubDate>Tue, 12 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>On the use of marker genes</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/on-cell-typing-with-marker-genes/</link>
  <description><![CDATA[ 





<section id="on-cell-typing-with-marker-genes" class="level1">
<h1>On cell typing with marker genes</h1>
<p>Our basic recommendation is this: relying on a few marker genes alone will not produce successful cell typing.</p>
<p>Spatial transcriptomics data has two features that make marker genes challenging to use.</p>
<ol type="1">
<li><p>Background: cells’ expression profiles can include two kinds of false counts: these platforms sometimes see transcripts that aren’t present (false detections), and errors in cell segmentation lead transcripts from one cell to be assigned to its neighbor. Both these phenomena lead to marker genes being counted in cells where they aren’t truly present.</p></li>
<li><p>Variable signal strength / false negative detection: tissues and cells vary widely in how efficiently existing RNA molecules are read. Thus genes with low expression are easily missed in many cells.</p></li>
</ol>
<p>Applying the above phenomena to FOXP3, the canonical marker for Treg cells, we can envision non-Treg cells with spurious FOXP3 coming from false detections or contamination from a neighboring Treg (error mode 1 above), and we can imagine Treg cells where FOXP3 isn’t detected (error mode 2 above). A cell typing regime that applied an expression threshold to FOXP3 would be unacceptably error-prone.</p>
<p>Instead of using marker genes, we recommend cell typing using most or all of cells’ expression profiles. The data for a single gene in a single cell is noisy, but the evidence from a complete expression profile is much more stable. Given clusters derived from all or most of your panel, marker genes are useful for annotating clusters. E.g., if a cluster is enriched in FOXP3, you can safely label it Tregs.</p>
<p>As an advanced approach, we have had success cell typing using <em>smoothed</em> expression of marker genes. We replace each cell’s observed profile with the average profile of the 20+ cells that have the most similar expression profiles to it. This essentially performs a variance-bias tradeoff: we bias a cell to look like its neighbors in expression space, but we greatly cut down the noise in the expression level. Cell typing based on marker genes in this smoothed data can be successful.</p>


</section>

 ]]></description>
  <category>cell typing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/on-cell-typing-with-marker-genes/</guid>
  <pubDate>Tue, 12 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Big datasets: strategies for memory-efficient analysis</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/big-data/</link>
  <description><![CDATA[ 





<section id="strategies-for-big-datasets" class="level1">
<h1>Strategies for big datasets</h1>
<p>CosMx data can be truly huge, containing millions of cells and thousands of genes. This prevents many typical analysis strategies, including many toolkits designed for scRNA-seq data. Here we’ll discuss ways to work with big datasets.</p>
<section id="strategy-1-be-intentional-about-what-data-you-bring-into-memory" class="level2">
<h2 class="anchored" data-anchor-id="strategy-1-be-intentional-about-what-data-you-bring-into-memory">Strategy 1: be intentional about what data you bring into memory</h2>
<p>No analysis method uses all your data at once. So for any given analysis, pull in only what you need. See below for a discussion of data types and how to handle them.</p>
<section id="data-types" class="level3">
<h3 class="anchored" data-anchor-id="data-types">Data types:</h3>
<p>CosMx data comes several varieties:</p>
<section id="large-sparse-matrices" class="level4">
<h4 class="anchored" data-anchor-id="large-sparse-matrices">Large sparse matrices:</h4>
<p>These are matrices of cells * genes or cells * cells, populated mainly by 0 values. Sparse matrix formats allow us to only store information for non-zero values, greatly reducing memory demands. When working with sparse matrices, try to use methods that can act on this data type.</p>
<p>Examples of sparse matrices:</p>
<ul>
<li>raw counts (sparse matrix, integers)</li>
<li>norm counts (sparse, but now decimals. can round to 3 or 4 decimal places to control size a bit)</li>
<li>cells’ neighbor relationships (e.g.&nbsp;50 entries per cell for 50 nearest neighbors)</li>
</ul>
</section>
<section id="large-dense-datasets" class="level4">
<h4 class="anchored" data-anchor-id="large-dense-datasets">Large dense datasets:</h4>
<p>Some data is inevitably dense. Ideally, only pull this data into memory when you need it.</p>
<p>Examples of dense data:</p>
<ul>
<li>Cell metadata. Storing as a data table is most efficient. Since this usually has dozens of variables that are unnecessary for most analyses, you can also keep in memory only the columns you need for a given analysis.</li>
<li>Principal components. Unavoidably large. To save memory, store only the top 20-50 PCs, throwing out the information-light remaining PCs.</li>
</ul>
</section>
<section id="data-small-enough-to-not-be-a-problem" class="level4">
<h4 class="anchored" data-anchor-id="data-small-enough-to-not-be-a-problem">Data small enough to not be a problem:</h4>
<ul>
<li>umap</li>
<li>xy locations</li>
</ul>
</section>
<section id="other-data" class="level4">
<h4 class="anchored" data-anchor-id="other-data">Other data:</h4>
<ul>
<li>Transcript locations. This comes in an enormous data table. In most studies you’ll want to handle this in chunks, e.g.&nbsp;one FOV / region at a time, or one gene.</li>
<li>Cell polygons. Another very large file. Since you can’t resolve polygon shapes for tens of thousands of cells at once, this data is only useful for very zoomed-in plots, allowing you to only keep say thousands of cell polygons in memory at once.</li>
</ul>
</section>
</section>
</section>
<section id="strategy-2-process-each-tissue-slide-separately" class="level2">
<h2 class="anchored" data-anchor-id="strategy-2-process-each-tissue-slide-separately">Strategy 2: process each tissue / slide separately</h2>
<p>It doesn’t take too many slides before you can no longer fit the raw count matrix into R. At this point, you’re forced to work in batches. One good approach is to run fundamental analyses - e.g.&nbsp;QC, normalization, dimension reduction and cell typing - one sample at a time, saving your results to disk. Then for study-wide analyzes you can load in only the data you need, e.g.&nbsp;xy positions and cell types, or normalized expression values from a single gene.</p>
</section>
<section id="strategy-3-use-data-objects-that-handle-moving-data-between-disk-and-memory" class="level2">
<h2 class="anchored" data-anchor-id="strategy-3-use-data-objects-that-handle-moving-data-between-disk-and-memory">Strategy 3: use data objects that handle moving data between disk and memory</h2>
<p>Data formats do exist for this purpose, and they’re developing rapidly. Consider:</p>
<ul>
<li>TileDB / TileDBSOMA TileDBsc</li>
<li>SeuratDisk</li>
<li>Seurat v5 has some functionality for switching between disk and memory, but not yet enough to support a full spatial analysis.</li>
</ul>
</section>
<section id="strategy-4-efficient-computing" class="level2">
<h2 class="anchored" data-anchor-id="strategy-4-efficient-computing">Strategy 4: efficient computing</h2>
<p>Large datasets take time to analyze, there is no way around that, but some simple computation choices can make a big impact.</p>
<p>Ensure your data stays in sparse matrix format; watch out for dense coercions. The Matrix package is great to ensure sparsity.</p>
<p>Parallelization is your friend but be sure to understand how much data you are reading into memory in each core. While as fast as possible is always nice, hardware does have its limitations.</p>


</section>
</section>

 ]]></description>
  <category>big data</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/big-data/</guid>
  <pubDate>Mon, 04 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>QC and normalization of RNA data</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/normalization/</link>
  <description><![CDATA[ 





<div class="cell">
<style type="text/css">
.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}

</style>
</div>
<section id="qc-and-normalization-of-cosmx-rna-data" class="level1">
<h1>QC and normalization of CosMx RNA data</h1>
<p>We’ve tried a lot of options here, and we’ve settled on very simple procedures for most cases.</p>
<p>We discuss them here. To see them implemented in an R-based analysis workflow, see the <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/vignette-basic-analysis/assets/2.-QC-and-normalization.html">QC and normalization page</a> of our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/vignette-basic-analysis/">basic analysis vignette</a></p>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/normalization/figures/puzzle.png" class="center"> <!-- ![](figures/puzzle.png =250x) --></p>
<section id="qc" class="level2">
<h2 class="anchored" data-anchor-id="qc">QC</h2>
<p>QC in CosMx is motivated by known error modes. Here’s a list of major things that can go wrong:</p>
<ul>
<li>A cell might be undersampled, leading to excessively low counts (Either only a tip of it is in the slide, or detection efficiency is poor within it.) Solution: remove the cell.</li>
<li>A cell might suffer extremely high background, either due to intrinsic tissue stickiness (e.g.&nbsp;associated with necrosis) or due to optical artifacts. Solution: remove the cell.</li>
<li>Errors in cell segmentation might assign multiple cells to the same “cell”. Solution: remove these multiplets.</li>
<li>A FOV might have low counts overall. This can be caused by imaging trouble, tissue peeling, and probably other causes. Solution: remove FOVs with low quality data. (Removing low quality cells isn’t good enough. If a bad FOV has half its cells removed, the spatial pattern implied by the remaining cells, those lucky enough to survive the cell QC, won’t be representative.)</li>
<li>A FOV’s expression profile can be distorted by image registration errors or by imaging artifacts, e.g.&nbsp;fluorescence hiding spots of one color. These FOVs can be analyzable if you’re careful, but given the uncertainty they pose it’s usually best to remove them.</li>
</ul>
<p><strong>QC logic would then proceed as follows:</strong></p>
<ol type="1">
<li>Remove cells with too few counts. We use fairly generous thresholds of 20 counts for our 1000plex assay and 50 counts for the 6000plex assay. Higher / more stringent thresholds would also be reasonable.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># counts is the matrix of raw expression profiles, cells in rows, genes in columns</span></span>
<span id="cb1-2">totalcounts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(counts)  </span>
<span id="cb1-3">drop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> totalcounts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span></code></pre></div>
</div>
<ol start="2" type="1">
<li><p>Remove cells with high outlier areas. You can use Grubb’s test to detect outliers, or you can draw a histogram of cell areas and choose a cutoff on your own.</p></li>
<li><p>Remove FOVs with poor counts. AtoMx removes FOVs based on their mean count per cell, or by a user-specified quantile of counts per cell. Filtering on % of cells flagged by the above criteria would also be reasonable.</p></li>
<li><p>Flag FOVs with distorted expression profiles. AtoMx now flags FOVs where z-stack registration is highly unstable, but older runs won’t benefit from this update, and other effects, namely background fluorescence, can still distort FOV expression profiles. To implement steps 3 and 4, you can find our FOV QC tool <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/fov-qc/">here</a>.</p></li>
</ol>
</section>
<section id="normalization" class="level2">
<h2 class="anchored" data-anchor-id="normalization">Normalization</h2>
<p>Unlike scRNA-seq data, where cells tend to have somewhat consistent expression levels, spatial platforms vary widely in how much of a cell’s RNA they detect. Normalizing out this effect is important for some analyses. We make the reasonable assumption that a cell’s detection efficiency is well-estimated by its total counts, which implies we can scale each cell’s profile by its total counts:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># counts is the matrix of raw expression profiles, cells in rows, genes in columns</span></span>
<span id="cb2-2">totalcounts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(counts)  </span>
<span id="cb2-3">norm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sweep</span>(counts, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmax</span>(totalcounts, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>)</span></code></pre></div>
</div>
<p>Note the <code>pmax(totalcounts, 20)</code> term in the above. This puts a floor on how much we’ll up-scale a cell. This prevents us from taking cells with very few counts and drastically scaling them up, which gives them misleadingly distinct expression profiles.</p>
<p>(Note: some authors have pointed out that there’s information to be had in a cell’s total counts. For example, cancer cells tend to have high overall RNA expression. When we normalize, we lose this information. But we’ve usually found that a small price to pay to control the variability in total counts that arises from unwanted technical sources. Discerning between highly distinct cell types like cancer vs.&nbsp;immune cells is generally easy, while uncovering trends within a cell type is a harder task where controlling technical variability can be enabling.)</p>
</section>
<section id="other-transformations" class="level2">
<h2 class="anchored" data-anchor-id="other-transformations">Other transformations</h2>
<p>For most cases, we recommend keeping data on the linear scale, i.e.&nbsp;normalizing without further transformation. This approach keeps the data on an easily-interpretable scale and tends to perform well in analyses.</p>
<p>For some purposes, further transformations can make sense. Transformations like square root or “log1p” (log(1 + x)) inflate the variability of low counts and shrink the variability of high counts. In some datasets, this can make UMAPs and distance-based clustering methods like Leiden and Louvain perform better. Seurat and AtoMx both offer a log1p transformation.</p>
<p>AtoMx also offers a “Pearson residuals” transformation. This transformation can produce great UMAPs, but is only viable in small studies: because it creates a dense (not sparse) expression matrix, it produces an expression matrix with a huge memory footprint, potentially crashing your analysis environment.</p>
<p>If you do perform a non-linear transformation to run UMAP or Leiden clustering, consider using linear-scale data elsewhere in your analysis.</p>


</section>
</section>

 ]]></description>
  <category>quality control</category>
  <category>normalization</category>
  <category>pre-processing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/normalization/</guid>
  <pubDate>Mon, 29 Jan 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/normalization/figures/puzzle.png" medium="image" type="image/png" height="145" width="144"/>
</item>
<item>
  <title>Functions for condensing FOVs and tissues to minimize whitespace</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visuals-reduce-whitespace/</link>
  <description><![CDATA[ 





<section id="condensing-cells-in-xy-space-for-better-plotting" class="level2">
<h2 class="anchored" data-anchor-id="condensing-cells-in-xy-space-for-better-plotting">Condensing cells in xy space for better plotting</h2>
<p>Minimizing whitespace while plotting cells in xy space is a constant challenge. A single tissue will often have discontinuous FOVs, and aligning multiple tissues in a sensible way can be onerous.</p>
<p>Here, for example, are FOVs collected from core needle biopsies, where the cells can barely be seen against the vast expanse of white space.</p>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visuals-reduce-whitespace/figures/fig1.png" class="img-fluid"></p>
<p>As a partial solution, see the function consenseXY(), provided <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/blob/Main/_code/condensing%20xy%20space/CondenseXY.R" target="_blank">here</a>.</p>
<p>The main wrapper function contains an algorithm for pulling together FOVs from the same tissue, and an algorithm for tiling tissues across a plot.</p>
<p>Here’s a toy example of FOV groups from two tissues before and after the algorithm (color denotes tissue ID):</p>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visuals-reduce-whitespace/figures/fig2.png" class="img-fluid"></p>
<p>It’s not perfect, but it’s an improvement on the original spacing with no thought or manual labor.</p>
<p>Warning: the FOV condensing code is inefficiently written and takes longer than it should, though it’s still faster than working by hand.</p>


</section>

 ]]></description>
  <category>visualization</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visuals-reduce-whitespace/</guid>
  <pubDate>Fri, 26 Jan 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visuals-reduce-whitespace/figures/fig2.png" medium="image" type="image/png" height="88" width="144"/>
</item>
<item>
  <title>Visualize cellular neighborhood in gallery mode</title>
  <dc:creator>Lidan Wu</dc:creator>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/</link>
  <description><![CDATA[ 





<section id="visualize-cellular-neighborhood-in-gallery-mode" class="level2">
<h2 class="anchored" data-anchor-id="visualize-cellular-neighborhood-in-gallery-mode">Visualize cellular neighborhood in gallery mode</h2>
<p>A complete CosMx dataset will contain cell metadata, morphology/protein images and cell label results of cell segmentation. We’ve created a toolkit for visualizing the neighborhood of query cells in terms of protein staining, cell segmentation border, numeric and categorical metadata. (Note: we are <em>not</em> performing cell typing or cell segmetnation here, just drawing boundaries from the existing cell label/segmetnation results.)</p>
<p>You can find the package <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/NeighVizGallery" target="_blank">here</a>. See the corresponding <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/blob/Main/_code/NeighVizGallery/vignettes/tutorial.R" target="_blank">tutorial</a> inside the package for more details.</p>
<p>The inputs required:</p>
<ul>
<li><p>cell metadata with unique cell_ID in format of <code>c_[slide]_[fov]_[CellId]</code>.</p></li>
<li><p>Either file path to <code>CellStatsDir</code> that contains per FOV level of cell label images, morphology C902 images and optional <code>ProteinDir</code> that contains per FOV level of protein images.</p></li>
<li><p>Or file path to <code>napari-cosmx</code> dataset which contains stitched images for cell label, morphology and optional protein images of entire slide.</p></li>
</ul>
<p>This code expects the file format output generated by CosMx Single Molecular Imager (SMI) and <code>napari-cosMx</code> plugin. Here are the example data/folder structure of the required input files.</p>
<ul>
<li>Example cell metadata:</li>
</ul>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/figures/fig1.png" class="img-fluid"></p>
<ul>
<li><p>Example <code>CellStatsDir</code> and <code>ProteinDir</code> under raw data folder of given slide.</p>
<ol type="1">
<li>Each FOV subfolder under <code>CellStatsDir</code> contains cell label images of given FOV.</li>
</ol></li>
</ul>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/figures/fig2.png" class="img-fluid"></p>
<ol start="2" type="1">
<li><code>Morphology2D</code> subfolder under <code>CellStatsDir</code> contains multi-channel morphology images of each FOV.</li>
</ol>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/figures/fig3.png" class="img-fluid"></p>
<ol start="3" type="1">
<li>Each FOV subfolder under <code>ProteinDir</code> contains a folder called <code>ProteinImages</code>, which has single-channel images for all the protein profiled for the given FOV.</li>
</ol>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/figures/fig4.png" class="img-fluid"></p>
<ul>
<li>Example <code>napari-cosmx</code> dataset with stitched images: <code>labels</code> for cell labels, <code>protein/[proteinName]</code> for single-channel protein images, other folders (e.g.&nbsp;<code>DNA</code>) for single-channel morphology images.</li>
</ul>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/figures/fig5.png" class="img-fluid"></p>
<p>Below are the example outputs of plotting query cells’ neighborhood:</p>
<ul>
<li>Plotting morphology images and cell borers of query cells’s neighborhood</li>
</ul>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/figures/fig6.png" class="img-fluid"></p>
<ul>
<li>Plotting numeric and categorical metadata of query cells’ neighborhood</li>
</ul>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/figures/fig7.png" class="img-fluid"></p>


</section>

 ]]></description>
  <category>visualization</category>
  <category>napari</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/</guid>
  <pubDate>Wed, 24 Jan 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/visualize-cellular-neighborhood-in-gallery-mode/figures/fig6.png" medium="image" type="image/png" height="188" width="144"/>
</item>
<item>
  <title>The impact of segmentation error on differential expression analyses</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error/</link>
  <description><![CDATA[ 





<section id="impact-of-segmentation-errors-on-de" class="level1">
<h1>Impact of segmentation errors on DE</h1>
<p>Cell segmentation is always imperfect, leaving some cells’ expression profiles contaminated with transcripts properly belonging to other cells. For many analyses, this is a largely ignorable source of noise. But for differential expression (DE) analyses, it’s reliably confounding (both statistically and emotionally).</p>
<section id="the-problem" class="level2">
<h2 class="anchored" data-anchor-id="the-problem">The problem:</h2>
<p>For an example, see the below cartoon, where a T-cell’s expression profile is contaminated with transcripts from the tumor cells surrounding it:</p>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error/figures/fig1.png" class="img-fluid"></p>
<p>Now say we want to compare T-cells in the tumor bed vs.&nbsp;T-cells in the stroma. We’ll find that T-cells in the tumor bed are enriched in genes expressed by cancer cells (e.g.&nbsp;keratins), and similarly, T-cells in the stroma will be enriched in genes expressed by stroma cells (e.g.&nbsp;collagens). In practice, spurious findings like these are often the most significant genes emerging from a DE analysis.</p>
</section>
<section id="how-to-think-about-segmentation-error" class="level2">
<h2 class="anchored" data-anchor-id="how-to-think-about-segmentation-error">How to think about segmentation error:</h2>
<p>Segmentation error can be considered a missing term in a differential expression model. Say you’re answering the above T-cell question by fitting the below model on T-cells:</p>
<p><em>E(observed KRT9 expression) = B0 + B1 </em> (in_tumor)*</p>
<p>When you do this, you’re omitting an important term for contamination:</p>
<p><em>E(observed KRT9 expression) = B0 + B1 </em> (in_tumor) + (<strong>N_contaminating_transcripts</strong>)*</p>
<p>Your model is underspecified, so its results are biased. As you measure more cells and gain statistical power, you only gain more confidence in your biased results.</p>
</section>
<section id="countermeasures" class="level2">
<h2 class="anchored" data-anchor-id="countermeasures">Countermeasures</h2>
<p>We are preparing a manuscript detailing countermeasures to segmentation. Stay tuned for a link to it, or ask us for code if you can’t wait. For now, two pieces of advice:</p>
<ol type="1">
<li><strong>Don’t bother analyzing genes that are dominated by contamination.</strong> If you’re analyzing T-cells in tumors, then analyzing KRT9 is hopeless: T-cells barely express it, while the surrounding tumor cells will express it highly. Whatever expression you do see in T-cells will be dominated by contamination. A simple approach: if you’re e.g.&nbsp;analyzing T-cells, then compare each gene’s expression within T-cells to its expression in spatial neighbors of T-cells. The ratio between these numbers tells you how much of that gene’s expression in T-cells is real vs.&nbsp;contamination. Apply a reasonable threshold, and don’t even analyze genes with much higher expression around T-cells than inside T-cells.</li>
<li><strong>Estimate each cell’s contamination, and adjust for it in your models.</strong> Adding e.g.&nbsp;a term holding a gene’s expression in each cell’s neighbors achieves this well; more complex transformations of this term can be more optimal (see our upcoming paper). However, this only ameliorates, not solves, the bias from contamination. Because your estimated contamination term is a noisy approximation to true contamination, your models will estimate an attenuated effect size for the contamination term, and it won’t remove all the bias.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>segmentation</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error/</guid>
  <pubDate>Wed, 24 Jan 2024 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
